======== SOURCE ========
fn(): uint {
	a := 1
	b := 2

	c := &a
	d := &b

	swap(c, d)

	return a - b
}
======== UNSCHEDULED SON ========
%7 = CInt: 2 [, %9]
%4 = CInt: 1 [, %6]
%2 = Mem: %0 [, %6, %5, %8, %10, %12]
%10 = Local: 8, %2 [, %11, %14]
%12 = Local: 8, %2 [, %13, %15]
%11 = Store: %1, %9, %10, %5 [, %13]
%9 = Store: %1, %6, %8, %7 [, %11]
%6 = Store: %1, %2, %5, %4 [, %9]
%0 = Start: idepth: 0 [, %1, %2]
%8 = Local: 8, %2 [, %9, %20, %13]
%5 = Local: 8, %2 [, %6, %19, %11]
%15 = Load: %13, %12 [, %16]
%14 = Load: %13, %10 [, %16]
%13 = Store: %1, %11, %12, %8 [, %16, %14, %15]
%1 = Entry: idepth: 0, %0 [, %16, %6, %9, %11, %13]
%20 = Load: %18, %8 [, %21]
%19 = Load: %18, %5 [, %21]
%16 = Call: id: 1, idepth: 0, %1, %13, %14, %15 [, %17]
%21 = BinOp: isub, %19, %20 [, %22]
%18 = Mem: %17 [, %22, %19, %20]
%17 = CallEnd: idepth: 0, %16 [, %22, %18]
%22 = Return: idepth: 0, %17, %18, %21 []

======== OPTIMIZED SON ========
%4 = CInt: 1 [, %6]
%2 = Mem: %0 [, %6, %5, %8]
%7 = CInt: 2 [, %9]
%6 = Store: %1, %2, %5, %4 [, %9]
%0 = Start: idepth: 0 [, %1, %2]
%8 = Local: 8, %2 [, %9, %20, %16]
%5 = Local: 8, %2 [, %6, %19, %16]
%9 = Store: %1, %6, %8, %7 [, %16]
%1 = Entry: idepth: 0, %0 [, %6, %9, %16]
%20 = Load: %18, %8 [, %21]
%19 = Load: %18, %5 [, %21]
%16 = Call: id: 1, idepth: 0, %1, %9, %5, %8 [, %17]
%21 = BinOp: isub, %19, %20 [, %22]
%18 = Mem: %17 [, %22, %19, %20]
%17 = CallEnd: idepth: 0, %16 [, %18, %22]
%22 = Return: idepth: 0, %17, %18, %21 []

======== SCHEDULED SON ========
%0 = Start: idepth: 0
%1 = Entry: idepth: 1, %0
  %5 = Local: 8, %2
  %4 = CInt: 1
  %8 = Local: 8, %2
  %7 = CInt: 2
  %6 = Store: %2, %5, %4
  %9 = Store: %6, %8, %7
  %16 = Call: id: 1, idepth: 2, %9, %5, %8
%17 = CallEnd: idepth: 3, %16
  %18 = Mem
  %19 = Load: %18, %5
  %20 = Load: %18, %8
  %21 = BinOp: isub, %19, %20
  %22 = Return: idepth: 0, %18, %21

======== REGISTER SELECTION ========
{ 1, 2, 3, 4, 1, 1, 1, 1, 1, 2, 1, 1 }

======== SOURCE ========
fn(a: ^uint, b: ^uint): void {
	tmp := *b;
	*b = *a;
	*a = tmp
}
======== UNSCHEDULED SON ========
%16 = Load: %13, %15 [, %17]
%15 = Load: %13, %4 [, %16]
%14 = Load: %13, %7 [, %17]
%12 = Local: 8, %2 [, %13, %19]
%11 = Load: %9, %10 [, %13]
%10 = Load: %9, %7 [, %11]
%7 = Local: 8, %2 [, %9, %14, %10]
%4 = Local: 8, %2 [, %6, %18, %15]
%8 = Arg: 1, %0 [, %9]
%5 = Arg: 0, %0 [, %6]
%2 = Mem: %0 [, %6, %4, %7, %12]
%19 = Load: %17, %12 [, %20]
%18 = Load: %17, %4 [, %20]
%17 = Store: %1, %13, %14, %16 [, %20, %18, %19]
%13 = Store: %1, %9, %12, %11 [, %17, %14, %15, %16]
%9 = Store: %1, %6, %7, %8 [, %13, %10, %11]
%6 = Store: %1, %2, %4, %5 [, %9]
%0 = Start: idepth: 0 [, %1, %2, %5, %8]
%20 = Store: %1, %17, %18, %19 [, %21]
%1 = Entry: idepth: 0, %0 [, %21, %6, %9, %13, %17, %20]
%21 = Return: idepth: 0, %1, %20 []

======== OPTIMIZED SON ========
%16 = Load: %2, %5 [, %17]
%8 = Arg: 1, %0 [, %17, %11]
%2 = Mem: %0 [, %11, %17, %16]
%11 = Load: %2, %8 [, %20]
%5 = Arg: 0, %0 [, %20, %16]
%17 = Store: %1, %2, %8, %16 [, %20]
%0 = Start: idepth: 0 [, %1, %2, %5, %8]
%20 = Store: %1, %17, %5, %11 [, %21]
%1 = Entry: idepth: 0, %0 [, %21, %20, %17]
%21 = Return: idepth: 0, %1, %20 []

======== SCHEDULED SON ========
%0 = Start: idepth: 0
%1 = Entry: idepth: 1, %0
  %8 = Arg: 1
  %5 = Arg: 0
  %11 = Load: %2, %8
  %16 = Load: %2, %5
  %17 = Store: %2, %8, %16, %16
  %20 = Store: %17, %5, %11
  %21 = Return: idepth: 0, %20

======== REGISTER SELECTION ========
{ 1, 2, 3, 4, 1, 1, 1 }

======== CODEGEN ========
main:
         st $31, $254, -40, 40
     addi64 $254, $254, -56
     addi64 $32, $254, 0
       li64 $33, 1
     addi64 $34, $254, 8
       li64 $35, 2
         st $33, $254, 0, 8
         st $35, $254, 8, 8
         cp $2, $32
         cp $3, $34
        jal $31, $0, :swap
         ld $32, $254, 0, 8
         ld $33, $254, 8, 8
      sub64 $32, $32, $33
         cp $1, $32
     addi64 $254, $254, 56
         ld $31, $254, -40, 40
         tx
swap:
         cp $14, $2
         cp $13, $3
         ld $15, $13, 0, 8
         ld $16, $14, 0, 8
         st $16, $13, 0, 8
         st $15, $14, 0, 8
       jala $0, $31, 0

======== EXECUTION ========
      st $31=0, $254=10240, -40, 40
  addi64 $254=10240, $254, -56
  addi64 $32=0, $254=10184, 0
    li64 $33=0, 1
  addi64 $34=0, $254=10184, 8
    li64 $35=0, 2
      st $33=1, $254=10184, 0, 8
      st $35=2, $254=10184, 8, 8
      cp $2=0, $32=10184
      cp $3=0, $34=10192
     jal $31=0, $0=0, 65
      cp $14=0, $2=10184
      cp $13=0, $3=10192
      ld $15=0, $13=10192, 0, 8
      ld $16=0, $14=10184, 0, 8
      st $16=1, $13=10192, 0, 8
      st $15=2, $14=10184, 0, 8
    jala $0=0, $31=105, 0
      ld $32=10184, $254=10184, 0, 8
      ld $33=1, $254=10184, 8, 8
   sub64 $32=2, $32, $33=1
      cp $1=0, $32=1
  addi64 $254=10184, $254, 56
      ld $31=105, $254=10240, -40, 40
      tx