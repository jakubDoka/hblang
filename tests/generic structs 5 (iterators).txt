main:
         st $31, $254, -152, 152
     addi64 $254, $254, -296
        lra $32, $0, :main.abcd
       li64 $33, 4
        lra $34, $0, :main.ab
       li64 $35, 2
        lra $36, $0, :main.cd
       li64 $37, 0
       li64 $38, 1
       li64 $39, 3
     addi64 $40, $254, 16
     addi64 $41, $254, 68
     addi64 $42, $254, 84
     addi64 $43, $254, 100
     addi64 $44, $43, 8
     addi64 $45, $43, 24
     addi64 $46, $254, 140
     addi64 $47, $254, 0
         st $32, $254, 0, 8
         st $33, $254, 8, 8
         st $34, $254, 16, 8
         st $35, $254, 24, 8
     addi64 $32, $254, 142
     addi64 $34, $254, 64
     addi64 $48, $254, 32
         st $36, $254, 32, 8
         st $35, $254, 40, 8
        bmc $40, $41, 16
        bmc $47, $42, 16
         st $37, $254, 100, 1
        bmc $40, $44, 16
        bmc $48, $45, 16
     addi64 $36, $254, 48
     addi64 $40, $254, 66
d:       cp $3, $41
        jal $31, $0, :main(Next = main.Next).next
         cp $44, $1
         cp $45, $2
         st $44, $254, 140, 1
         st $45, $254, 141, 1
         ld $44, $254, 140, 1
       andi $44, $44, 255
        not $44, $44
       andi $44, $44, 255
        jeq $44, $0, :4
        bmc $47, $36, 16
        bmc $36, $42, 16
a:       cp $3, $42
        jal $31, $0, :main(Next = main.Next).next
         cp $32, $1
         cp $35, $2
         st $32, $254, 64, 1
         st $35, $254, 65, 1
         ld $32, $254, 64, 1
       andi $32, $32, 255
        not $32, $32
       andi $32, $32, 255
        jeq $32, $0, :5
         cp $32, $37
        jmp :6
5:       cp $3, $43
        jal $31, $0, :main.Chain(A = main(Next = main.Next), B = main(Next = main.Next)).next
         cp $32, $1
         cp $35, $2
         st $32, $254, 66, 1
         st $35, $254, 67, 1
         ld $32, $254, 66, 1
         ld $35, $254, 64, 1
       andi $32, $32, 255
        not $36, $32
       andi $36, $36, 255
        jeq $36, $0, :8
         cp $32, $39
        jmp :6
8:       ld $36, $254, 67, 1
         ld $38, $254, 65, 1
       andi $35, $35, 255
       andi $36, $36, 255
       andi $38, $38, 255
       cmpu $32, $32, $35
      cmpui $32, $32, 0
       cmpu $35, $36, $38
      cmpui $35, $35, 0
         or $32, $32, $35
       andi $32, $32, 255
        jeq $32, $0, :9
         cp $32, $33
        jmp :6
9:      jmp :a
4:       cp $3, $42
        jal $31, $0, :main(Next = main.Next).next
         cp $44, $1
         cp $45, $2
         st $44, $254, 142, 1
         st $45, $254, 143, 1
         ld $44, $254, 142, 1
         ld $45, $254, 140, 1
       andi $44, $44, 255
        not $48, $44
       andi $48, $48, 255
        jeq $48, $0, :b
         cp $32, $38
        jmp :6
b:       ld $48, $254, 141, 1
         ld $49, $254, 143, 1
       andi $45, $45, 255
       andi $48, $48, 255
       andi $49, $49, 255
       cmpu $44, $45, $44
      cmpui $44, $44, 0
       cmpu $45, $48, $49
      cmpui $45, $45, 0
         or $44, $44, $45
       andi $44, $44, 255
        jeq $44, $0, :c
         cp $32, $35
6:       cp $1, $32
     addi64 $254, $254, 296
         ld $31, $254, -152, 152
         tx
c:      jmp :d
main.Chain(A = main(Next = main.Next), B = main(Next = main.Next)).next:
         st $31, $254, -96, 96
     addi64 $254, $254, -102
         cp $32, $3
       li64 $33, 0
       li64 $34, 1
       li64 $35, 2
     addi64 $36, $32, 8
     addi64 $37, $32, 24
     addi64 $38, $254, 0
     addi64 $39, $254, 4
     addi64 $40, $254, 2
15:       ld $41, $32, 0, 1
       sxt8 $41, $41
        jne $41, $33, :e
         cp $3, $36
        jal $31, $0, :main(Next = main.Next).next
         cp $41, $1
         cp $42, $2
         st $41, $254, 2, 1
         st $42, $254, 3, 1
         ld $41, $254, 2, 1
       andi $42, $41, 255
        jeq $42, $0, :f
         ld $32, $254, 3, 1
         cp $33, $32
         cp $32, $41
        jmp :10
f:       st $34, $32, 0, 1
        jmp :11
e:      jne $41, $34, :12
         cp $3, $37
        jal $31, $0, :main(Next = main.Next).next
         cp $41, $1
         cp $42, $2
         st $41, $254, 4, 1
         st $42, $254, 5, 1
         ld $41, $254, 4, 1
       andi $42, $41, 255
        jeq $42, $0, :13
         ld $32, $254, 5, 1
         cp $33, $32
         cp $32, $41
10:      jmp :14
13:       st $35, $32, 0, 1
11:      jmp :15
12:      jal $31, $0, :main.Next(T = u8).none
         cp $32, $1
         cp $33, $2
         st $32, $254, 0, 1
         st $33, $254, 1, 1
         ld $32, $254, 1, 1
         ld $33, $254, 0, 1
        swa $32, $33
14:       cp $1, $32
         cp $2, $33
     addi64 $254, $254, 102
         ld $31, $254, -96, 96
       jala $0, $31, 0
main.Next(T = u8).none:
     addi64 $254, $254, -2
       li64 $13, 0
       li64 $14, -6148914691236517206
     addi64 $15, $254, 0
         st $13, $254, 0, 1
         st $14, $254, 1, 1
         ld $13, $254, 1, 1
         ld $14, $254, 0, 1
         cp $1, $14
         cp $2, $13
     addi64 $254, $254, 2
       jala $0, $31, 0
main(Next = main.Next).next:
         st $31, $254, -48, 48
     addi64 $254, $254, -68
         cp $32, $3
       li64 $33, 0
         ld $34, $32, 8, 8
       cmpu $33, $34, $33
      cmpui $33, $33, 0
        not $33, $33
       andi $33, $33, 255
     addi64 $34, $254, 2
        jeq $33, $0, :17
        jal $31, $0, :main.Next(T = u8).none
         cp $32, $1
         cp $33, $2
     addi64 $34, $254, 0
         st $32, $254, 0, 1
         st $33, $254, 1, 1
         ld $32, $254, 0, 1
         ld $33, $254, 1, 1
        jmp :18
17:       ld $33, $32, 0, 8
         ld $33, $33, 0, 1
         cp $3, $33
        jal $31, $0, :main.Next(T = u8).some
         cp $33, $1
         cp $35, $2
         st $33, $254, 2, 1
         st $35, $254, 3, 1
         ld $33, $32, 8, 8
         ld $35, $32, 0, 8
     addi64 $33, $33, -1
     addi64 $35, $35, 1
     addi64 $36, $254, 4
         st $35, $254, 4, 8
         st $33, $254, 12, 8
        bmc $36, $32, 16
         ld $32, $254, 2, 1
         ld $33, $254, 3, 1
18:       cp $1, $32
         cp $2, $33
     addi64 $254, $254, 68
         ld $31, $254, -48, 48
       jala $0, $31, 0
main.Next(T = u8).some:
     addi64 $254, $254, -2
         cp $14, $3
       li64 $13, 1
     addi64 $15, $254, 0
         st $13, $254, 0, 1
         st $14, $254, 1, 1
         ld $13, $254, 1, 1
         ld $14, $254, 0, 1
         cp $1, $14
         cp $2, $13
     addi64 $254, $254, 2
       jala $0, $31, 0