main:
         st $31, $254, -144, 144
     addi64 $254, $254, -284
     addi64 $32, $254, 100
     addi64 $33, $254, 0
        lra $34, $0, :main.abcd
         st $34, $254, 0, 8
       li64 $34, 4
         st $34, $254, 8, 8
     addi64 $35, $254, 84
       li64 $36, 0
     addi64 $37, $254, 16
        lra $38, $0, :main.ab
         st $38, $254, 16, 8
       li64 $38, 2
         st $38, $254, 24, 8
     addi64 $39, $32, 8
        lra $40, $0, :main.cd
     addi64 $41, $254, 32
         st $40, $254, 32, 8
         st $38, $254, 40, 8
     addi64 $40, $254, 68
        bmc $37, $40, 16
        bmc $33, $35, 16
         st $36, $254, 100, 1
        bmc $37, $39, 16
     addi64 $37, $32, 24
        bmc $41, $37, 16
     addi64 $37, $254, 48
     addi64 $39, $254, 64
       li64 $41, 1
     addi64 $42, $254, 66
       li64 $43, 3
d:       cp $1, $40
        jal $31, $0, :main(Next = main.Next).next
         cp $44, $1
         cp $45, $2
         st $44, $254, 66, 1
         st $45, $254, 67, 1
       andi $44, $44, 255
        not $44, $44
       andi $44, $44, 255
        jeq $44, $0, :4
        bmc $33, $37, 16
        bmc $37, $35, 16
a:       cp $1, $35
        jal $31, $0, :main(Next = main.Next).next
         cp $33, $1
         cp $37, $2
         st $33, $254, 64, 1
         st $37, $254, 65, 1
       andi $33, $33, 255
        not $33, $33
       andi $33, $33, 255
        jeq $33, $0, :5
         cp $32, $36
        jmp :6
5:       cp $1, $32
        jal $31, $0, :main.Chain(A = main(Next = main.Next), B = main(Next = main.Next)).next
         cp $33, $1
         cp $37, $2
       andi $33, $33, 255
        not $38, $33
       andi $38, $38, 255
         ld $40, $254, 65, 1
         ld $41, $254, 64, 1
        jeq $38, $0, :8
         cp $32, $43
        jmp :6
8:     andi $38, $41, 255
       andi $40, $40, 255
       andi $37, $37, 255
       cmpu $33, $33, $38
      cmpui $33, $33, 0
       andi $33, $33, 1
       cmpu $37, $37, $40
      cmpui $37, $37, 0
       andi $37, $37, 1
         or $33, $33, $37
       andi $33, $33, 255
        jeq $33, $0, :9
         cp $32, $34
        jmp :6
9:      jmp :a
4:       cp $1, $35
        jal $31, $0, :main(Next = main.Next).next
         cp $44, $1
         cp $45, $2
       andi $44, $44, 255
        not $46, $44
       andi $46, $46, 255
         ld $47, $254, 67, 1
         ld $48, $254, 66, 1
        jeq $46, $0, :b
         cp $32, $41
        jmp :6
b:     andi $46, $48, 255
       andi $45, $45, 255
       andi $47, $47, 255
       cmpu $44, $46, $44
      cmpui $44, $44, 0
       andi $44, $44, 1
       cmpu $45, $47, $45
      cmpui $45, $45, 0
       andi $45, $45, 1
         or $44, $44, $45
       andi $44, $44, 255
        jeq $44, $0, :c
         cp $32, $38
6:       cp $1, $32
     addi64 $254, $254, 284
         ld $31, $254, -144, 144
         tx
c:      jmp :d
main.Chain(A = main(Next = main.Next), B = main(Next = main.Next)).next:
         st $31, $254, -80, 80
     addi64 $254, $254, -80
         cp $32, $1
       li64 $33, 0
       li64 $34, 1
        li8 $35, 2
     addi64 $36, $32, 8
     addi64 $37, $32, 24
15:       ld $38, $32, 0, 1
       sxt8 $38, $38
        jne $38, $33, :e
         cp $1, $36
        jal $31, $0, :main(Next = main.Next).next
         cp $38, $1
         cp $39, $2
       andi $40, $38, 255
        jeq $40, $0, :f
         cp $32, $38
         cp $33, $39
        jmp :10
f:       st $34, $32, 0, 1
        jmp :11
e:      jne $38, $34, :12
         cp $1, $37
        jal $31, $0, :main(Next = main.Next).next
         cp $38, $1
         cp $39, $2
       andi $40, $38, 255
        jeq $40, $0, :13
         cp $32, $38
         cp $33, $39
10:      jmp :14
13:       st $35, $32, 0, 1
11:      jmp :15
12:      jal $31, $0, :main.Next(T = u8).none
         cp $32, $1
         cp $33, $2
14:       cp $1, $32
         cp $2, $33
     addi64 $254, $254, 80
         ld $31, $254, -80, 80
       jala $0, $31, 0
main.Next(T = u8).none:
        li8 $13, 0
        li8 $14, -86
         cp $1, $13
         cp $2, $14
       jala $0, $31, 0
main(Next = main.Next).next:
         st $31, $254, -56, 56
     addi64 $254, $254, -74
         cp $32, $1
       li64 $33, 0
         ld $34, $32, 8, 8
        jne $34, $33, :17
        jal $31, $0, :main.Next(T = u8).none
         cp $32, $1
         cp $33, $2
        jmp :18
17:       ld $33, $32, 0, 8
         ld $33, $33, 0, 1
         cp $1, $33
        jal $31, $0, :main.Next(T = u8).some
         cp $33, $2
         cp $34, $1
         ld $35, $32, 8, 8
         ld $36, $32, 0, 8
     addi64 $37, $254, 0
         st $34, $254, 0, 1
         st $33, $254, 1, 1
     addi64 $33, $36, 1
     addi64 $34, $254, 2
         st $33, $254, 2, 8
     addi64 $33, $35, -1
         st $33, $254, 10, 8
        bmc $34, $32, 16
         ld $32, $254, 1, 1
         ld $33, $254, 0, 1
        swa $32, $33
18:       cp $1, $32
         cp $2, $33
     addi64 $254, $254, 74
         ld $31, $254, -56, 56
       jala $0, $31, 0
main.Next(T = u8).some:
         cp $13, $1
       li64 $14, 1
         cp $1, $14
         cp $2, $13
       jala $0, $31, 0