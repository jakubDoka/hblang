======== SOURCE ========
fn(): int {
	a: i8 = 0
	b: u8 = 0
	c: i16 = a - 1
	d: u16 = b + 1
	e: i32 = c - 1
	f: u32 = d + 1
	return f + e
}
======== UNSCHEDULED SON ========
%9 = CInt: 1 [, %12, %18, %24, %30]
%24 = UnOp: sext, %9 [, %25]
%23 = UnOp: sext, %22 [, %25]
%18 = UnOp: uext, %9 [, %19]
%17 = UnOp: uext, %16 [, %19]
%12 = UnOp: sext, %9 [, %13]
%11 = UnOp: sext, %10 [, %13]
%30 = UnOp: uext, %9 [, %31]
%29 = UnOp: uext, %28 [, %31]
%28 = Load: %27, %20 [, %29]
%25 = BinOp: isub, %23, %24 [, %27]
%26 = Local: 4, %2 [, %27, %35]
%22 = Load: %21, %14 [, %23]
%19 = BinOp: iadd, %17, %18 [, %21]
%20 = Local: 2, %2 [, %21, %28]
%16 = Load: %15, %7 [, %17]
%13 = BinOp: isub, %11, %12 [, %15]
%14 = Local: 2, %2 [, %15, %22]
%10 = Load: %8, %5 [, %11]
%7 = Local: 1, %2 [, %8, %16]
%4 = CInt: 0 [, %6, %8]
%5 = Local: 1, %2 [, %6, %10]
%2 = Mem: %0 [, %6, %5, %7, %14, %20, %26, %32]
%37 = UnOp: sext, %35 [, %38]
%36 = UnOp: uext, %34 [, %38]
%35 = Load: %33, %26 [, %37]
%34 = Load: %33, %32 [, %36]
%31 = BinOp: iadd, %29, %30 [, %33]
%32 = Local: 4, %2 [, %33, %34]
%27 = Store: %1, %21, %26, %25 [, %33, %28]
%21 = Store: %1, %15, %20, %19 [, %27, %22]
%15 = Store: %1, %8, %14, %13 [, %21, %16]
%8 = Store: %1, %6, %7, %4 [, %15, %10]
%6 = Store: %1, %2, %5, %4 [, %8]
%0 = Start: idepth: 0 [, %1, %2]
%38 = BinOp: iadd, %36, %37 [, %39]
%33 = Store: %1, %27, %32, %31 [, %39, %34, %35]
%1 = Entry: idepth: 0, %0 [, %39, %6, %8, %15, %21, %27, %33]
%39 = Return: idepth: 0, %1, %33, %38 []

======== OPTIMIZED SON ========
%4 = CInt: 0 [, %17, %11]
%11 = UnOp: sext, %4 [, %13]
%12 = UnOp: sext, %9 [, %13]
%18 = UnOp: uext, %9 [, %19]
%17 = UnOp: uext, %4 [, %19]
%13 = BinOp: isub, %11, %12 [, %23]
%9 = CInt: 1 [, %12, %18, %24, %30]
%19 = BinOp: iadd, %17, %18 [, %29]
%24 = UnOp: sext, %9 [, %25]
%23 = UnOp: sext, %13 [, %25]
%30 = UnOp: uext, %9 [, %31]
%29 = UnOp: uext, %19 [, %31]
%25 = BinOp: isub, %23, %24 [, %37]
%31 = BinOp: iadd, %29, %30 [, %36]
%37 = UnOp: sext, %25 [, %38]
%36 = UnOp: uext, %31 [, %38]
%0 = Start: idepth: 0 [, %1, %2]
%38 = BinOp: iadd, %36, %37 [, %39]
%2 = Mem: %0 [, %39]
%1 = Entry: idepth: 0, %0 [, %39]
%39 = Return: idepth: 0, %1, %2, %38 []

======== SCHEDULED SON ========
%0 = Start: idepth: 0
%1 = Entry: idepth: 1, %0
  %4 = CInt: 0
  %9 = CInt: 1
  %17 = UnOp: uext, %4
  %11 = UnOp: sext, %4
  %18 = UnOp: uext, %9
  %30 = UnOp: uext, %9
  %12 = UnOp: sext, %9
  %24 = UnOp: sext, %9
  %19 = BinOp: iadd, %17, %18
  %13 = BinOp: isub, %11, %12
  %29 = UnOp: uext, %19
  %23 = UnOp: sext, %13
  %31 = BinOp: iadd, %29, %30
  %25 = BinOp: isub, %23, %24
  %36 = UnOp: uext, %31
  %37 = UnOp: sext, %25
  %38 = BinOp: iadd, %36, %37
  %39 = Return: idepth: 0, %2, %38

======== CODEGEN ========
main:
    li64 $13, 0
    li64 $14, 1
    andi $15, $13, 255
    sxt8 $13, $13
    andi $16, $14, 65535
    andi $17, $14, 65535
   sxt16 $18, $14
   sxt16 $14, $14
   add16 $15, $15, $16
   sub16 $13, $13, $18
    andi $15, $15, 65535
   sxt16 $13, $13
   add32 $15, $15, $17
   sub32 $13, $13, $14
    andi $14, $15, 4294967295
   sxt32 $13, $13
   add64 $13, $14, $13
      cp $1, $13
      tx

======== EXECUTION ========
    li64 $13=0, 0
    li64 $14=0, 1
    andi $15=0, $13=0, 255
    sxt8 $13=0, $13
    andi $16=0, $14=1, 65535
    andi $17=0, $14=1, 65535
   sxt16 $18=0, $14=1
   sxt16 $14=1, $14
   add16 $15=0, $15, $16=1
   sub16 $13=0, $13, $18=1
    andi $15=1, $15, 65535
   sxt16 $13=65535, $13
   add32 $15=1, $15, $17=1
   sub32 $13=18446744073709551615, $13, $14=1
    andi $14=1, $15=2, 4294967295
   sxt32 $13=4294967294, $13
   add64 $13=18446744073709551614, $14=2, $13
      cp $1=0, $13=0
      tx