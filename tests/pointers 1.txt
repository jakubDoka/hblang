======== SOURCE ========
fn(): uint {
	a := 1
	b := &a
	modify(b)
	drop(a);
	*b += 2
	stack_reclamation_edge_case := 0
	return *b - 4
}
======== UNSCHEDULED SON ========
%4 = CInt: 1 [, %6]
%1 = Entry: idepth: 0, %0 [, %10, %6, %8]
%9 = Load: %8, %7 [, %10]
%8 = Store: %1, %6, %7, %5 [, %10, %9]
%6 = Store: %1, %2, %5, %4 [, %8]
%0 = Start: idepth: 0 [, %1, %2]
%18 = CInt: 2 [, %20]
%5 = Local: 8, %2 [, %6, %13, %8]
%10 = Call: id: 1, idepth: 0, %1, %8, %9 [, %11]
%7 = Local: 8, %2 [, %8, %25, %9, %17]
%2 = Mem: %0 [, %6, %5, %7, %23]
%20 = BinOp: iadd, %19, %18 [, %21]
%19 = Load: %16, %17 [, %20]
%17 = Load: %16, %7 [, %19, %21]
%13 = Load: %12, %5 [, %14]
%12 = Mem: %11 [, %14, %13]
%11 = CallEnd: idepth: 0, %10 [, %14, %12]
%26 = CInt: 4 [, %28]
%27 = Load: %24, %25 [, %28]
%25 = Load: %24, %7 [, %27]
%22 = CInt: 0 [, %24]
%23 = Local: 8, %2 [, %24]
%21 = Store: %15, %16, %17, %20 [, %24]
%16 = Mem: %15 [, %21, %17, %19]
%14 = Call: id: 2, idepth: 0, %11, %12, %13 [, %15]
%28 = BinOp: isub, %27, %26 [, %29]
%24 = Store: %15, %21, %23, %22 [, %29, %25, %27]
%15 = CallEnd: idepth: 0, %14 [, %29, %16, %21, %24]
%29 = Return: idepth: 0, %15, %24, %28 []

======== OPTIMIZED SON ========
%4 = CInt: 1 [, %6]
%1 = Entry: idepth: 0, %0 [, %6, %10]
%0 = Start: idepth: 0 [, %1, %2]
%10 = Call: id: 1, idepth: 0, %1, %6, %5 [, %11]
%6 = Store: %1, %2, %5, %4 [, %10]
%2 = Mem: %0 [, %6, %5]
%19 = Load: %16, %5 [, %30]
%13 = Load: %12, %5 [, %14]
%12 = Mem: %11 [, %14, %13]
%11 = CallEnd: idepth: 0, %10 [, %12, %14]
%27 = Load: %21, %5 [, %31]
%30 = ImmBinOp: imm: 2, op: addi64, %19 [, %21]
%5 = Local: 8, %2 [, %6, %13, %27, %10, %19, %21]
%16 = Mem: %15 [, %21, %19]
%14 = Call: id: 2, idepth: 0, %11, %12, %13 [, %15]
%31 = ImmBinOp: imm: -4, op: addi64, %27 [, %29]
%21 = Store: %15, %16, %5, %30 [, %27, %29]
%15 = CallEnd: idepth: 0, %14 [, %16, %21, %29]
%29 = Return: idepth: 0, %15, %21, %31 []

======== SCHEDULED SON ========
%0 = Start: idepth: 0
%1 = Entry: idepth: 1, %0
  %5 = Local: 8, %2
  %4 = CInt: 1
  %6 = Store: %2, %5, %4
  %10 = Call: id: 1, idepth: 2, %6, %5
%11 = CallEnd: idepth: 3, %10
  %12 = Mem
  %13 = Load: %12, %5
  %14 = Call: id: 2, idepth: 4, %12, %13, %13
%15 = CallEnd: idepth: 5, %14
  %16 = Mem
  %19 = Load: %16, %5
  %30 = ImmBinOp: imm: 2, op: addi64, %19
  %21 = Store: %16, %5, %30, %19
  %27 = Load: %21, %5
  %31 = ImmBinOp: imm: -4, op: addi64, %27
  %29 = Return: idepth: 0, %21, %31

======== SOURCE ========
fn(a: uint): void {
	return
}
======== UNSCHEDULED SON ========
%5 = Arg: 0, %0 [, %6]
%4 = Local: 8, %2 [, %6]
%2 = Mem: %0 [, %6, %4]
%0 = Start: idepth: 0 [, %1, %2, %5]
%6 = Store: %1, %2, %4, %5 [, %7]
%1 = Entry: idepth: 0, %0 [, %7, %6]
%7 = Return: idepth: 0, %1, %6 []

======== OPTIMIZED SON ========
%0 = Start: idepth: 0 [, %1, %2]
%2 = Mem: %0 [, %7]
%1 = Entry: idepth: 0, %0 [, %7]
%7 = Return: idepth: 0, %1, %2 []

======== SCHEDULED SON ========
%0 = Start: idepth: 0
%1 = Entry: idepth: 0, %0
  %7 = Return: idepth: 0, %2

======== SOURCE ========
fn(a: ^uint): void {
	*a = 2
	return
}
======== UNSCHEDULED SON ========
%4 = Local: 8, %2 [, %6, %7]
%5 = Arg: 0, %0 [, %6]
%2 = Mem: %0 [, %6, %4]
%8 = CInt: 2 [, %9]
%7 = Load: %6, %4 [, %9]
%6 = Store: %1, %2, %4, %5 [, %9, %7]
%0 = Start: idepth: 0 [, %1, %2, %5]
%9 = Store: %1, %6, %7, %8 [, %10]
%1 = Entry: idepth: 0, %0 [, %10, %6, %9]
%10 = Return: idepth: 0, %1, %9 []

======== OPTIMIZED SON ========
%8 = CInt: 2 [, %9]
%5 = Arg: 0, %0 [, %9]
%2 = Mem: %0 [, %9]
%0 = Start: idepth: 0 [, %1, %2, %5]
%9 = Store: %1, %2, %5, %8 [, %10]
%1 = Entry: idepth: 0, %0 [, %10, %9]
%10 = Return: idepth: 0, %1, %9 []

======== SCHEDULED SON ========
%0 = Start: idepth: 0
%1 = Entry: idepth: 1, %0
  %5 = Arg: 0
  %8 = CInt: 2
  %9 = Store: %2, %5, %8
  %10 = Return: idepth: 0, %9

======== CODEGEN ========
main:
         st $31, $254, -24, 24
     addi64 $254, $254, -32
     addi64 $32, $254, 0
       li64 $33, 1
         st $33, $254, 0, 8
         cp $2, $32
        jal $31, $0, :modify
         ld $33, $254, 0, 8
         cp $2, $33
        jal $31, $0, :drop
         ld $33, $254, 0, 8
     addi64 $33, $33, 2
         st $33, $254, 0, 8
         ld $32, $254, 0, 8
     addi64 $32, $32, -4
         cp $1, $32
     addi64 $254, $254, 32
         ld $31, $254, -24, 24
         tx
drop:
       jala $0, $31, 0
modify:
         cp $13, $2
       li64 $14, 2
         st $14, $13, 0, 8
       jala $0, $31, 0

======== EXECUTION ========
      st $31=0, $254=10240, -24, 24
  addi64 $254=10240, $254, -32
  addi64 $32=0, $254=10208, 0
    li64 $33=0, 1
      st $33=1, $254=10208, 0, 8
      cp $2=0, $32=10208
     jal $31=0, $0=0, 130
      cp $13=0, $2=10208
    li64 $14=0, 2
      st $14=2, $13=10208, 0, 8
    jala $0=0, $31=68, 0
      ld $33=1, $254=10208, 0, 8
      cp $2=10208, $33=2
     jal $31=68, $0=0, 96
    jala $0=0, $31=91, 0
      ld $33=2, $254=10208, 0, 8
  addi64 $33=2, $33, 2
      st $33=4, $254=10208, 0, 8
      ld $32=10208, $254=10208, 0, 8
  addi64 $32=4, $32, -4
      cp $1=0, $32=0
  addi64 $254=10208, $254, 32
      ld $31=91, $254=10240, -24, 24
      tx