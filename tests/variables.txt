======== SOURCE ========
fn(): uint {
    ඞ := 1
    b := 2
    ඞ += 1
    return ඞ - b
}
======== UNSCHEDULED SON ========
%9 = Load: %8, %4 [, %10]
%6 = CInt: 2 [, %8]
%7 = Local: 8, %2 [, %8, %13]
%3 = CInt: 1 [, %5, %10]
%2 = Mem: %0 [, %4, %5, %7]
%13 = Load: %11, %7 [, %14]
%12 = Load: %11, %4 [, %14]
%10 = BinOp: +, %9, %3 [, %11]
%4 = Local: 8, %2 [, %5, %9, %11, %12]
%8 = Store: %1, %5, %7, %6 [, %9, %11]
%5 = Store: %1, %2, %4, %3 [, %8]
%0 = Start: idepth: 0 [, %1, %2]
%14 = BinOp: -, %12, %13 [, %15]
%11 = Store: %1, %8, %4, %10 [, %12, %13, %15]
%1 = Entry: idepth: 0, %0 [, %5, %8, %11, %15]
%15 = Return: idepth: 0, %1, %11, %14 []

======== OPTIMIZED SON ========
%3 = CInt: 1 [, %18, %16]
%6 = CInt: 2 [, %17]
%7 = Local: 8, %2 [, %17]
%18 = Store: %2, %4, %3 [, %17]
%2 = Mem: %0 [, %4, %18, %7]
%16 = ImmBinOp: imm: 1, op: addi64, %3 [, %20, %19]
%4 = Local: 8, %2 [, %18, %20]
%17 = Store: %18, %7, %6 [, %20]
%0 = Start: idepth: 0 [, %1, %2]
%19 = ImmBinOp: imm: -2, op: addi64, %16 [, %15]
%20 = Store: %17, %4, %16 [, %15]
%1 = Entry: idepth: 0, %0 [, %15]
%15 = Return: idepth: 0, %1, %20, %19 []

======== SCHEDULED SON ========
%0 = Start: idepth: 0
%1 = Entry: idepth: 1, %0
  %4 = Local: 8, %2
  %3 = CInt: 1
  %7 = Local: 8, %2
  %6 = CInt: 2
  %18 = Store: %2, %4, %3
  %16 = ImmBinOp: imm: 1, op: addi64, %3
  %17 = Store: %18, %7, %6
  %19 = ImmBinOp: imm: -2, op: addi64, %16
  %20 = Store: %17, %4, %16
  %15 = Return: idepth: 0, %20, %19

======== REGISTER SELECTION ========
{ 1, 2, 3, 4, 1, 2, 1, 3, 1, 1 }

======== CODEGEN ========
main:
  addi64 $254, $254, -16
  addi64 $13, $254, 0
    li64 $14, 1
  addi64 $15, $254, 8
    li64 $16, 2
      st $14, $254, 0, 8
  addi64 $14, $14, 1
      st $16, $254, 8, 8
  addi64 $15, $14, -2
      st $14, $254, 0, 8
      cp $1, $15
  addi64 $254, $254, 16
      tx

======== EXECUTION ========
  addi64 $254=10240, $254, -16
  addi64 $13=0, $254=10224, 0
    li64 $14=0, 1
  addi64 $15=0, $254=10224, 8
    li64 $16=0, 2
      st $14=1, $254=10224, 0, 8
  addi64 $14=1, $14, 1
      st $16=2, $254=10224, 8, 8
  addi64 $15=10232, $14=2, -2
      st $14=2, $254=10224, 0, 8
      cp $1=0, $15=0
  addi64 $254=10224, $254, 16
      tx