(module
  (type (;0;) (func (result i64)))
  (func $main (type 0) (result i64)
    (local i32 i32 i32 i32 i32 i32 i32 i32 i64 i64 i64 i64 i64 i64 i64 i64 i64)
    global.get 0
    i64.const 32
    i64.sub
    global.set 0
    global.get 1
    local.set 11
    global.get 0
    i32.wrap_i64
    local.get 11
    i64.store
    i64.const 3
    local.set 10
    global.get 0
    i32.wrap_i64
    local.get 10
    i64.store offset=8
    i64.const 1
    local.set 9
    i32.const 0
    local.set 1
    i32.const 0
    local.set 0
    i64.const 0
    local.set 8
    global.get 0
    i32.wrap_i64
    local.get 8
    i64.store offset=16
    loop  ;; label = @1
      block  ;; label = @2
        global.get 0
        i32.wrap_i64
        i64.load offset=16
        local.set 12
        local.get 12
        local.get 9
        i64.ge_u
        local.set 2
        local.get 2
        i32.eqz
        br_if 0 (;@2;)
        i64.const 32
        global.get 0
        i64.add
        global.set 0
        local.get 8
        return
      end
      block  ;; label = @2
        block  ;; label = @3
          global.get 0
          i32.wrap_i64
          i64.load
          i32.wrap_i64
          i32.load8_u
          local.set 6
          local.get 6
          i32.const 255
          i32.and
          local.set 5
          local.get 5
          local.get 0
          i32.ne
          local.set 4
          local.get 1
          local.get 4
          i32.and
          local.set 3
          local.get 3
          i32.eqz
          br_if 0 (;@3;)
          global.get 0
          i32.wrap_i64
          local.get 8
          i64.store offset=24
          loop  ;; label = @4
            block  ;; label = @5
              global.get 0
              i32.wrap_i64
              i64.load offset=24
              local.set 13
              local.get 13
              local.get 8
              i64.eq
              local.set 7
              local.get 7
              i32.eqz
              br_if 0 (;@5;)
              br 3 (;@2;)
            end
            local.get 13
            local.get 8
            i64.mul
            local.set 14
            global.get 0
            i32.wrap_i64
            local.get 14
            i64.store offset=24
            br 0 (;@4;)
          end
        end
      end
      global.get 0
      i32.wrap_i64
      i64.load offset=16
      local.set 16
      local.get 16
      local.get 9
      i64.add
      local.set 15
      global.get 0
      i32.wrap_i64
      local.get 15
      i64.store offset=16
      br 0 (;@1;)
    end
    unreachable)
  (table (;0;) 0 funcref)
  (memory (;0;) 4)
  (global (;0;) (mut i64) (i64.const 131072))
  (global (;1;) i64 (i64.const 131072))
  (export "__stack_pointer" (global 0))
  (export "main" (func $main))
  (elem (;0;) (i32.const 0) func)
  (data (;0;) (i32.const 131072) "abc"))