(module
  (type (;0;) (func (result i64)))
  (type (;1;) (func (param i64)))
  (func $main (type 0) (result i64)
    (local i32 i32 i32 i32 i32 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64)
    global.get 0
    i64.const 16
    i64.sub
    global.set 0
    block  ;; label = @1
      block  ;; label = @2
        block  ;; label = @3
          block  ;; label = @4
            block  ;; label = @5
              block  ;; label = @6
                i64.const 0
                global.get 0
                i64.add
                local.set 9
                i64.const 0
                local.set 8
                local.get 9
                i32.wrap_i64
                local.get 8
                i64.store
                local.get 9
                i32.wrap_i64
                i64.load
                local.set 7
                i64.const 1
                local.set 6
                local.get 7
                local.get 6
                i64.add
                local.set 5
                local.get 7
                local.get 6
                i64.eq
                local.set 0
                local.get 0
                i32.eqz
                br_if 0 (;@6;)
                local.get 9
                i32.wrap_i64
                local.get 5
                i64.store
                local.get 6
                local.set 12
                br 1 (;@5;)
              end
              local.get 9
              i32.wrap_i64
              local.get 5
              i64.store
              local.get 9
              i32.wrap_i64
              i64.load
              local.set 10
              local.get 10
              local.get 6
              i64.ne
              local.set 1
              local.get 1
              i32.eqz
              br_if 1 (;@4;)
              i64.const 2
              local.set 11
              local.get 11
              local.set 12
            end
            local.get 12
            local.set 21
            br 1 (;@3;)
          end
          i64.const 3
          local.set 14
          i64.const 4
          local.set 13
          loop  ;; label = @4
            block  ;; label = @5
              block  ;; label = @6
                block  ;; label = @7
                  local.get 9
                  i32.wrap_i64
                  i64.load
                  local.set 16
                  local.get 16
                  local.get 6
                  i64.add
                  local.set 15
                  local.get 16
                  local.get 14
                  i64.eq
                  local.set 2
                  local.get 2
                  i32.eqz
                  br_if 0 (;@7;)
                  local.get 9
                  i32.wrap_i64
                  local.get 15
                  i64.store
                  br 1 (;@6;)
                end
                block  ;; label = @7
                  local.get 16
                  local.get 13
                  i64.eq
                  i32.eqz
                  br_if 0 (;@7;)
                  block  ;; label = @8
                    local.get 9
                    i32.wrap_i64
                    local.get 15
                    i64.store
                    i64.const 5
                    local.set 18
                    local.get 9
                    i32.wrap_i64
                    i64.load
                    local.set 17
                    local.get 17
                    local.get 18
                    i64.ne
                    local.set 3
                    local.get 3
                    i32.eqz
                    br_if 0 (;@8;)
                    local.get 14
                    local.set 21
                    br 3 (;@5;)
                  end
                  i64.const 8
                  global.get 0
                  i64.add
                  local.set 19
                  local.get 19
                  i32.wrap_i64
                  local.get 8
                  i64.store
                  local.get 19
                  call $defer_1.main.ret_defer
                  block  ;; label = @8
                    local.get 19
                    i32.wrap_i64
                    i64.load
                    local.set 20
                    local.get 20
                    local.get 6
                    i64.ne
                    local.set 4
                    local.get 4
                    i32.eqz
                    br_if 0 (;@8;)
                    local.get 13
                    local.set 22
                    br 6 (;@2;)
                  end
                  local.get 8
                  local.set 23
                  br 6 (;@1;)
                end
                local.get 9
                i32.wrap_i64
                local.get 15
                i64.store
              end
              br 1 (;@4;)
            end
          end
        end
        local.get 21
        local.set 22
      end
      local.get 22
      local.set 23
    end
    i64.const 16
    global.get 0
    i64.add
    global.set 0
    local.get 23
    return
    unreachable)
  (func $defer_1.main.ret_defer (type 1) (param i64)
    (local i64 i64 i64 i64 i64)
    global.get 0
    i64.const 8
    i64.sub
    global.set 0
    i64.const 0
    global.get 0
    i64.add
    local.set 5
    local.get 5
    i32.wrap_i64
    local.get 0
    i64.store
    i64.const 1
    local.set 4
    local.get 5
    i32.wrap_i64
    i64.load
    local.set 3
    local.get 3
    i32.wrap_i64
    i64.load
    local.set 2
    local.get 2
    local.get 4
    i64.add
    local.set 1
    local.get 3
    i32.wrap_i64
    local.get 1
    i64.store
    i64.const 8
    global.get 0
    i64.add
    global.set 0
    return
    unreachable)
  (table (;0;) 0 funcref)
  (memory (;0;) 3)
  (global (;0;) (mut i64) (i64.const 131072))
  (export "__stack_pointer" (global 0))
  (export "main" (func $main))
  (elem (;0;) (i32.const 0) func)
  (data (;0;) (i32.const 131072) ""))