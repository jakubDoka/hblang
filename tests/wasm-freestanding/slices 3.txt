(module
  (type (;0;) (func (result i64)))
  (type (;1;) (func (param i64 i64) (result i64 i64)))
  (func $main (type 0) (result i64)
    (local i32 i32 i32 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64)
    global.get 0
    i64.const 72
    i64.sub
    global.set 0
    i32.const 1
    local.set 2
    global.get 0
    i32.wrap_i64
    local.get 2
    i32.store8 offset=64
    i32.const 3
    local.set 1
    i64.const 1
    local.set 4
    i64.const 0
    local.set 3
    i32.const 2
    local.set 0
    global.get 0
    i32.wrap_i64
    local.get 0
    i32.store8 offset=65
    global.get 0
    i32.wrap_i64
    local.get 1
    i32.store8 offset=66
    global.get 0
    i32.wrap_i64
    local.get 4
    i64.store
    global.get 0
    i32.wrap_i64
    local.get 3
    i64.store offset=8
    global.get 0
    i32.wrap_i64
    i64.load
    global.get 0
    i32.wrap_i64
    i64.load offset=8
    call $slices_3.reverse
    local.set 8
    local.set 9
    global.get 0
    i32.wrap_i64
    local.get 9
    i64.store offset=16
    global.get 0
    i32.wrap_i64
    local.get 8
    i64.store offset=24
    i64.const 64
    global.get 0
    i64.add
    local.set 7
    global.get 0
    i32.wrap_i64
    local.get 7
    i64.store offset=32
    i64.const 3
    local.set 6
    global.get 0
    i32.wrap_i64
    local.get 6
    i64.store offset=40
    global.get 0
    i32.wrap_i64
    i64.load offset=40
    local.set 5
    global.get 0
    i32.wrap_i64
    i64.load offset=32
    local.get 5
    call $slices_3.reverse
    local.set 14
    local.set 15
    global.get 0
    i32.wrap_i64
    local.get 15
    i64.store offset=48
    global.get 0
    i32.wrap_i64
    local.get 14
    i64.store offset=56
    global.get 0
    i32.wrap_i64
    i32.load8_u offset=64
    i32.const 255
    i32.and
    i64.extend_i32_u
    local.set 13
    global.get 0
    i32.wrap_i64
    i32.load8_u offset=66
    i32.const 255
    i32.and
    i64.extend_i32_u
    local.set 12
    global.get 0
    i32.wrap_i64
    i32.load8_u offset=65
    i32.const 255
    i32.and
    i64.extend_i32_u
    local.set 11
    local.get 13
    local.get 11
    i64.sub
    local.get 12
    i64.sub
    local.set 10
    i64.const 72
    global.get 0
    i64.add
    global.set 0
    local.get 10
    return
    unreachable)
  (func $slices_3.reverse (type 1) (param i64 i64) (result i64 i64)
    (local i32 i32 i32 i32 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64)
    global.get 0
    i64.const 40
    i64.sub
    global.set 0
    block  ;; label = @1
      block  ;; label = @2
        global.get 0
        i32.wrap_i64
        local.get 0
        i64.store
        global.get 0
        i32.wrap_i64
        local.get 1
        i64.store offset=8
        i64.const 0
        local.set 7
        global.get 0
        i32.wrap_i64
        i64.load offset=8
        local.set 6
        local.get 7
        local.get 6
        i64.eq
        i32.eqz
        br_if 0 (;@2;)
        global.get 0
        i32.wrap_i64
        i64.load
        local.set 8
        local.get 8
        local.set 24
        local.get 6
        local.set 23
        br 1 (;@1;)
      end
      i32.const 0
      local.set 2
      i64.const 1
      local.set 10
      local.get 6
      local.get 10
      i64.sub
      local.set 9
      global.get 0
      i32.wrap_i64
      local.get 9
      i64.store offset=16
      global.get 0
      i32.wrap_i64
      local.get 7
      i64.store offset=24
      global.get 0
      i32.wrap_i64
      local.get 2
      i32.store8 offset=32
      loop  ;; label = @2
        block  ;; label = @3
          global.get 0
          i32.wrap_i64
          i64.load offset=16
          local.set 13
          global.get 0
          i32.wrap_i64
          i64.load
          local.set 12
          global.get 0
          i32.wrap_i64
          i64.load offset=24
          local.set 11
          local.get 11
          local.get 13
          i64.lt_u
          i32.eqz
          br_if 0 (;@3;)
          local.get 12
          local.get 11
          i64.add
          i32.wrap_i64
          i32.load8_u
          local.set 5
          global.get 0
          i32.wrap_i64
          local.get 5
          i32.store8 offset=32
          global.get 0
          i32.wrap_i64
          i64.load
          local.set 21
          global.get 0
          i32.wrap_i64
          i64.load offset=24
          local.set 20
          local.get 21
          local.get 20
          i64.add
          local.set 19
          global.get 0
          i32.wrap_i64
          i64.load offset=16
          local.set 18
          local.get 21
          local.get 18
          i64.add
          i32.wrap_i64
          i32.load8_u
          local.set 4
          local.get 19
          i32.wrap_i64
          local.get 4
          i32.store8
          global.get 0
          i32.wrap_i64
          i64.load
          global.get 0
          i32.wrap_i64
          i64.load offset=16
          i64.add
          local.set 17
          global.get 0
          i32.wrap_i64
          i32.load8_u offset=32
          local.set 3
          local.get 17
          i32.wrap_i64
          local.get 3
          i32.store8
          global.get 0
          i32.wrap_i64
          i64.load offset=24
          local.set 16
          local.get 10
          local.get 16
          i64.add
          local.set 15
          global.get 0
          i32.wrap_i64
          local.get 15
          i64.store offset=24
          global.get 0
          i32.wrap_i64
          i64.load offset=16
          local.get 10
          i64.sub
          local.set 14
          global.get 0
          i32.wrap_i64
          local.get 14
          i64.store offset=16
          br 1 (;@2;)
        end
        global.get 0
        i32.wrap_i64
        i64.load offset=8
        local.set 22
        local.get 12
        local.set 24
        local.get 22
        local.set 23
      end
    end
    i64.const 40
    global.get 0
    i64.add
    global.set 0
    local.get 24
    local.get 23
    return
    unreachable)
  (table (;0;) 0 funcref)
  (memory (;0;) 3)
  (global (;0;) (mut i64) (i64.const 131072))
  (export "__stack_pointer" (global 0))
  (export "main" (func $main))
  (elem (;0;) (i32.const 0) func)
  (data (;0;) (i32.const 131072) ""))