(module
  (type (;0;) (func (result i64)))
  (func $main (type 0) (result i64)
    (local i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64)
    global.get 0
    i64.const 80
    i64.sub
    global.set 0
    i64.const 0
    local.set 3
    global.get 0
    i32.wrap_i64
    local.get 3
    i64.store offset=64
    i64.const 0
    global.get 0
    i64.add
    local.set 2
    i64.const 8
    local.set 1
    i64.const 1
    local.set 0
    loop  ;; label = @1
      block  ;; label = @2
        global.get 0
        i32.wrap_i64
        i64.load offset=64
        local.set 4
        local.get 4
        local.get 1
        i64.eq
        i32.eqz
        br_if 0 (;@2;)
        global.get 0
        i32.wrap_i64
        local.get 3
        i64.store offset=64
        global.get 0
        i32.wrap_i64
        local.get 3
        i64.store offset=72
        loop  ;; label = @3
          block  ;; label = @4
            global.get 0
            i32.wrap_i64
            i64.load offset=72
            local.set 6
            global.get 0
            i32.wrap_i64
            i64.load offset=64
            local.set 5
            local.get 5
            local.get 1
            i64.eq
            i32.eqz
            br_if 0 (;@4;)
            i64.const 80
            global.get 0
            i64.add
            global.set 0
            local.get 6
            return
          end
          local.get 5
          local.get 1
          i64.mul
          local.get 2
          i64.add
          local.set 11
          local.get 11
          i32.wrap_i64
          i64.load
          local.set 10
          local.get 6
          local.get 10
          i64.add
          local.set 9
          global.get 0
          i32.wrap_i64
          local.get 9
          i64.store offset=72
          global.get 0
          i32.wrap_i64
          i64.load offset=64
          local.set 8
          local.get 0
          local.get 8
          i64.add
          local.set 7
          global.get 0
          i32.wrap_i64
          local.get 7
          i64.store offset=64
          br 0 (;@3;)
        end
      end
      local.get 4
      local.get 1
      i64.mul
      local.get 2
      i64.add
      local.set 13
      local.get 13
      i32.wrap_i64
      local.get 4
      i64.store
      global.get 0
      i32.wrap_i64
      i64.load offset=64
      local.get 0
      i64.add
      local.set 12
      global.get 0
      i32.wrap_i64
      local.get 12
      i64.store offset=64
      br 0 (;@1;)
    end
    unreachable)
  (table (;0;) 0 funcref)
  (memory (;0;) 3)
  (global (;0;) (mut i64) (i64.const 131072))
  (export "__stack_pointer" (global 0))
  (export "main" (func $main))
  (elem (;0;) (i32.const 0) func)
  (data (;0;) (i32.const 131072) ""))