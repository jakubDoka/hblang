(module
  (type (;0;) (func (result i64)))
  (func $main (type 0) (result i64)
    (local i32 i32 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64)
    global.get 0
    i64.const 136
    i64.sub
    global.set 0
    i64.const 64
    global.get 0
    i64.add
    local.set 19
    i64.const 2
    local.set 18
    i64.const 3
    local.set 17
    i64.const 1
    local.set 16
    global.get 0
    i32.wrap_i64
    local.get 16
    i64.store offset=64
    global.get 0
    i32.wrap_i64
    local.get 18
    i64.store offset=72
    global.get 0
    i32.wrap_i64
    local.get 17
    i64.store offset=80
    i64.const 0
    local.set 15
    i64.const 0
    global.get 0
    i64.add
    local.set 14
    i64.const 16
    local.set 13
    i64.const 4
    local.set 12
    global.get 0
    i32.wrap_i64
    local.get 12
    i64.store offset=88
    global.get 0
    i32.wrap_i64
    local.get 19
    i64.store offset=96
    global.get 0
    i32.wrap_i64
    local.get 12
    i64.store offset=104
    global.get 0
    i32.wrap_i64
    local.get 19
    i64.store
    global.get 0
    i32.wrap_i64
    local.get 12
    i64.store offset=8
    global.get 0
    i32.wrap_i64
    i64.load offset=72
    local.set 11
    global.get 0
    i32.wrap_i64
    local.get 19
    i64.store offset=16
    global.get 0
    i32.wrap_i64
    local.get 11
    i64.store offset=24
    global.get 0
    i32.wrap_i64
    i64.load offset=72
    local.set 10
    local.get 12
    local.get 10
    i64.sub
    local.set 9
    i64.const 8
    local.set 8
    local.get 10
    local.get 8
    i64.mul
    local.set 7
    local.get 19
    local.get 7
    i64.add
    local.set 6
    global.get 0
    i32.wrap_i64
    local.get 6
    i64.store offset=32
    global.get 0
    i32.wrap_i64
    local.get 9
    i64.store offset=40
    global.get 0
    i32.wrap_i64
    i64.load offset=64
    local.set 5
    local.get 8
    local.get 5
    i64.mul
    local.set 4
    local.get 19
    local.get 4
    i64.add
    local.set 3
    global.get 0
    i32.wrap_i64
    i64.load offset=80
    global.get 0
    i32.wrap_i64
    local.get 3
    i64.store offset=48
    local.get 5
    i64.sub
    local.set 2
    global.get 0
    i32.wrap_i64
    local.get 2
    i64.store offset=56
    global.get 0
    i32.wrap_i64
    local.get 15
    i64.store offset=112
    global.get 0
    i32.wrap_i64
    local.get 15
    i64.store offset=120
    loop  ;; label = @1
      block  ;; label = @2
        global.get 0
        i32.wrap_i64
        i64.load offset=120
        local.get 12
        i64.eq
        local.set 0
        local.get 0
        br_if 0 (;@2;)
        global.get 0
        i32.wrap_i64
        local.get 15
        i64.store offset=128
        loop  ;; label = @3
          block  ;; label = @4
            global.get 0
            i32.wrap_i64
            i64.load offset=120
            local.set 22
            local.get 22
            local.get 13
            i64.mul
            local.get 14
            i64.add
            local.set 21
            local.get 21
            i32.wrap_i64
            i64.load offset=8
            global.get 0
            i32.wrap_i64
            i64.load offset=128
            local.set 20
            local.get 20
            i64.eq
            local.set 1
            local.get 1
            br_if 0 (;@4;)
            local.get 20
            local.get 8
            i64.mul
            local.get 21
            i32.wrap_i64
            i64.load
            i64.add
            local.set 26
            local.get 26
            i32.wrap_i64
            i64.load
            global.get 0
            i32.wrap_i64
            i64.load offset=112
            i64.add
            local.set 25
            global.get 0
            i32.wrap_i64
            local.get 25
            i64.store offset=112
            global.get 0
            i32.wrap_i64
            i64.load offset=128
            local.set 24
            local.get 16
            local.get 24
            i64.add
            local.set 23
            global.get 0
            i32.wrap_i64
            local.get 23
            i64.store offset=128
            br 1 (;@3;)
          end
          local.get 22
          local.get 16
          i64.add
          local.set 27
          global.get 0
          i32.wrap_i64
          local.get 27
          i64.store offset=120
          br 2 (;@1;)
        end
      end
      global.get 0
      i32.wrap_i64
      i64.load offset=112
      i64.const 136
      global.get 0
      i64.add
      global.set 0
      return
    end
    unreachable)
  (table (;0;) 0 funcref)
  (memory (;0;) 3)
  (global (;0;) (mut i64) (i64.const 131072))
  (export "__stack_pointer" (global 0))
  (export "memory" (memory 0))
  (export "main" (func $main))
  (elem (;0;) (i32.const 0) func)
  (data (;0;) (i32.const 131072) ""))