(module
  (type (;0;) (func (result i64)))
  (type (;1;) (func))
  (func $main (type 0) (result i64)
    (local i32 i32 i32 i32 i32 i32 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64)
    global.get 0
    i64.const 96
    i64.sub
    global.set 0
    block  ;; label = @1
      i64.const 0
      local.set 6
      i64.const 88
      global.get 0
      i64.add
      local.set 7
      i64.const 24
      global.get 0
      i64.add
      local.set 8
      i32.const 1
      local.set 0
      i32.const 2
      local.set 1
      i32.const 3
      local.set 2
      i64.const 3
      local.set 9
      i64.const 2
      local.set 10
      local.get 7
      local.get 10
      i64.add
      local.set 11
      i64.const 48
      global.get 0
      i64.add
      local.set 12
      i64.const 8
      local.set 13
      local.get 8
      local.get 13
      i64.add
      local.set 14
      i64.const 56
      global.get 0
      i64.add
      local.set 15
      i64.const 1
      local.set 16
      local.get 7
      local.get 16
      i64.add
      local.set 17
      i64.const 40
      global.get 0
      i64.add
      local.set 18
      local.get 18
      i32.wrap_i64
      local.get 6
      i64.store
      local.get 12
      i32.wrap_i64
      local.get 6
      i64.store
      local.get 7
      i32.wrap_i64
      local.get 0
      i32.store8
      local.get 17
      i32.wrap_i64
      local.get 1
      i32.store8
      local.get 11
      i32.wrap_i64
      local.get 2
      i32.store8
      local.get 8
      i32.wrap_i64
      local.get 7
      i64.store
      local.get 14
      i32.wrap_i64
      local.get 9
      i64.store
      local.get 8
      i32.wrap_i64
      i64.load
      local.set 19
      local.get 15
      i32.wrap_i64
      local.get 19
      i64.store
      local.get 14
      i32.wrap_i64
      i64.load
      local.set 20
      local.get 12
      i32.wrap_i64
      i64.load
      local.set 21
      local.get 10
      local.get 21
      i64.sub
      local.set 22
      local.get 20
      local.get 22
      i64.ne
      local.set 3
      local.get 3
      i32.eqz
      br_if 0 (;@1;)
      i64.const 64
      global.get 0
      i64.add
      local.set 23
      global.get 1
      local.set 24
      local.get 23
      i32.wrap_i64
      local.get 24
      i64.store
      i64.const 8589934599
      local.set 25
      i64.const 16
      local.set 26
      local.get 23
      local.get 26
      i64.add
      local.set 27
      i64.const 24
      local.set 28
      local.get 23
      local.get 13
      i64.add
      local.set 29
      i64.const 38
      local.set 30
      local.get 29
      i32.wrap_i64
      local.get 30
      i64.store
      local.get 27
      i32.wrap_i64
      local.get 25
      i64.store
      i64.const 0
      global.get 0
      i64.add
      local.set 31
      local.get 31
      i32.wrap_i64
      local.get 23
      i32.wrap_i64
      local.get 28
      i32.wrap_i64
      memory.copy
      call $loops_16__for_different_lengths_error_.for_loop_length_mismatch
    end
    loop  ;; label = @1
      block  ;; label = @2
        local.get 18
        i32.wrap_i64
        i64.load
        local.set 32
        local.get 12
        i32.wrap_i64
        i64.load
        local.set 33
        local.get 33
        local.get 10
        i64.lt_u
        local.set 4
        local.get 4
        i32.eqz
        br_if 0 (;@2;)
        local.get 15
        i32.wrap_i64
        i64.load
        local.set 34
        local.get 34
        i32.wrap_i64
        i32.load8_u
        local.set 5
        local.get 5
        i32.const 255
        i32.and
        i64.extend_i32_u
        local.set 35
        local.get 33
        local.get 35
        i64.add
        local.set 36
        local.get 32
        local.get 36
        i64.add
        local.set 37
        local.get 18
        i32.wrap_i64
        local.get 37
        i64.store
        local.get 12
        i32.wrap_i64
        i64.load
        local.set 38
        local.get 38
        local.get 16
        i64.add
        local.set 39
        local.get 12
        i32.wrap_i64
        local.get 39
        i64.store
        local.get 15
        i32.wrap_i64
        i64.load
        local.set 40
        local.get 40
        local.get 16
        i64.add
        local.set 41
        local.get 15
        i32.wrap_i64
        local.get 41
        i64.store
        br 1 (;@1;)
      end
      i64.const 96
      global.get 0
      i64.add
      global.set 0
      local.get 32
      return
    end
    unreachable)
  (func $loops_16__for_different_lengths_error_.for_loop_length_mismatch (type 1)
    unreachable
    unreachable)
  (table (;0;) 0 funcref)
  (memory (;0;) 4)
  (global (;0;) (mut i64) (i64.const 131072))
  (global (;1;) i64 (i64.const 131072))
  (export "__stack_pointer" (global 0))
  (export "main" (func $main))
  (elem (;0;) (i32.const 0) func)
  (data (;0;) (i32.const 131072) "loops 16 (for different lengths error)"))