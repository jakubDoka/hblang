(module
  (type (;0;) (func (result i64)))
  (type (;1;) (func (param i64 i64 i64 i64) (result i32)))
  (func $main (type 0) (result i64)
    (local i32 i64 i64)
    global.get 0
    i64.const 8
    i64.sub
    global.set 0
    global.get 0
    i32.wrap_i64
    i32.const 97
    i32.store8
    i32.const 99
    local.set 0
    global.get 0
    i32.wrap_i64
    i32.const 98
    i32.store8 offset=1
    global.get 0
    i32.wrap_i64
    local.get 0
    i32.store8 offset=2
    i64.const 3
    local.set 1
    global.get 1
    local.set 2
    local.get 2
    local.get 1
    local.get 2
    local.get 1
    call $slices_4.equals
    local.set 0
    block  ;; label = @1
      block  ;; label = @2
        block  ;; label = @3
          local.get 0
          i32.eqz
          br_if 0 (;@3;)
          i64.const 0
          global.get 0
          i64.add
          local.get 1
          local.get 2
          local.get 1
          call $slices_4.equals
          local.set 0
          block  ;; label = @4
            local.get 0
            i32.eqz
            br_if 0 (;@4;)
            i64.const 0
            local.set 2
            br 3 (;@1;)
          end
          br 1 (;@2;)
        end
      end
      i64.const 1
      local.set 2
    end
    local.get 2
    i64.const 8
    global.get 0
    i64.add
    global.set 0
    return
    unreachable)
  (func $slices_4.equals (type 1) (param i64 i64 i64 i64) (result i32)
    (local i32 i64)
    block  ;; label = @1
      block  ;; label = @2
        block  ;; label = @3
          block  ;; label = @4
            local.get 1
            local.get 3
            i64.ne
            br_if 0 (;@4;)
            block  ;; label = @5
              local.get 0
              local.get 2
              i64.eq
              br_if 0 (;@5;)
              i64.const 0
              local.set 5
              i64.const 1
              local.set 3
              loop  ;; label = @6
                block  ;; label = @7
                  local.get 5
                  local.get 1
                  i64.eq
                  br_if 0 (;@7;)
                  block  ;; label = @8
                    local.get 5
                    local.get 0
                    i64.add
                    i32.wrap_i64
                    i32.load8_u
                    local.get 5
                    local.get 2
                    i64.add
                    i32.wrap_i64
                    i32.load8_u
                    i32.ne
                    br_if 0 (;@8;)
                    local.get 5
                    local.get 3
                    i64.add
                    local.set 5
                    br 2 (;@6;)
                  end
                  i32.const 0
                  local.set 4
                  br 5 (;@2;)
                end
                i32.const 1
                local.set 4
                br 5 (;@1;)
              end
            end
            i32.const 1
            local.set 4
            br 1 (;@3;)
          end
          i32.const 0
          local.set 4
        end
      end
    end
    local.get 4
    return
    unreachable)
  (table (;0;) 0 funcref)
  (memory (;0;) 4)
  (global (;0;) (mut i64) (i64.const 131072))
  (global (;1;) i64 (i64.const 131072))
  (export "__stack_pointer" (global 0))
  (export "memory" (memory 0))
  (export "main" (func $main))
  (elem (;0;) (i32.const 0) func)
  (data (;0;) (i32.const 131072) "abc"))