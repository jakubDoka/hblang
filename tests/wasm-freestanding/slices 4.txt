(module
  (type (;0;) (func (result i64)))
  (type (;1;) (func (param i64 i64 i64 i64) (result i32)))
  (func $main (type 0) (result i64)
    (local i32 i32 i32 i32 i32 i32 i32 i32 i32 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64)
    global.get 0
    i64.const 40
    i64.sub
    global.set 0
    i64.const 3
    local.set 13
    global.get 1
    local.set 12
    global.get 0
    i32.wrap_i64
    local.get 12
    i64.store
    global.get 0
    i32.wrap_i64
    local.get 13
    i64.store offset=8
    i32.const 99
    local.set 2
    i64.const 32
    global.get 0
    i64.add
    local.set 11
    i32.const 97
    local.set 1
    global.get 0
    i32.wrap_i64
    local.get 1
    i32.store8 offset=32
    i32.const 98
    local.set 0
    global.get 0
    i32.wrap_i64
    local.get 0
    i32.store8 offset=33
    global.get 0
    i32.wrap_i64
    local.get 2
    i32.store8 offset=34
    global.get 0
    i32.wrap_i64
    local.get 11
    i64.store offset=16
    global.get 0
    i32.wrap_i64
    local.get 13
    i64.store offset=24
    global.get 0
    i32.wrap_i64
    i64.load
    local.set 10
    global.get 0
    i32.wrap_i64
    i64.load offset=8
    local.set 9
    local.get 10
    local.get 9
    local.get 10
    local.get 9
    call $slices_4.equals
    local.set 5
    block  ;; label = @1
      block  ;; label = @2
        block  ;; label = @3
          block  ;; label = @4
            global.get 0
            i32.wrap_i64
            local.get 5
            i32.store8 offset=35
            global.get 0
            i32.wrap_i64
            i32.load8_u offset=35
            local.set 4
            local.get 4
            i32.eqz
            local.set 3
            local.get 3
            i32.eqz
            br_if 0 (;@4;)
            br 1 (;@3;)
          end
          global.get 0
          i32.wrap_i64
          i64.load offset=8
          local.set 17
          global.get 0
          i32.wrap_i64
          i64.load
          local.set 16
          global.get 0
          i32.wrap_i64
          i64.load offset=24
          local.set 15
          global.get 0
          i32.wrap_i64
          i64.load offset=16
          local.set 14
          local.get 14
          local.get 15
          local.get 16
          local.get 17
          call $slices_4.equals
          local.set 8
          global.get 0
          i32.wrap_i64
          local.get 8
          i32.store8 offset=36
          global.get 0
          i32.wrap_i64
          i32.load8_u offset=36
          local.set 7
          local.get 7
          i32.eqz
          local.set 6
          local.get 6
          i32.eqz
          br_if 1 (;@2;)
        end
        i64.const 1
        local.set 18
        local.get 18
        local.set 20
        br 1 (;@1;)
      end
      i64.const 0
      local.set 19
      local.get 19
      local.set 20
    end
    i64.const 40
    global.get 0
    i64.add
    global.set 0
    local.get 20
    return
    unreachable)
  (func $slices_4.equals (type 1) (param i64 i64 i64 i64) (result i32)
    (local i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64)
    global.get 0
    i64.const 40
    i64.sub
    global.set 0
    block  ;; label = @1
      block  ;; label = @2
        block  ;; label = @3
          block  ;; label = @4
            block  ;; label = @5
              global.get 0
              i32.wrap_i64
              local.get 0
              i64.store
              global.get 0
              i32.wrap_i64
              local.get 1
              i64.store offset=8
              global.get 0
              i32.wrap_i64
              local.get 2
              i64.store offset=16
              global.get 0
              i32.wrap_i64
              local.get 3
              i64.store offset=24
              global.get 0
              i32.wrap_i64
              i64.load offset=8
              local.set 16
              global.get 0
              i32.wrap_i64
              i64.load offset=24
              local.set 15
              i32.const 0
              local.set 5
              local.get 16
              local.get 15
              i64.ne
              local.set 4
              local.get 4
              i32.eqz
              br_if 0 (;@5;)
              local.get 5
              local.set 8
              br 1 (;@4;)
            end
            global.get 0
            i32.wrap_i64
            i64.load offset=16
            local.set 18
            global.get 0
            i32.wrap_i64
            i64.load
            local.set 17
            i32.const 1
            local.set 7
            local.get 17
            local.get 18
            i64.eq
            local.set 6
            local.get 6
            i32.eqz
            br_if 1 (;@3;)
            local.get 7
            local.set 8
          end
          local.get 8
          local.set 13
          br 1 (;@2;)
        end
        i64.const 0
        local.set 20
        global.get 0
        i32.wrap_i64
        local.get 20
        i64.store offset=32
        i64.const 1
        local.set 19
        loop  ;; label = @3
          block  ;; label = @4
            global.get 0
            i32.wrap_i64
            i64.load offset=8
            local.set 22
            global.get 0
            i32.wrap_i64
            i64.load offset=32
            local.set 21
            local.get 21
            local.get 22
            i64.eq
            local.set 9
            local.get 9
            i32.eqz
            br_if 0 (;@4;)
            local.get 7
            local.set 14
            br 3 (;@1;)
          end
          block  ;; label = @4
            block  ;; label = @5
              global.get 0
              i32.wrap_i64
              i64.load offset=16
              local.get 21
              i64.add
              local.set 25
              local.get 25
              i32.wrap_i64
              i32.load8_u
              local.set 12
              global.get 0
              i32.wrap_i64
              i64.load
              local.set 24
              local.get 24
              local.get 21
              i64.add
              local.set 23
              local.get 23
              i32.wrap_i64
              i32.load8_u
              local.set 11
              local.get 11
              local.get 12
              i32.ne
              local.set 10
              local.get 10
              i32.eqz
              br_if 0 (;@5;)
              local.get 5
              local.set 13
              br 1 (;@4;)
            end
            local.get 21
            local.get 19
            i64.add
            local.set 26
            global.get 0
            i32.wrap_i64
            local.get 26
            i64.store offset=32
            br 1 (;@3;)
          end
        end
      end
      local.get 13
      local.set 14
    end
    i64.const 40
    global.get 0
    i64.add
    global.set 0
    local.get 14
    return
    unreachable)
  (table (;0;) 0 funcref)
  (memory (;0;) 4)
  (global (;0;) (mut i64) (i64.const 131072))
  (global (;1;) i64 (i64.const 131072))
  (export "__stack_pointer" (global 0))
  (export "main" (func $main))
  (elem (;0;) (i32.const 0) func)
  (data (;0;) (i32.const 131072) "abc"))