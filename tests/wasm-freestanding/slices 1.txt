(module
  (type (;0;) (func (result i64)))
  (func $main (type 0) (result i64)
    (local i64 i64 i64 i64 i64 i64 i64 i64)
    global.get 0
    i64.const 136
    i64.sub
    global.set 0
    i64.const 128
    global.get 0
    i64.add
    local.set 0
    i64.const 2
    local.set 1
    global.get 0
    i32.wrap_i64
    i32.const 1
    i32.store8 offset=128
    global.get 0
    i32.wrap_i64
    i32.const 2
    i32.store8 offset=129
    global.get 0
    i32.wrap_i64
    i32.const 3
    i32.store8 offset=130
    global.get 0
    i32.wrap_i64
    i32.const 4
    i32.store8 offset=131
    global.get 0
    i32.wrap_i64
    local.get 0
    i64.store
    local.get 0
    local.get 1
    i64.add
    local.set 2
    i64.const 0
    global.get 0
    i64.add
    local.set 3
    i64.const 8
    local.set 4
    i64.const 1
    local.set 5
    local.get 0
    local.get 5
    i64.add
    local.set 6
    i64.const 4
    local.set 7
    global.get 0
    i32.wrap_i64
    local.get 7
    i64.store offset=8
    global.get 0
    i32.wrap_i64
    local.get 0
    i64.store offset=16
    global.get 0
    i32.wrap_i64
    local.get 1
    i64.store offset=24
    global.get 0
    i32.wrap_i64
    local.get 2
    i64.store offset=32
    global.get 0
    i32.wrap_i64
    local.get 1
    i64.store offset=40
    global.get 0
    i32.wrap_i64
    local.get 6
    i64.store offset=48
    global.get 0
    i32.wrap_i64
    local.get 1
    i64.store offset=56
    global.get 0
    i32.wrap_i64
    local.get 0
    i64.store offset=64
    global.get 0
    i32.wrap_i64
    local.get 7
    i64.store offset=72
    global.get 0
    i32.wrap_i64
    local.get 0
    i64.store offset=80
    global.get 0
    i32.wrap_i64
    local.get 1
    i64.store offset=88
    global.get 0
    i32.wrap_i64
    local.get 2
    i64.store offset=96
    global.get 0
    i32.wrap_i64
    local.get 1
    i64.store offset=104
    global.get 0
    i32.wrap_i64
    local.get 6
    i64.store offset=112
    global.get 0
    i32.wrap_i64
    local.get 1
    i64.store offset=120
    i64.const 0
    local.set 0
    i64.const 0
    local.set 1
    loop  ;; label = @1
      block  ;; label = @2
        local.get 0
        local.get 4
        i64.eq
        br_if 0 (;@2;)
        local.get 0
        local.get 7
        i64.shl
        local.get 3
        i64.add
        local.set 2
        i64.const 0
        local.set 6
        loop  ;; label = @3
          block  ;; label = @4
            local.get 6
            local.get 2
            i32.wrap_i64
            i64.load offset=8
            i64.eq
            br_if 0 (;@4;)
            local.get 1
            local.get 2
            i32.wrap_i64
            i64.load
            local.get 6
            i64.add
            i32.wrap_i64
            i32.load8_u
            i32.const 255
            i32.and
            i64.extend_i32_u
            i64.add
            local.set 1
            local.get 6
            local.get 5
            i64.add
            local.set 6
            br 1 (;@3;)
          end
          local.get 0
          local.get 5
          i64.add
          local.set 0
          br 2 (;@1;)
        end
      end
      local.get 1
      i64.const 136
      global.get 0
      i64.add
      global.set 0
      return
    end
    unreachable)
  (table (;0;) 0 funcref)
  (memory (;0;) 3)
  (global (;0;) (mut i64) (i64.const 131072))
  (export "__stack_pointer" (global 0))
  (export "memory" (memory 0))
  (export "main" (func $main))
  (elem (;0;) (i32.const 0) func)
  (data (;0;) (i32.const 131072) ""))