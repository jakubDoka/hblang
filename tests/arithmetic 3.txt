======== SOURCE ========
fn(): uint {
	{
		// no opts unsigned
		o := one()
		z := zero()

		if cond(o < z) return 1
		if cond(o < o) return 2
		if cond(o <= z) return 3
		if cond(z > o) return 4
		if cond(o > o) return 5
		if cond(z >= o) return 6
	}

	{
		// no opts signed
		o := mne()
		z := mero()

		if cond(o > z) return 7
		if cond(o > o) return 8
		if cond(o >= z) return 9
		if cond(z < o) return 10
		if cond(o < o) return 11
		if cond(z <= o) return 12
	}

	{
		// branch opts unsigned
		o := one()
		z := zero()

		if o < z return 13
		if o < o return 14
		if o <= z return 15
		if z > o return 16
		if o > o return 17
		if z >= o return 18
	}

	{
		// branch opts signed
		o := mne()
		z := mero()

		if o > z return 19
		if o > o return 20
		if o >= z return 21
		if z < o return 22
		if o < o return 23
		if z <= o return 24
	}

	return 0
}
======== UNSCHEDULED SON ========
%115 = CInt: 6 [, %120]
%201 = CInt: 10 [, %206]
%182 = CInt: 9 [, %187]
%163 = CInt: 8 [, %168]
%146 = CInt: 7 [, %151]
%218 = CInt: 11 [, %223]
%79 = CInt: 4 [, %84]
%60 = CInt: 3 [, %65]
%41 = CInt: 2 [, %46]
%28 = CInt: 1 [, %46]
%114 = Then: idepth: 0, %113 [, %117]
%117 = Jmp: idepth: 0, %114 [, %118]
%120 = Phi: %118, %101, %115 [, %151]
%96 = CInt: 5 [, %101]
%236 = Then: idepth: 0, %235 [, %239]
%237 = CInt: 12 [, %242]
%303 = Then: idepth: 0, %295 [, %306]
%292 = Then: idepth: 0, %284 [, %295]
%281 = Then: idepth: 0, %273 [, %284]
%206 = Phi: %204, %187, %201 [, %223]
%203 = Jmp: idepth: 0, %200 [, %204]
%200 = Then: idepth: 0, %199 [, %203]
%187 = Phi: %185, %168, %182 [, %206]
%202 = Jmp: idepth: 0, %185 [, %204]
%184 = Jmp: idepth: 0, %181 [, %185]
%181 = Then: idepth: 0, %180 [, %184]
%168 = Phi: %166, %151, %163 [, %187]
%183 = Jmp: idepth: 0, %166 [, %185]
%165 = Jmp: idepth: 0, %162 [, %166]
%162 = Then: idepth: 0, %161 [, %165]
%151 = Phi: %149, %120, %146 [, %168]
%164 = Jmp: idepth: 0, %149 [, %166]
%148 = Jmp: idepth: 0, %145 [, %149]
%147 = Jmp: idepth: 0, %118 [, %149]
%145 = Then: idepth: 0, %144 [, %148]
%233 = Ret: 0, %231 [, %235]
%235 = If: idepth: 0, %231, %233 [, %236, %243]
%223 = Phi: %221, %206, %218 [, %242]
%220 = Jmp: idepth: 0, %217 [, %221]
%219 = Jmp: idepth: 0, %204 [, %221]
%217 = Then: idepth: 0, %216 [, %220]
%84 = Phi: %82, %65, %79 [, %101]
%81 = Jmp: idepth: 0, %78 [, %82]
%78 = Then: idepth: 0, %77 [, %81]
%65 = Phi: %63, %46, %60 [, %84]
%80 = Jmp: idepth: 0, %63 [, %82]
%62 = Jmp: idepth: 0, %59 [, %63]
%59 = Then: idepth: 0, %58 [, %62]
%40 = Then: idepth: 0, %39 [, %43]
%46 = Phi: %44, %28, %41 [, %65]
%61 = Jmp: idepth: 0, %44 [, %63]
%43 = Jmp: idepth: 0, %40 [, %44]
%42 = Jmp: idepth: 0, %27 [, %44]
%27 = Then: idepth: 0, %26 [, %42]
%111 = Ret: 0, %109 [, %113]
%113 = If: idepth: 0, %109, %111 [, %114, %121]
%118 = Region: idepth: 0, %116, %117 [, %147, %119, %120]
%101 = Phi: %99, %84, %96 [, %120]
%116 = Jmp: idepth: 0, %99 [, %118]
%98 = Jmp: idepth: 0, %95 [, %99]
%97 = Jmp: idepth: 0, %82 [, %99]
%95 = Then: idepth: 0, %94 [, %98]
%286 = CInt: 15 [, %291]
%285 = Then: idepth: 0, %284 [, %288]
%275 = CInt: 14 [, %280]
%274 = Then: idepth: 0, %273 [, %277]
%239 = Jmp: idepth: 0, %236 [, %240]
%238 = Jmp: idepth: 0, %221 [, %240]
%264 = CInt: 13 [, %269]
%242 = Phi: %240, %223, %237 [, %269]
%296 = Then: idepth: 0, %295 [, %299]
%297 = CInt: 16 [, %302]
%306 = If: idepth: 0, %303, %304 [, %307, %314]
%295 = If: idepth: 0, %292, %293 [, %296, %303]
%284 = If: idepth: 0, %281, %282 [, %285, %292]
%273 = If: idepth: 0, %270, %271 [, %274, %281]
%243 = Then: idepth: 0, %235 [, %245]
%207 = Then: idepth: 0, %199 [, %211]
%204 = Region: idepth: 0, %202, %203 [, %219, %205, %206]
%197 = Ret: 0, %195 [, %199]
%199 = If: idepth: 0, %195, %197 [, %200, %207]
%188 = Then: idepth: 0, %180 [, %194]
%185 = Region: idepth: 0, %183, %184 [, %202, %186, %187]
%178 = Ret: 0, %176 [, %180]
%180 = If: idepth: 0, %176, %178 [, %181, %188]
%169 = Then: idepth: 0, %161 [, %175]
%166 = Region: idepth: 0, %164, %165 [, %183, %167, %168]
%159 = Ret: 0, %157 [, %161]
%161 = If: idepth: 0, %157, %159 [, %162, %169]
%152 = Then: idepth: 0, %144 [, %156]
%149 = Region: idepth: 0, %147, %148 [, %164, %150, %151]
%142 = Ret: 0, %140 [, %144]
%144 = If: idepth: 0, %140, %142 [, %145, %152]
%231 = CallEnd: idepth: 0, %230 [, %235, %232, %233]
%224 = Then: idepth: 0, %216 [, %230]
%221 = Region: idepth: 0, %219, %220 [, %238, %222, %223]
%214 = Ret: 0, %212 [, %216]
%216 = If: idepth: 0, %212, %214 [, %217, %224]
%110 = Mem: %109 [, %119, %123]
%121 = Then: idepth: 0, %113 [, %123]
%85 = Then: idepth: 0, %77 [, %89]
%82 = Region: idepth: 0, %80, %81 [, %97, %83, %84]
%75 = Ret: 0, %73 [, %77]
%77 = If: idepth: 0, %73, %75 [, %78, %85]
%66 = Then: idepth: 0, %58 [, %72]
%63 = Region: idepth: 0, %61, %62 [, %80, %64, %65]
%56 = Ret: 0, %54 [, %58]
%58 = If: idepth: 0, %54, %56 [, %59, %66]
%47 = Then: idepth: 0, %39 [, %53]
%37 = Ret: 0, %35 [, %39]
%39 = If: idepth: 0, %35, %37 [, %40, %47]
%30 = Then: idepth: 0, %26 [, %34]
%44 = Region: idepth: 0, %42, %43 [, %61, %45, %46]
%24 = Ret: 0, %22 [, %26]
%26 = If: idepth: 0, %22, %24 [, %27, %30]
%109 = CallEnd: idepth: 0, %108 [, %113, %110, %111]
%102 = Then: idepth: 0, %94 [, %108]
%119 = Phi: %118, %100, %110 [, %150]
%99 = Region: idepth: 0, %97, %98 [, %116, %100, %101]
%92 = Ret: 0, %90 [, %94]
%94 = If: idepth: 0, %90, %92 [, %95, %102]
%314 = Then: idepth: 0, %306 [, %317]
%291 = Phi: %289, %280, %286 [, %302]
%288 = Jmp: idepth: 0, %285 [, %289]
%280 = Phi: %278, %269, %275 [, %291]
%287 = Jmp: idepth: 0, %278 [, %289]
%277 = Jmp: idepth: 0, %274 [, %278]
%232 = Mem: %231 [, %241, %245]
%240 = Region: idepth: 0, %238, %239 [, %265, %241, %242]
%269 = Phi: %267, %242, %264 [, %280]
%276 = Jmp: idepth: 0, %267 [, %278]
%266 = Jmp: idepth: 0, %263 [, %267]
%265 = Jmp: idepth: 0, %240 [, %267]
%270 = Then: idepth: 0, %262 [, %273]
%263 = Then: idepth: 0, %262 [, %266]
%299 = Jmp: idepth: 0, %296 [, %300]
%298 = Jmp: idepth: 0, %289 [, %300]
%307 = Then: idepth: 0, %306 [, %310]
%308 = CInt: 17 [, %313]
%302 = Phi: %300, %291, %297 [, %313]
%315 = BinOp: uge, %259, %258 [, %317]
%304 = BinOp: ugt, %258, %258 [, %306]
%293 = BinOp: ugt, %259, %258 [, %295]
%282 = BinOp: ule, %258, %259 [, %284]
%271 = BinOp: ult, %258, %258 [, %273]
%260 = BinOp: ult, %258, %259 [, %262]
%245 = Call: ret_count: 1, id: 1, idepth: 0, %243, %232 [, %246]
%210 = BinOp: slt, %209, %209 [, %211]
%211 = Call: ret_count: 1, id: 3, idepth: 0, %207, %196, %210 [, %212]
%205 = Phi: %204, %186, %196 [, %222]
%195 = CallEnd: idepth: 0, %194 [, %199, %196, %197]
%193 = BinOp: slt, %191, %192 [, %194]
%194 = Call: ret_count: 1, id: 3, idepth: 0, %188, %177, %193 [, %195]
%186 = Phi: %185, %167, %177 [, %205]
%176 = CallEnd: idepth: 0, %175 [, %180, %177, %178]
%174 = BinOp: sge, %172, %173 [, %175]
%175 = Call: ret_count: 1, id: 3, idepth: 0, %169, %158, %174 [, %176]
%167 = Phi: %166, %150, %158 [, %186]
%157 = CallEnd: idepth: 0, %156 [, %161, %158, %159]
%155 = BinOp: sgt, %154, %154 [, %156]
%156 = Call: ret_count: 1, id: 3, idepth: 0, %152, %141, %155 [, %157]
%150 = Phi: %149, %119, %141 [, %167]
%140 = CallEnd: idepth: 0, %139 [, %144, %141, %142]
%138 = BinOp: sgt, %136, %137 [, %139]
%229 = BinOp: sle, %227, %228 [, %230]
%230 = Call: ret_count: 1, id: 3, idepth: 0, %224, %213, %229 [, %231]
%222 = Phi: %221, %205, %213 [, %241]
%212 = CallEnd: idepth: 0, %211 [, %216, %213, %214]
%123 = Call: ret_count: 1, id: 4, idepth: 0, %121, %110 [, %124]
%88 = BinOp: ugt, %87, %87 [, %89]
%89 = Call: ret_count: 1, id: 3, idepth: 0, %85, %74, %88 [, %90]
%83 = Phi: %82, %64, %74 [, %100]
%73 = CallEnd: idepth: 0, %72 [, %77, %74, %75]
%71 = BinOp: ugt, %69, %70 [, %72]
%72 = Call: ret_count: 1, id: 3, idepth: 0, %66, %55, %71 [, %73]
%64 = Phi: %63, %45, %55 [, %83]
%54 = CallEnd: idepth: 0, %53 [, %58, %55, %56]
%52 = BinOp: ule, %50, %51 [, %53]
%53 = Call: ret_count: 1, id: 3, idepth: 0, %47, %36, %52 [, %54]
%35 = CallEnd: idepth: 0, %34 [, %39, %36, %37]
%33 = BinOp: ult, %32, %32 [, %34]
%34 = Call: ret_count: 1, id: 3, idepth: 0, %30, %23, %33 [, %35]
%45 = Phi: %44, %23, %36 [, %64]
%22 = CallEnd: idepth: 0, %21 [, %26, %23, %24]
%20 = BinOp: ult, %18, %19 [, %21]
%107 = BinOp: uge, %105, %106 [, %108]
%108 = Call: ret_count: 1, id: 3, idepth: 0, %102, %91, %107 [, %109]
%100 = Phi: %99, %83, %91 [, %119]
%90 = CallEnd: idepth: 0, %89 [, %94, %91, %92]
%317 = If: idepth: 0, %314, %315 [, %318, %325]
%374 = Then: idepth: 0, %366 [, %377]
%289 = Region: idepth: 0, %287, %288 [, %298, %290, %291]
%278 = Region: idepth: 0, %276, %277 [, %287, %279, %280]
%241 = Phi: %240, %222, %232 [, %268]
%267 = Region: idepth: 0, %265, %266 [, %276, %268, %269]
%262 = If: idepth: 0, %252, %260 [, %263, %270]
%300 = Region: idepth: 0, %298, %299 [, %309, %301, %302]
%310 = Jmp: idepth: 0, %307 [, %311]
%309 = Jmp: idepth: 0, %300 [, %311]
%318 = Then: idepth: 0, %317 [, %321]
%319 = CInt: 18 [, %324]
%313 = Phi: %311, %302, %308 [, %324]
%259 = UnOp: uext, %257 [, %260, %282, %293, %315]
%258 = UnOp: uext, %256 [, %260, %271, %271, %282, %293, %304, %304, %315]
%251 = Call: ret_count: 1, id: 2, idepth: 0, %246, %249 [, %252]
%248 = Ret: 0, %246 [, %249]
%247 = Mem: %246 [, %249]
%246 = CallEnd: idepth: 0, %245 [, %251, %247, %248, %249]
%191 = UnOp: sext, %189 [, %193]
%173 = UnOp: sext, %171 [, %174]
%137 = UnOp: sext, %135 [, %138]
%227 = UnOp: sext, %225 [, %229]
%139 = Call: ret_count: 1, id: 3, idepth: 0, %130, %133, %138 [, %140]
%132 = Ret: 0, %130 [, %133]
%131 = Mem: %130 [, %133]
%130 = CallEnd: idepth: 0, %129 [, %139, %131, %132, %133]
%209 = UnOp: sext, %208 [, %210, %210]
%196 = Mem: %195 [, %205, %211, %208]
%192 = UnOp: sext, %190 [, %193]
%177 = Mem: %176 [, %186, %194, %189, %190]
%172 = UnOp: sext, %170 [, %174]
%158 = Mem: %157 [, %167, %175, %170, %171]
%154 = UnOp: sext, %153 [, %155, %155]
%141 = Mem: %140 [, %150, %156, %153]
%136 = UnOp: sext, %134 [, %138]
%228 = UnOp: sext, %226 [, %229]
%213 = Mem: %212 [, %222, %230, %225, %226]
%129 = Call: ret_count: 1, id: 5, idepth: 0, %124, %127 [, %130]
%126 = Ret: 0, %124 [, %127]
%125 = Mem: %124 [, %127]
%124 = CallEnd: idepth: 0, %123 [, %129, %125, %126, %127]
%69 = UnOp: uext, %67 [, %71]
%51 = UnOp: uext, %49 [, %52]
%19 = UnOp: uext, %17 [, %20]
%105 = UnOp: uext, %103 [, %107]
%21 = Call: ret_count: 1, id: 3, idepth: 0, %12, %15, %20 [, %22]
%14 = Ret: 0, %12 [, %15]
%13 = Mem: %12 [, %15]
%12 = CallEnd: idepth: 0, %11 [, %21, %13, %14, %15]
%87 = UnOp: uext, %86 [, %88, %88]
%74 = Mem: %73 [, %83, %89, %86]
%70 = UnOp: uext, %68 [, %71]
%55 = Mem: %54 [, %64, %72, %67, %68]
%50 = UnOp: uext, %48 [, %52]
%36 = Mem: %35 [, %45, %53, %48, %49]
%32 = UnOp: uext, %31 [, %33, %33]
%23 = Mem: %22 [, %45, %34, %31]
%18 = UnOp: uext, %16 [, %20]
%106 = UnOp: uext, %104 [, %107]
%91 = Mem: %90 [, %100, %108, %103, %104]
%8 = Ret: 0, %6 [, %9]
%7 = Mem: %6 [, %9]
%11 = Call: ret_count: 1, id: 2, idepth: 0, %6, %9 [, %12]
%363 = Then: idepth: 0, %355 [, %366]
%325 = Then: idepth: 0, %317 [, %327]
%385 = Then: idepth: 0, %377 [, %388]
%378 = Then: idepth: 0, %377 [, %381]
%368 = CInt: 21 [, %373]
%367 = Then: idepth: 0, %366 [, %370]
%357 = CInt: 20 [, %362]
%356 = Then: idepth: 0, %355 [, %359]
%377 = If: idepth: 0, %374, %375 [, %378, %385]
%366 = If: idepth: 0, %363, %364 [, %367, %374]
%290 = Phi: %289, %279, %255 [, %301]
%279 = Phi: %278, %268, %255 [, %290]
%268 = Phi: %267, %241, %255 [, %279]
%254 = Ret: 0, %252 [, %255]
%253 = Mem: %252 [, %255]
%252 = CallEnd: idepth: 0, %251 [, %262, %253, %254, %255]
%301 = Phi: %300, %290, %255 [, %312]
%311 = Region: idepth: 0, %309, %310 [, %320, %312, %313]
%321 = Jmp: idepth: 0, %318 [, %322]
%320 = Jmp: idepth: 0, %311 [, %322]
%346 = CInt: 19 [, %351]
%324 = Phi: %322, %313, %319 [, %351]
%257 = Load: %255, %250 [, %259]
%256 = Load: %255, %244 [, %258]
%249 = Store: %246, %247, %244, %248 [, %251]
%189 = Load: %177, %128 [, %191]
%171 = Load: %158, %128 [, %173]
%135 = Load: %133, %128 [, %137]
%225 = Load: %213, %128 [, %227]
%133 = Store: %130, %131, %128, %132 [, %139, %134, %135]
%208 = Load: %196, %122 [, %209]
%190 = Load: %177, %122 [, %192]
%170 = Load: %158, %122 [, %172]
%153 = Load: %141, %122 [, %154]
%134 = Load: %133, %122 [, %136]
%226 = Load: %213, %122 [, %228]
%127 = Store: %124, %125, %122, %126 [, %129]
%67 = Load: %55, %10 [, %69]
%49 = Load: %36, %10 [, %51]
%17 = Load: %15, %10 [, %19]
%103 = Load: %91, %10 [, %105]
%15 = Store: %12, %13, %10, %14 [, %21, %16, %17]
%86 = Load: %74, %4 [, %87]
%68 = Load: %55, %4 [, %70]
%48 = Load: %36, %4 [, %50]
%31 = Load: %23, %4 [, %32]
%16 = Load: %15, %4 [, %18]
%104 = Load: %91, %4 [, %106]
%9 = Store: %6, %7, %4, %8 [, %11]
%6 = CallEnd: idepth: 0, %5 [, %11, %7, %8, %9]
%1 = Entry: idepth: 0, %0 [, %5]
%355 = If: idepth: 0, %352, %353 [, %356, %363]
%330 = Ret: 0, %328 [, %331]
%329 = Mem: %328 [, %331]
%327 = Call: ret_count: 1, id: 4, idepth: 0, %325, %255 [, %328]
%389 = Then: idepth: 0, %388 [, %392]
%388 = If: idepth: 0, %385, %386 [, %389, %396]
%379 = CInt: 22 [, %384]
%381 = Jmp: idepth: 0, %378 [, %382]
%373 = Phi: %371, %362, %368 [, %384]
%380 = Jmp: idepth: 0, %371 [, %382]
%370 = Jmp: idepth: 0, %367 [, %371]
%362 = Phi: %360, %351, %357 [, %373]
%369 = Jmp: idepth: 0, %360 [, %371]
%359 = Jmp: idepth: 0, %356 [, %360]
%386 = BinOp: slt, %340, %340 [, %388]
%375 = BinOp: slt, %341, %340 [, %377]
%364 = BinOp: sge, %340, %341 [, %366]
%353 = BinOp: sgt, %340, %340 [, %355]
%255 = Store: %252, %253, %250, %254 [, %268, %256, %257, %279, %290, %301, %312, %323, %327]
%312 = Phi: %311, %301, %255 [, %323]
%322 = Region: idepth: 0, %320, %321 [, %347, %323, %324]
%351 = Phi: %349, %324, %346 [, %362]
%358 = Jmp: idepth: 0, %349 [, %360]
%348 = Jmp: idepth: 0, %345 [, %349]
%347 = Jmp: idepth: 0, %322 [, %349]
%250 = Local: 1, %2 [, %255, %257]
%244 = Local: 1, %2 [, %249, %256]
%128 = Local: 1, %2 [, %133, %225, %135, %171, %189]
%122 = Local: 1, %2 [, %127, %226, %134, %153, %170, %190, %208]
%10 = Local: 1, %2 [, %15, %103, %17, %49, %67]
%4 = Local: 1, %2 [, %9, %104, %16, %31, %48, %68, %86]
%5 = Call: ret_count: 1, id: 1, idepth: 0, %1, %2 [, %6]
%0 = Start: idepth: 0 [, %1, %2]
%352 = Then: idepth: 0, %344 [, %355]
%345 = Then: idepth: 0, %344 [, %348]
%342 = BinOp: sgt, %340, %341 [, %344]
%331 = Store: %328, %329, %326, %330 [, %333]
%328 = CallEnd: idepth: 0, %327 [, %333, %329, %330, %331]
%392 = Jmp: idepth: 0, %389 [, %393]
%391 = Jmp: idepth: 0, %382 [, %393]
%397 = BinOp: sle, %341, %340 [, %399]
%396 = Then: idepth: 0, %388 [, %399]
%400 = Then: idepth: 0, %399 [, %403]
%390 = CInt: 23 [, %395]
%384 = Phi: %382, %373, %379 [, %395]
%382 = Region: idepth: 0, %380, %381 [, %391, %383, %384]
%371 = Region: idepth: 0, %369, %370 [, %380, %372, %373]
%360 = Region: idepth: 0, %358, %359 [, %369, %361, %362]
%341 = UnOp: sext, %339 [, %342, %364, %375, %397]
%340 = UnOp: sext, %338 [, %342, %353, %353, %364, %375, %386, %386, %397]
%326 = Local: 1, %2 [, %331, %338]
%323 = Phi: %322, %312, %255 [, %350]
%349 = Region: idepth: 0, %347, %348 [, %358, %350, %351]
%2 = Mem: %0 [, %5, %4, %10, %122, %128, %244, %250, %326, %332]
%344 = If: idepth: 0, %334, %342 [, %345, %352]
%333 = Call: ret_count: 1, id: 5, idepth: 0, %328, %331 [, %334]
%393 = Region: idepth: 0, %391, %392 [, %402, %394, %395]
%399 = If: idepth: 0, %396, %397 [, %400, %407]
%403 = Jmp: idepth: 0, %400 [, %404]
%402 = Jmp: idepth: 0, %393 [, %404]
%401 = CInt: 24 [, %406]
%395 = Phi: %393, %384, %390 [, %406]
%383 = Phi: %382, %372, %337 [, %394]
%372 = Phi: %371, %361, %337 [, %383]
%361 = Phi: %360, %350, %337 [, %372]
%339 = Load: %337, %332 [, %341]
%338 = Load: %337, %326 [, %340]
%350 = Phi: %349, %323, %337 [, %361]
%336 = Ret: 0, %334 [, %337]
%332 = Local: 1, %2 [, %337, %339]
%335 = Mem: %334 [, %337]
%334 = CallEnd: idepth: 0, %333 [, %344, %335, %336, %337]
%394 = Phi: %393, %383, %337 [, %405]
%407 = Then: idepth: 0, %399 [, %410]
%404 = Region: idepth: 0, %402, %403 [, %409, %405, %406]
%408 = CInt: 0 [, %413]
%406 = Phi: %404, %395, %401 [, %413]
%337 = Store: %334, %335, %332, %336 [, %350, %338, %339, %361, %372, %383, %394, %405, %412]
%405 = Phi: %404, %394, %337 [, %412]
%410 = Jmp: idepth: 0, %407 [, %411]
%409 = Jmp: idepth: 0, %404 [, %411]
%413 = Phi: %411, %406, %408 [, %29]
%412 = Phi: %411, %405, %337 [, %29]
%411 = Region: idepth: 0, %409, %410 [, %29, %412, %413]
%29 = Return: idepth: 0, %411, %412, %413 []

======== OPTIMIZED SON ========
%0 = Start: idepth: 0 [, %1, %2]
%2 = Mem: %0 [, %5]
%1 = Entry: idepth: 0, %0 [, %5]
%7 = Mem: %6 [, %11]
%5 = Call: ret_count: 1, id: 1, idepth: 0, %1, %2 [, %6]
%11 = Call: ret_count: 1, id: 2, idepth: 0, %6, %7 [, %12]
%13 = Mem: %12 [, %21]
%6 = CallEnd: idepth: 0, %5 [, %7, %8, %11]
%12 = CallEnd: idepth: 0, %11 [, %13, %14, %21]
%47 = Then: idepth: 0, %39 [, %53]
%39 = If: idepth: 0, %35, %37 [, %40, %47]
%37 = Ret: 0, %35 [, %39]
%30 = Then: idepth: 0, %26 [, %34]
%26 = If: idepth: 0, %22, %24 [, %27, %30]
%24 = Ret: 0, %22 [, %26]
%21 = Call: ret_count: 1, id: 3, idepth: 0, %12, %13, %20 [, %22]
%40 = Then: idepth: 0, %39 [, %43]
%27 = Then: idepth: 0, %26 [, %42]
%41 = CInt: 2 [, %46]
%28 = CInt: 1 [, %46]
%33 = BinOp: ult, %18, %18 [, %34]
%8 = Ret: 0, %6 [, %18]
%52 = BinOp: ule, %18, %19 [, %53]
%20 = BinOp: ult, %18, %19 [, %21]
%14 = Ret: 0, %12 [, %19]
%71 = BinOp: ugt, %19, %18 [, %72]
%66 = Then: idepth: 0, %58 [, %72]
%58 = If: idepth: 0, %54, %56 [, %59, %66]
%56 = Ret: 0, %54 [, %58]
%53 = Call: ret_count: 1, id: 3, idepth: 0, %47, %36, %52 [, %54]
%35 = CallEnd: idepth: 0, %34 [, %36, %37, %39]
%34 = Call: ret_count: 1, id: 3, idepth: 0, %30, %23, %33 [, %35]
%22 = CallEnd: idepth: 0, %21 [, %23, %24, %26]
%43 = Jmp: idepth: 0, %40 [, %44]
%42 = Jmp: idepth: 0, %27 [, %44]
%59 = Then: idepth: 0, %58 [, %62]
%60 = CInt: 3 [, %65]
%46 = Phi: %44, %28, %41 [, %65]
%18 = UnOp: uext, %8 [, %20, %33, %33, %52, %71, %88, %88, %107]
%19 = UnOp: uext, %14 [, %20, %52, %71, %107]
%88 = BinOp: ugt, %18, %18 [, %89]
%85 = Then: idepth: 0, %77 [, %89]
%77 = If: idepth: 0, %73, %75 [, %78, %85]
%75 = Ret: 0, %73 [, %77]
%72 = Call: ret_count: 1, id: 3, idepth: 0, %66, %55, %71 [, %73]
%54 = CallEnd: idepth: 0, %53 [, %55, %56, %58]
%36 = Mem: %35 [, %45, %53]
%23 = Mem: %22 [, %45, %34]
%44 = Region: idepth: 0, %42, %43 [, %45, %46, %61]
%62 = Jmp: idepth: 0, %59 [, %63]
%61 = Jmp: idepth: 0, %44 [, %63]
%78 = Then: idepth: 0, %77 [, %81]
%79 = CInt: 4 [, %84]
%65 = Phi: %63, %46, %60 [, %84]
%107 = BinOp: uge, %19, %18 [, %108]
%102 = Then: idepth: 0, %94 [, %108]
%94 = If: idepth: 0, %90, %92 [, %95, %102]
%92 = Ret: 0, %90 [, %94]
%89 = Call: ret_count: 1, id: 3, idepth: 0, %85, %74, %88 [, %90]
%73 = CallEnd: idepth: 0, %72 [, %74, %75, %77]
%55 = Mem: %54 [, %64, %72]
%45 = Phi: %44, %23, %36 [, %64]
%63 = Region: idepth: 0, %61, %62 [, %64, %65, %80]
%81 = Jmp: idepth: 0, %78 [, %82]
%80 = Jmp: idepth: 0, %63 [, %82]
%95 = Then: idepth: 0, %94 [, %98]
%96 = CInt: 5 [, %101]
%84 = Phi: %82, %65, %79 [, %101]
%121 = Then: idepth: 0, %113 [, %123]
%113 = If: idepth: 0, %109, %111 [, %114, %121]
%111 = Ret: 0, %109 [, %113]
%108 = Call: ret_count: 1, id: 3, idepth: 0, %102, %91, %107 [, %109]
%90 = CallEnd: idepth: 0, %89 [, %91, %92, %94]
%74 = Mem: %73 [, %83, %89]
%64 = Phi: %63, %45, %55 [, %83]
%82 = Region: idepth: 0, %80, %81 [, %83, %84, %97]
%98 = Jmp: idepth: 0, %95 [, %99]
%97 = Jmp: idepth: 0, %82 [, %99]
%114 = Then: idepth: 0, %113 [, %117]
%115 = CInt: 6 [, %120]
%101 = Phi: %99, %84, %96 [, %120]
%125 = Mem: %124 [, %129]
%131 = Mem: %130 [, %139]
%129 = Call: ret_count: 1, id: 5, idepth: 0, %124, %125 [, %130]
%152 = Then: idepth: 0, %144 [, %156]
%144 = If: idepth: 0, %140, %142 [, %145, %152]
%142 = Ret: 0, %140 [, %144]
%123 = Call: ret_count: 1, id: 4, idepth: 0, %121, %110 [, %124]
%109 = CallEnd: idepth: 0, %108 [, %110, %111, %113]
%91 = Mem: %90 [, %100, %108]
%83 = Phi: %82, %64, %74 [, %100]
%99 = Region: idepth: 0, %97, %98 [, %100, %101, %116]
%117 = Jmp: idepth: 0, %114 [, %118]
%116 = Jmp: idepth: 0, %99 [, %118]
%145 = Then: idepth: 0, %144 [, %148]
%146 = CInt: 7 [, %151]
%120 = Phi: %118, %101, %115 [, %151]
%124 = CallEnd: idepth: 0, %123 [, %125, %126, %129]
%139 = Call: ret_count: 1, id: 3, idepth: 0, %130, %131, %138 [, %140]
%130 = CallEnd: idepth: 0, %129 [, %131, %132, %139]
%169 = Then: idepth: 0, %161 [, %175]
%161 = If: idepth: 0, %157, %159 [, %162, %169]
%159 = Ret: 0, %157 [, %161]
%156 = Call: ret_count: 1, id: 3, idepth: 0, %152, %141, %155 [, %157]
%140 = CallEnd: idepth: 0, %139 [, %141, %142, %144]
%110 = Mem: %109 [, %119, %123]
%100 = Phi: %99, %83, %91 [, %119]
%118 = Region: idepth: 0, %116, %117 [, %119, %120, %147]
%148 = Jmp: idepth: 0, %145 [, %149]
%147 = Jmp: idepth: 0, %118 [, %149]
%162 = Then: idepth: 0, %161 [, %165]
%163 = CInt: 8 [, %168]
%151 = Phi: %149, %120, %146 [, %168]
%155 = BinOp: sgt, %136, %136 [, %156]
%126 = Ret: 0, %124 [, %136]
%174 = BinOp: sge, %136, %137 [, %175]
%138 = BinOp: sgt, %136, %137 [, %139]
%132 = Ret: 0, %130 [, %137]
%193 = BinOp: slt, %137, %136 [, %194]
%188 = Then: idepth: 0, %180 [, %194]
%180 = If: idepth: 0, %176, %178 [, %181, %188]
%178 = Ret: 0, %176 [, %180]
%175 = Call: ret_count: 1, id: 3, idepth: 0, %169, %158, %174 [, %176]
%157 = CallEnd: idepth: 0, %156 [, %158, %159, %161]
%141 = Mem: %140 [, %150, %156]
%119 = Phi: %118, %100, %110 [, %150]
%149 = Region: idepth: 0, %147, %148 [, %150, %151, %164]
%165 = Jmp: idepth: 0, %162 [, %166]
%164 = Jmp: idepth: 0, %149 [, %166]
%181 = Then: idepth: 0, %180 [, %184]
%182 = CInt: 9 [, %187]
%168 = Phi: %166, %151, %163 [, %187]
%136 = UnOp: sext, %126 [, %138, %155, %155, %174, %193, %210, %210, %229]
%137 = UnOp: sext, %132 [, %138, %174, %193, %229]
%210 = BinOp: slt, %136, %136 [, %211]
%207 = Then: idepth: 0, %199 [, %211]
%199 = If: idepth: 0, %195, %197 [, %200, %207]
%197 = Ret: 0, %195 [, %199]
%194 = Call: ret_count: 1, id: 3, idepth: 0, %188, %177, %193 [, %195]
%176 = CallEnd: idepth: 0, %175 [, %177, %178, %180]
%158 = Mem: %157 [, %167, %175]
%150 = Phi: %149, %119, %141 [, %167]
%166 = Region: idepth: 0, %164, %165 [, %167, %168, %183]
%184 = Jmp: idepth: 0, %181 [, %185]
%183 = Jmp: idepth: 0, %166 [, %185]
%200 = Then: idepth: 0, %199 [, %203]
%201 = CInt: 10 [, %206]
%187 = Phi: %185, %168, %182 [, %206]
%229 = BinOp: sle, %137, %136 [, %230]
%224 = Then: idepth: 0, %216 [, %230]
%216 = If: idepth: 0, %212, %214 [, %217, %224]
%214 = Ret: 0, %212 [, %216]
%211 = Call: ret_count: 1, id: 3, idepth: 0, %207, %196, %210 [, %212]
%195 = CallEnd: idepth: 0, %194 [, %196, %197, %199]
%177 = Mem: %176 [, %186, %194]
%167 = Phi: %166, %150, %158 [, %186]
%185 = Region: idepth: 0, %183, %184 [, %186, %187, %202]
%203 = Jmp: idepth: 0, %200 [, %204]
%202 = Jmp: idepth: 0, %185 [, %204]
%217 = Then: idepth: 0, %216 [, %220]
%218 = CInt: 11 [, %223]
%206 = Phi: %204, %187, %201 [, %223]
%235 = If: idepth: 0, %231, %233 [, %236, %243]
%233 = Ret: 0, %231 [, %235]
%230 = Call: ret_count: 1, id: 3, idepth: 0, %224, %213, %229 [, %231]
%212 = CallEnd: idepth: 0, %211 [, %213, %214, %216]
%196 = Mem: %195 [, %205, %211]
%186 = Phi: %185, %167, %177 [, %205]
%204 = Region: idepth: 0, %202, %203 [, %205, %206, %219]
%220 = Jmp: idepth: 0, %217 [, %221]
%219 = Jmp: idepth: 0, %204 [, %221]
%236 = Then: idepth: 0, %235 [, %239]
%237 = CInt: 12 [, %242]
%223 = Phi: %221, %206, %218 [, %242]
%292 = Then: idepth: 0, %414 [, %415]
%281 = Then: idepth: 0, %416 [, %414]
%243 = Then: idepth: 0, %235 [, %245]
%303 = Then: idepth: 0, %415 [, %417]
%286 = CInt: 15 [, %291]
%285 = Then: idepth: 0, %414 [, %288]
%275 = CInt: 14 [, %280]
%274 = Then: idepth: 0, %416 [, %277]
%231 = CallEnd: idepth: 0, %230 [, %232, %233, %235]
%213 = Mem: %212 [, %222, %230]
%205 = Phi: %204, %186, %196 [, %222]
%221 = Region: idepth: 0, %219, %220 [, %222, %223, %238]
%239 = Jmp: idepth: 0, %236 [, %240]
%238 = Jmp: idepth: 0, %221 [, %240]
%264 = CInt: 13 [, %269]
%242 = Phi: %240, %223, %237 [, %269]
%416 = IfOp: swapped: true, op: jltu, idepth: 0, %270, %258, %258 [, %274, %281]
%415 = IfOp: swapped: true, op: jgtu, idepth: 0, %292, %259, %258 [, %296, %303]
%414 = IfOp: swapped: false, op: jgtu, idepth: 0, %281, %258, %259 [, %285, %292]
%248 = Ret: 0, %246 [, %258]
%245 = Call: ret_count: 1, id: 1, idepth: 0, %243, %232 [, %246]
%296 = Then: idepth: 0, %415 [, %299]
%417 = IfOp: swapped: true, op: jgtu, idepth: 0, %303, %258, %258 [, %307, %314]
%297 = CInt: 16 [, %302]
%314 = Then: idepth: 0, %417 [, %418]
%291 = Phi: %289, %280, %286 [, %302]
%288 = Jmp: idepth: 0, %285 [, %289]
%287 = Jmp: idepth: 0, %278 [, %289]
%280 = Phi: %278, %269, %275 [, %291]
%277 = Jmp: idepth: 0, %274 [, %278]
%232 = Mem: %231 [, %241, %245]
%222 = Phi: %221, %205, %213 [, %241]
%240 = Region: idepth: 0, %238, %239 [, %241, %242, %265]
%276 = Jmp: idepth: 0, %267 [, %278]
%269 = Phi: %267, %242, %264 [, %280]
%266 = Jmp: idepth: 0, %263 [, %267]
%265 = Jmp: idepth: 0, %240 [, %267]
%270 = Then: idepth: 0, %419 [, %416]
%263 = Then: idepth: 0, %419 [, %266]
%258 = UnOp: uext, %248 [, %419, %416, %416, %414, %415, %417, %417, %418]
%259 = UnOp: uext, %254 [, %419, %414, %415, %418]
%247 = Mem: %246 [, %251]
%246 = CallEnd: idepth: 0, %245 [, %247, %248, %251]
%299 = Jmp: idepth: 0, %296 [, %300]
%298 = Jmp: idepth: 0, %289 [, %300]
%307 = Then: idepth: 0, %417 [, %310]
%308 = CInt: 17 [, %313]
%302 = Phi: %300, %291, %297 [, %313]
%418 = IfOp: swapped: false, op: jltu, idepth: 0, %314, %259, %258 [, %318, %325]
%289 = Region: idepth: 0, %287, %288 [, %290, %291, %298]
%278 = Region: idepth: 0, %276, %277 [, %279, %280, %287]
%241 = Phi: %240, %222, %232 [, %268]
%267 = Region: idepth: 0, %265, %266 [, %268, %269, %276]
%419 = IfOp: swapped: true, op: jltu, idepth: 0, %252, %258, %259 [, %263, %270]
%254 = Ret: 0, %252 [, %259]
%251 = Call: ret_count: 1, id: 2, idepth: 0, %246, %247 [, %252]
%300 = Region: idepth: 0, %298, %299 [, %301, %302, %309]
%310 = Jmp: idepth: 0, %307 [, %311]
%309 = Jmp: idepth: 0, %300 [, %311]
%318 = Then: idepth: 0, %418 [, %321]
%319 = CInt: 18 [, %324]
%313 = Phi: %311, %302, %308 [, %324]
%325 = Then: idepth: 0, %418 [, %327]
%363 = Then: idepth: 0, %422 [, %421]
%374 = Then: idepth: 0, %421 [, %420]
%385 = Then: idepth: 0, %420 [, %423]
%378 = Then: idepth: 0, %420 [, %381]
%368 = CInt: 21 [, %373]
%367 = Then: idepth: 0, %421 [, %370]
%357 = CInt: 20 [, %362]
%356 = Then: idepth: 0, %422 [, %359]
%290 = Phi: %289, %279, %253 [, %301]
%279 = Phi: %278, %268, %253 [, %290]
%268 = Phi: %267, %241, %253 [, %279]
%252 = CallEnd: idepth: 0, %251 [, %253, %254, %419]
%301 = Phi: %300, %290, %253 [, %312]
%311 = Region: idepth: 0, %309, %310 [, %312, %313, %320]
%321 = Jmp: idepth: 0, %318 [, %322]
%320 = Jmp: idepth: 0, %311 [, %322]
%346 = CInt: 19 [, %351]
%324 = Phi: %322, %313, %319 [, %351]
%327 = Call: ret_count: 1, id: 4, idepth: 0, %325, %253 [, %328]
%389 = Then: idepth: 0, %423 [, %392]
%422 = IfOp: swapped: true, op: jgts, idepth: 0, %352, %340, %340 [, %356, %363]
%330 = Ret: 0, %328 [, %340]
%421 = IfOp: swapped: false, op: jlts, idepth: 0, %363, %340, %341 [, %367, %374]
%420 = IfOp: swapped: true, op: jlts, idepth: 0, %374, %341, %340 [, %378, %385]
%423 = IfOp: swapped: true, op: jlts, idepth: 0, %385, %340, %340 [, %389, %396]
%379 = CInt: 22 [, %384]
%381 = Jmp: idepth: 0, %378 [, %382]
%380 = Jmp: idepth: 0, %371 [, %382]
%373 = Phi: %371, %362, %368 [, %384]
%370 = Jmp: idepth: 0, %367 [, %371]
%369 = Jmp: idepth: 0, %360 [, %371]
%362 = Phi: %360, %351, %357 [, %373]
%359 = Jmp: idepth: 0, %356 [, %360]
%253 = Mem: %252 [, %312, %268, %327, %323, %279, %290, %301]
%312 = Phi: %311, %301, %253 [, %323]
%322 = Region: idepth: 0, %320, %321 [, %323, %324, %347]
%358 = Jmp: idepth: 0, %349 [, %360]
%351 = Phi: %349, %324, %346 [, %362]
%348 = Jmp: idepth: 0, %345 [, %349]
%347 = Jmp: idepth: 0, %322 [, %349]
%352 = Then: idepth: 0, %424 [, %422]
%345 = Then: idepth: 0, %424 [, %348]
%329 = Mem: %328 [, %333]
%328 = CallEnd: idepth: 0, %327 [, %329, %330, %333]
%392 = Jmp: idepth: 0, %389 [, %393]
%391 = Jmp: idepth: 0, %382 [, %393]
%340 = UnOp: sext, %330 [, %424, %422, %422, %420, %421, %423, %423, %425]
%341 = UnOp: sext, %336 [, %424, %420, %421, %425]
%396 = Then: idepth: 0, %423 [, %425]
%400 = Then: idepth: 0, %425 [, %403]
%390 = CInt: 23 [, %395]
%384 = Phi: %382, %373, %379 [, %395]
%382 = Region: idepth: 0, %380, %381 [, %383, %384, %391]
%371 = Region: idepth: 0, %369, %370 [, %372, %373, %380]
%360 = Region: idepth: 0, %358, %359 [, %361, %362, %369]
%323 = Phi: %322, %312, %253 [, %350]
%349 = Region: idepth: 0, %347, %348 [, %350, %351, %358]
%424 = IfOp: swapped: true, op: jgts, idepth: 0, %334, %340, %341 [, %345, %352]
%336 = Ret: 0, %334 [, %341]
%333 = Call: ret_count: 1, id: 5, idepth: 0, %328, %329 [, %334]
%393 = Region: idepth: 0, %391, %392 [, %394, %395, %402]
%425 = IfOp: swapped: false, op: jgts, idepth: 0, %396, %341, %340 [, %400, %407]
%403 = Jmp: idepth: 0, %400 [, %404]
%402 = Jmp: idepth: 0, %393 [, %404]
%401 = CInt: 24 [, %406]
%395 = Phi: %393, %384, %390 [, %406]
%383 = Phi: %382, %372, %335 [, %394]
%372 = Phi: %371, %361, %335 [, %383]
%361 = Phi: %360, %350, %335 [, %372]
%350 = Phi: %349, %323, %335 [, %361]
%334 = CallEnd: idepth: 0, %333 [, %335, %336, %424]
%394 = Phi: %393, %383, %335 [, %405]
%407 = Then: idepth: 0, %425 [, %410]
%404 = Region: idepth: 0, %402, %403 [, %405, %406, %409]
%408 = CInt: 0 [, %413]
%406 = Phi: %404, %395, %401 [, %413]
%335 = Mem: %334 [, %394, %350, %412, %405, %361, %372, %383]
%405 = Phi: %404, %394, %335 [, %412]
%410 = Jmp: idepth: 0, %407 [, %411]
%409 = Jmp: idepth: 0, %404 [, %411]
%413 = Phi: %411, %406, %408 [, %29]
%412 = Phi: %411, %405, %335 [, %29]
%411 = Region: idepth: 0, %409, %410 [, %412, %413, %29]
%29 = Return: idepth: 0, %411, %412, %413 []

======== SCHEDULED SON ========
%0 = Start: idepth: 0
%1 = Entry: idepth: 1, %0
  %5 = Call: ret_count: 1, id: 1, idepth: 2, %2
%6 = CallEnd: idepth: 3, %5
  %7 = Mem
  %8 = Ret: 0
  %11 = Call: ret_count: 1, id: 2, idepth: 4, %7
%12 = CallEnd: idepth: 5, %11
  %13 = Mem
  %14 = Ret: 0
  %18 = UnOp: uext, %8
  %19 = UnOp: uext, %14
  %20 = BinOp: ult, %18, %19
  %21 = Call: ret_count: 1, id: 3, idepth: 6, %13, %20
%22 = CallEnd: idepth: 7, %21
  %23 = Mem
  %24 = Ret: 0
  %26 = If: idepth: 8, %24
%27 = Then: idepth: 9, %26
  %28 = CInt: 1
  %426 = MachMove: %28
  %42 = Jmp: idepth: 10
%30 = Then: idepth: 9, %26
  %33 = BinOp: ult, %18, %18
  %34 = Call: ret_count: 1, id: 3, idepth: 10, %23, %33
%35 = CallEnd: idepth: 11, %34
  %36 = Mem
  %37 = Ret: 0
  %39 = If: idepth: 12, %37
%40 = Then: idepth: 13, %39
  %41 = CInt: 2
  %427 = MachMove: %41
  %43 = Jmp: idepth: 14
%44 = Region: idepth: 11, %42, %43
  %45 = Phi: %23, %36
  %428 = Phi: %426, %427
  %429 = MachMove: %428
  %61 = Jmp: idepth: 12
%47 = Then: idepth: 13, %39
  %52 = BinOp: ule, %18, %19
  %53 = Call: ret_count: 1, id: 3, idepth: 14, %36, %52
%54 = CallEnd: idepth: 15, %53
  %55 = Mem
  %56 = Ret: 0
  %58 = If: idepth: 16, %56
%59 = Then: idepth: 17, %58
  %60 = CInt: 3
  %430 = MachMove: %60
  %62 = Jmp: idepth: 18
%63 = Region: idepth: 13, %61, %62
  %64 = Phi: %45, %55
  %431 = Phi: %429, %430
  %432 = MachMove: %431
  %80 = Jmp: idepth: 14
%66 = Then: idepth: 17, %58
  %71 = BinOp: ugt, %19, %18
  %72 = Call: ret_count: 1, id: 3, idepth: 18, %55, %71
%73 = CallEnd: idepth: 19, %72
  %74 = Mem
  %75 = Ret: 0
  %77 = If: idepth: 20, %75
%78 = Then: idepth: 21, %77
  %79 = CInt: 4
  %433 = MachMove: %79
  %81 = Jmp: idepth: 22
%82 = Region: idepth: 15, %80, %81
  %83 = Phi: %64, %74
  %434 = Phi: %432, %433
  %435 = MachMove: %434
  %97 = Jmp: idepth: 16
%85 = Then: idepth: 21, %77
  %88 = BinOp: ugt, %18, %18
  %89 = Call: ret_count: 1, id: 3, idepth: 22, %74, %88
%90 = CallEnd: idepth: 23, %89
  %91 = Mem
  %92 = Ret: 0
  %94 = If: idepth: 24, %92
%95 = Then: idepth: 25, %94
  %96 = CInt: 5
  %436 = MachMove: %96
  %98 = Jmp: idepth: 26
%99 = Region: idepth: 17, %97, %98
  %100 = Phi: %83, %91
  %437 = Phi: %435, %436
  %438 = MachMove: %437
  %116 = Jmp: idepth: 18
%102 = Then: idepth: 25, %94
  %107 = BinOp: uge, %19, %18
  %108 = Call: ret_count: 1, id: 3, idepth: 26, %91, %107
%109 = CallEnd: idepth: 27, %108
  %110 = Mem
  %111 = Ret: 0
  %113 = If: idepth: 28, %111
%114 = Then: idepth: 29, %113
  %115 = CInt: 6
  %439 = MachMove: %115
  %117 = Jmp: idepth: 30
%118 = Region: idepth: 19, %116, %117
  %119 = Phi: %100, %110
  %440 = Phi: %438, %439
  %441 = MachMove: %440
  %147 = Jmp: idepth: 20
%121 = Then: idepth: 29, %113
  %123 = Call: ret_count: 1, id: 4, idepth: 30, %110
%124 = CallEnd: idepth: 31, %123
  %125 = Mem
  %126 = Ret: 0
  %129 = Call: ret_count: 1, id: 5, idepth: 32, %125
%130 = CallEnd: idepth: 33, %129
  %131 = Mem
  %132 = Ret: 0
  %136 = UnOp: sext, %126
  %137 = UnOp: sext, %132
  %138 = BinOp: sgt, %136, %137
  %139 = Call: ret_count: 1, id: 3, idepth: 34, %131, %138
%140 = CallEnd: idepth: 35, %139
  %141 = Mem
  %142 = Ret: 0
  %144 = If: idepth: 36, %142
%145 = Then: idepth: 37, %144
  %146 = CInt: 7
  %442 = MachMove: %146
  %148 = Jmp: idepth: 38
%149 = Region: idepth: 21, %147, %148
  %150 = Phi: %119, %141
  %443 = Phi: %441, %442
  %444 = MachMove: %443
  %164 = Jmp: idepth: 22
%152 = Then: idepth: 37, %144
  %155 = BinOp: sgt, %136, %136
  %156 = Call: ret_count: 1, id: 3, idepth: 38, %141, %155
%157 = CallEnd: idepth: 39, %156
  %158 = Mem
  %159 = Ret: 0
  %161 = If: idepth: 40, %159
%162 = Then: idepth: 41, %161
  %163 = CInt: 8
  %445 = MachMove: %163
  %165 = Jmp: idepth: 42
%166 = Region: idepth: 23, %164, %165
  %167 = Phi: %150, %158
  %446 = Phi: %444, %445
  %447 = MachMove: %446
  %183 = Jmp: idepth: 24
%169 = Then: idepth: 41, %161
  %174 = BinOp: sge, %136, %137
  %175 = Call: ret_count: 1, id: 3, idepth: 42, %158, %174
%176 = CallEnd: idepth: 43, %175
  %177 = Mem
  %178 = Ret: 0
  %180 = If: idepth: 44, %178
%181 = Then: idepth: 45, %180
  %182 = CInt: 9
  %448 = MachMove: %182
  %184 = Jmp: idepth: 46
%185 = Region: idepth: 25, %183, %184
  %186 = Phi: %167, %177
  %449 = Phi: %447, %448
  %450 = MachMove: %449
  %202 = Jmp: idepth: 26
%188 = Then: idepth: 45, %180
  %193 = BinOp: slt, %137, %136
  %194 = Call: ret_count: 1, id: 3, idepth: 46, %177, %193
%195 = CallEnd: idepth: 47, %194
  %196 = Mem
  %197 = Ret: 0
  %199 = If: idepth: 48, %197
%200 = Then: idepth: 49, %199
  %201 = CInt: 10
  %451 = MachMove: %201
  %203 = Jmp: idepth: 50
%204 = Region: idepth: 27, %202, %203
  %205 = Phi: %186, %196
  %452 = Phi: %450, %451
  %453 = MachMove: %452
  %219 = Jmp: idepth: 28
%207 = Then: idepth: 49, %199
  %210 = BinOp: slt, %136, %136
  %211 = Call: ret_count: 1, id: 3, idepth: 50, %196, %210
%212 = CallEnd: idepth: 51, %211
  %213 = Mem
  %214 = Ret: 0
  %216 = If: idepth: 52, %214
%217 = Then: idepth: 53, %216
  %218 = CInt: 11
  %454 = MachMove: %218
  %220 = Jmp: idepth: 54
%221 = Region: idepth: 29, %219, %220
  %222 = Phi: %205, %213
  %455 = Phi: %453, %454
  %456 = MachMove: %455
  %238 = Jmp: idepth: 30
%224 = Then: idepth: 53, %216
  %229 = BinOp: sle, %137, %136
  %230 = Call: ret_count: 1, id: 3, idepth: 54, %213, %229
%231 = CallEnd: idepth: 55, %230
  %232 = Mem
  %233 = Ret: 0
  %235 = If: idepth: 56, %233
%236 = Then: idepth: 57, %235
  %237 = CInt: 12
  %457 = MachMove: %237
  %239 = Jmp: idepth: 58
%240 = Region: idepth: 31, %238, %239
  %241 = Phi: %222, %232
  %458 = Phi: %456, %457
  %459 = MachMove: %458
  %265 = Jmp: idepth: 32
%243 = Then: idepth: 57, %235
  %245 = Call: ret_count: 1, id: 1, idepth: 58, %232
%246 = CallEnd: idepth: 59, %245
  %247 = Mem
  %248 = Ret: 0
  %251 = Call: ret_count: 1, id: 2, idepth: 60, %247
%252 = CallEnd: idepth: 61, %251
  %253 = Mem
  %254 = Ret: 0
  %258 = UnOp: uext, %248
  %259 = UnOp: uext, %254
  %419 = IfOp: swapped: true, op: jltu, idepth: 62, %258, %259
%270 = Then: idepth: 63, %419
  %416 = IfOp: swapped: true, op: jltu, idepth: 64, %258, %258
%281 = Then: idepth: 65, %416
  %414 = IfOp: swapped: false, op: jgtu, idepth: 66, %258, %259
%285 = Then: idepth: 67, %414
  %286 = CInt: 15
  %466 = MachMove: %286
  %288 = Jmp: idepth: 68
%292 = Then: idepth: 67, %414
  %415 = IfOp: swapped: true, op: jgtu, idepth: 68, %259, %258
%303 = Then: idepth: 69, %415
  %417 = IfOp: swapped: true, op: jgtu, idepth: 70, %258, %258
%314 = Then: idepth: 71, %417
  %418 = IfOp: swapped: false, op: jltu, idepth: 72, %259, %258
%318 = Then: idepth: 73, %418
  %319 = CInt: 18
  %475 = MachMove: %319
  %321 = Jmp: idepth: 74
%325 = Then: idepth: 73, %418
  %327 = Call: ret_count: 1, id: 4, idepth: 74, %253
%328 = CallEnd: idepth: 75, %327
  %329 = Mem
  %330 = Ret: 0
  %333 = Call: ret_count: 1, id: 5, idepth: 76, %329
%334 = CallEnd: idepth: 77, %333
  %335 = Mem
  %336 = Ret: 0
  %340 = UnOp: sext, %330
  %341 = UnOp: sext, %336
  %424 = IfOp: swapped: true, op: jgts, idepth: 78, %340, %341
%352 = Then: idepth: 79, %424
  %422 = IfOp: swapped: true, op: jgts, idepth: 80, %340, %340
%363 = Then: idepth: 81, %422
  %421 = IfOp: swapped: false, op: jlts, idepth: 82, %340, %341
%367 = Then: idepth: 83, %421
  %368 = CInt: 21
  %484 = MachMove: %368
  %370 = Jmp: idepth: 84
%374 = Then: idepth: 83, %421
  %420 = IfOp: swapped: true, op: jlts, idepth: 84, %341, %340
%385 = Then: idepth: 85, %420
  %423 = IfOp: swapped: true, op: jlts, idepth: 86, %340, %340
%396 = Then: idepth: 87, %423
  %425 = IfOp: swapped: false, op: jgts, idepth: 88, %341, %340
%400 = Then: idepth: 89, %425
  %401 = CInt: 24
  %493 = MachMove: %401
  %403 = Jmp: idepth: 90
%407 = Then: idepth: 89, %425
  %408 = CInt: 0
  %496 = MachMove: %408
  %410 = Jmp: idepth: 90
%389 = Then: idepth: 87, %423
  %390 = CInt: 23
  %490 = MachMove: %390
  %392 = Jmp: idepth: 88
%378 = Then: idepth: 85, %420
  %379 = CInt: 22
  %487 = MachMove: %379
  %381 = Jmp: idepth: 86
%356 = Then: idepth: 81, %422
  %357 = CInt: 20
  %481 = MachMove: %357
  %359 = Jmp: idepth: 82
%345 = Then: idepth: 79, %424
  %346 = CInt: 19
  %478 = MachMove: %346
  %348 = Jmp: idepth: 80
%307 = Then: idepth: 71, %417
  %308 = CInt: 17
  %472 = MachMove: %308
  %310 = Jmp: idepth: 72
%296 = Then: idepth: 69, %415
  %297 = CInt: 16
  %469 = MachMove: %297
  %299 = Jmp: idepth: 70
%274 = Then: idepth: 65, %416
  %275 = CInt: 14
  %463 = MachMove: %275
  %277 = Jmp: idepth: 66
%263 = Then: idepth: 63, %419
  %264 = CInt: 13
  %460 = MachMove: %264
  %266 = Jmp: idepth: 64
%267 = Region: idepth: 33, %265, %266
  %268 = Phi: %241, %253
  %461 = Phi: %459, %460
  %462 = MachMove: %461
  %276 = Jmp: idepth: 34
%278 = Region: idepth: 35, %276, %277
  %279 = Phi: %268, %253
  %464 = Phi: %462, %463
  %465 = MachMove: %464
  %287 = Jmp: idepth: 36
%289 = Region: idepth: 37, %287, %288
  %290 = Phi: %279, %253
  %467 = Phi: %465, %466
  %468 = MachMove: %467
  %298 = Jmp: idepth: 38
%300 = Region: idepth: 39, %298, %299
  %301 = Phi: %290, %253
  %470 = Phi: %468, %469
  %471 = MachMove: %470
  %309 = Jmp: idepth: 40
%311 = Region: idepth: 41, %309, %310
  %312 = Phi: %301, %253
  %473 = Phi: %471, %472
  %474 = MachMove: %473
  %320 = Jmp: idepth: 42
%322 = Region: idepth: 43, %320, %321
  %323 = Phi: %312, %253
  %476 = Phi: %474, %475
  %477 = MachMove: %476
  %347 = Jmp: idepth: 44
%349 = Region: idepth: 45, %347, %348
  %350 = Phi: %323, %335
  %479 = Phi: %477, %478
  %480 = MachMove: %479
  %358 = Jmp: idepth: 46
%360 = Region: idepth: 47, %358, %359
  %361 = Phi: %350, %335
  %482 = Phi: %480, %481
  %483 = MachMove: %482
  %369 = Jmp: idepth: 48
%371 = Region: idepth: 49, %369, %370
  %372 = Phi: %361, %335
  %485 = Phi: %483, %484
  %486 = MachMove: %485
  %380 = Jmp: idepth: 50
%382 = Region: idepth: 51, %380, %381
  %383 = Phi: %372, %335
  %488 = Phi: %486, %487
  %489 = MachMove: %488
  %391 = Jmp: idepth: 52
%393 = Region: idepth: 53, %391, %392
  %394 = Phi: %383, %335
  %491 = Phi: %489, %490
  %492 = MachMove: %491
  %402 = Jmp: idepth: 54
%404 = Region: idepth: 55, %402, %403
  %405 = Phi: %394, %335
  %494 = Phi: %492, %493
  %495 = MachMove: %494
  %409 = Jmp: idepth: 56
%411 = Region: idepth: 0, %409, %410
  %412 = Phi: %405, %335
  %497 = Phi: %495, %496
  %29 = Return: idepth: 0, %412, %497

======== SOURCE ========
fn(): i8 return 0
======== UNSCHEDULED SON ========
%0 = Start: idepth: 0 [, %1, %2]
%4 = CInt: 0 [, %5]
%2 = Mem: %0 [, %5]
%1 = Entry: idepth: 0, %0 [, %5]
%5 = Return: idepth: 0, %1, %2, %4 []

======== OPTIMIZED SON ========
%0 = Start: idepth: 0 [, %1, %2]
%4 = CInt: 0 [, %5]
%2 = Mem: %0 [, %5]
%1 = Entry: idepth: 0, %0 [, %5]
%5 = Return: idepth: 0, %1, %2, %4 []

======== SCHEDULED SON ========
%0 = Start: idepth: 0
%1 = Entry: idepth: 0, %0
  %4 = CInt: 0
  %5 = Return: idepth: 0, %2, %4

======== SOURCE ========
fn(): i8 return -1
======== UNSCHEDULED SON ========
%4 = CInt: 1 [, %5]
%0 = Start: idepth: 0 [, %1, %2]
%5 = UnOp: neg, %4 [, %6]
%2 = Mem: %0 [, %6]
%1 = Entry: idepth: 0, %0 [, %6]
%6 = Return: idepth: 0, %1, %2, %5 []

======== OPTIMIZED SON ========
%4 = CInt: 1 [, %5]
%0 = Start: idepth: 0 [, %1, %2]
%5 = UnOp: neg, %4 [, %6]
%2 = Mem: %0 [, %6]
%1 = Entry: idepth: 0, %0 [, %6]
%6 = Return: idepth: 0, %1, %2, %5 []

======== SCHEDULED SON ========
%0 = Start: idepth: 0
%1 = Entry: idepth: 1, %0
  %4 = CInt: 1
  %5 = UnOp: neg, %4
  %6 = Return: idepth: 0, %2, %5

======== SOURCE ========
fn(v: bool): bool return v
======== UNSCHEDULED SON ========
%4 = Arg: 0, %0 [, %6]
%5 = Local: 1, %2 [, %6, %7]
%2 = Mem: %0 [, %6, %5]
%0 = Start: idepth: 0 [, %1, %2, %4]
%7 = Load: %6, %5 [, %8]
%6 = Store: %1, %2, %5, %4 [, %8, %7]
%1 = Entry: idepth: 0, %0 [, %8, %6]
%8 = Return: idepth: 0, %1, %6, %7 []

======== OPTIMIZED SON ========
%0 = Start: idepth: 0 [, %1, %2, %4]
%4 = Arg: 0, %0 [, %8]
%2 = Mem: %0 [, %8]
%1 = Entry: idepth: 0, %0 [, %8]
%8 = Return: idepth: 0, %1, %2, %4 []

======== SCHEDULED SON ========
%0 = Start: idepth: 0
%1 = Entry: idepth: 0, %0
  %4 = Arg: 0
  %8 = Return: idepth: 0, %2, %4

======== SOURCE ========
fn(): u8 return 0
======== UNSCHEDULED SON ========
%0 = Start: idepth: 0 [, %1, %2]
%4 = CInt: 0 [, %5]
%2 = Mem: %0 [, %5]
%1 = Entry: idepth: 0, %0 [, %5]
%5 = Return: idepth: 0, %1, %2, %4 []

======== OPTIMIZED SON ========
%0 = Start: idepth: 0 [, %1, %2]
%4 = CInt: 0 [, %5]
%2 = Mem: %0 [, %5]
%1 = Entry: idepth: 0, %0 [, %5]
%5 = Return: idepth: 0, %1, %2, %4 []

======== SCHEDULED SON ========
%0 = Start: idepth: 0
%1 = Entry: idepth: 0, %0
  %4 = CInt: 0
  %5 = Return: idepth: 0, %2, %4

======== SOURCE ========
fn(): u8 return 1
======== UNSCHEDULED SON ========
%0 = Start: idepth: 0 [, %1, %2]
%4 = CInt: 1 [, %5]
%2 = Mem: %0 [, %5]
%1 = Entry: idepth: 0, %0 [, %5]
%5 = Return: idepth: 0, %1, %2, %4 []

======== OPTIMIZED SON ========
%0 = Start: idepth: 0 [, %1, %2]
%4 = CInt: 1 [, %5]
%2 = Mem: %0 [, %5]
%1 = Entry: idepth: 0, %0 [, %5]
%5 = Return: idepth: 0, %1, %2, %4 []

======== SCHEDULED SON ========
%0 = Start: idepth: 0
%1 = Entry: idepth: 0, %0
  %4 = CInt: 1
  %5 = Return: idepth: 0, %2, %4

======== CODEGEN ========
main:
         st $31, $254, -32, 32
     addi64 $254, $254, -32
        jal $31, $0, :one
         cp $32, $1
        jal $31, $0, :zero
         cp $33, $1
       andi $32, $32, 255
       andi $33, $33, 255
       cmpu $34, $32, $33
      cmpui $34, $34, -1
        not $34, $34
         cp $2, $34
        jal $31, $0, :cond
         cp $34, $1
        jeq $34, $0, :3
       li64 $32, 1
        jmp :4
3:     cmpu $34, $32, $32
      cmpui $34, $34, -1
        not $34, $34
         cp $2, $34
        jal $31, $0, :cond
         cp $34, $1
        jeq $34, $0, :5
       li64 $32, 2
4:      jmp :6
5:     cmpu $34, $32, $33
      cmpui $34, $34, 1
         cp $2, $34
        jal $31, $0, :cond
         cp $34, $1
        jeq $34, $0, :7
       li64 $32, 3
6:      jmp :8
7:     cmpu $34, $33, $32
      cmpui $34, $34, 1
        not $34, $34
         cp $2, $34
        jal $31, $0, :cond
         cp $34, $1
        jeq $34, $0, :9
       li64 $32, 4
8:      jmp :a
9:     cmpu $34, $32, $32
      cmpui $34, $34, 1
        not $34, $34
         cp $2, $34
        jal $31, $0, :cond
         cp $34, $1
        jeq $34, $0, :b
       li64 $32, 5
a:      jmp :c
b:     cmpu $32, $33, $32
      cmpui $32, $32, -1
         cp $2, $32
        jal $31, $0, :cond
         cp $32, $1
        jeq $32, $0, :d
       li64 $32, 6
c:      jmp :e
d:      jal $31, $0, :mne
         cp $32, $1
        jal $31, $0, :mero
         cp $33, $1
       sxt8 $32, $32
       sxt8 $33, $33
       cmps $34, $32, $33
      cmpui $34, $34, 1
        not $34, $34
         cp $2, $34
        jal $31, $0, :cond
         cp $34, $1
        jeq $34, $0, :11
       li64 $32, 7
e:      jmp :12
11:     cmps $34, $32, $32
      cmpui $34, $34, 1
        not $34, $34
         cp $2, $34
        jal $31, $0, :cond
         cp $34, $1
        jeq $34, $0, :13
       li64 $32, 8
12:      jmp :14
13:     cmps $34, $32, $33
      cmpui $34, $34, -1
         cp $2, $34
        jal $31, $0, :cond
         cp $34, $1
        jeq $34, $0, :15
       li64 $32, 9
14:      jmp :16
15:     cmps $34, $33, $32
      cmpui $34, $34, -1
        not $34, $34
         cp $2, $34
        jal $31, $0, :cond
         cp $34, $1
        jeq $34, $0, :17
       li64 $32, 10
16:      jmp :18
17:     cmps $34, $32, $32
      cmpui $34, $34, -1
        not $34, $34
         cp $2, $34
        jal $31, $0, :cond
         cp $34, $1
        jeq $34, $0, :19
       li64 $32, 11
18:      jmp :1a
19:     cmps $32, $33, $32
      cmpui $32, $32, 1
         cp $2, $32
        jal $31, $0, :cond
         cp $32, $1
        jeq $32, $0, :1b
       li64 $32, 12
1a:      jmp :1c
1b:      jal $31, $0, :one
         cp $32, $1
        jal $31, $0, :zero
         cp $33, $1
       andi $32, $32, 255
       andi $33, $33, 255
       jltu $32, $33, :1d
        jmp :1d
1d:     jltu $32, $32, :1e
        jmp :1e
1e:     jgtu $32, $33, :1f
       li64 $32, 15
        jmp :1c
1f:     jgtu $33, $32, :20
        jmp :20
20:     jgtu $32, $32, :21
        jmp :21
21:     jltu $33, $32, :22
       li64 $32, 18
        jmp :1c
22:      jal $31, $0, :mne
         cp $32, $1
        jal $31, $0, :mero
         cp $33, $1
       sxt8 $32, $32
       sxt8 $33, $33
       jgts $32, $33, :23
        jmp :23
23:     jgts $32, $32, :24
        jmp :24
24:     jlts $32, $33, :25
       li64 $32, 21
        jmp :1c
25:     jlts $33, $32, :26
        jmp :26
26:     jlts $32, $32, :27
        jmp :27
27:     jgts $33, $32, :28
       li64 $32, 24
        jmp :1c
28:     li64 $32, 0
        jmp :1c
       li64 $32, 23
        jmp :1c
       li64 $32, 22
        jmp :1c
       li64 $32, 20
        jmp :1c
       li64 $32, 19
        jmp :1c
       li64 $32, 17
        jmp :1c
       li64 $32, 16
        jmp :1c
       li64 $32, 14
        jmp :1c
       li64 $32, 13
1c:       cp $1, $32
     addi64 $254, $254, 32
         ld $31, $254, -32, 32
         tx
mero:
       li64 $13, 0
         cp $1, $13
       jala $0, $31, 0
mne:
       li64 $13, 1
        neg $13, $13
         cp $1, $13
       jala $0, $31, 0
cond:
         cp $13, $2
         cp $1, $13
       jala $0, $31, 0
zero:
       li64 $13, 0
         cp $1, $13
       jala $0, $31, 0
one:
       li64 $13, 1
         cp $1, $13
       jala $0, $31, 0

======== EXECUTION ========
      st $31=0, $254=10240, -32, 32
  addi64 $254=10240, $254, -32
     jal $31=0, $0=0, 1146
    li64 $13=0, 1
      cp $1=0, $13=1
    jala $0=0, $31=31, 0
      cp $32=0, $1=1
     jal $31=31, $0=0, 1112
    li64 $13=1, 0
      cp $1=1, $13=0
    jala $0=0, $31=41, 0
      cp $33=0, $1=0
    andi $32=1, $32, 255
    andi $33=0, $33, 255
    cmpu $34=0, $32=1, $33=0
   cmpui $34=1, $34, -1
     not $34=-1, $34
      cp $2=0, $34=0
     jal $31=41, $0=0, 1042
      cp $13=0, $2=0
      cp $1=0, $13=0
    jala $0=0, $31=94, 0
      cp $34=0, $1=0
     jeq $34=0, $0=0, 20
    cmpu $34=0, $32=1, $32
   cmpui $34=0, $34, -1
     not $34=-1, $34
      cp $2=0, $34=0
     jal $31=94, $0=0, 991
      cp $13=0, $2=0
      cp $1=0, $13=0
    jala $0=0, $31=145, 0
      cp $34=0, $1=0
     jeq $34=0, $0=0, 20
    cmpu $34=0, $32=1, $33=0
   cmpui $34=1, $34, 1
      cp $2=0, $34=0
     jal $31=145, $0=0, 943
      cp $13=0, $2=0
      cp $1=0, $13=0
    jala $0=0, $31=193, 0
      cp $34=0, $1=0
     jeq $34=0, $0=0, 20
    cmpu $34=0, $33=0, $32=1
   cmpui $34=-1, $34, 1
     not $34=1, $34
      cp $2=0, $34=0
     jal $31=193, $0=0, 892
      cp $13=0, $2=0
      cp $1=0, $13=0
    jala $0=0, $31=244, 0
      cp $34=0, $1=0
     jeq $34=0, $0=0, 20
    cmpu $34=0, $32=1, $32
   cmpui $34=0, $34, 1
     not $34=-1, $34
      cp $2=0, $34=0
     jal $31=244, $0=0, 841
      cp $13=0, $2=0
      cp $1=0, $13=0
    jala $0=0, $31=295, 0
      cp $34=0, $1=0
     jeq $34=0, $0=0, 20
    cmpu $32=1, $33=0, $32
   cmpui $32=-1, $32, -1
      cp $2=0, $32=0
     jal $31=295, $0=0, 793
      cp $13=0, $2=0
      cp $1=0, $13=0
    jala $0=0, $31=343, 0
      cp $32=0, $1=0
     jeq $32=0, $0=0, 20
     jal $31=343, $0=0, 736
    li64 $13=0, 1
     neg $13=1, $13
      cp $1=0, $13=-1
    jala $0=0, $31=373, 0
      cp $32=0, $1=-1
     jal $31=373, $0=0, 702
    li64 $13=-1, 0
      cp $1=-1, $13=0
    jala $0=0, $31=383, 0
      cp $33=0, $1=0
    sxt8 $32=-1, $32
    sxt8 $33=0, $33
    cmps $34=0, $32=-1, $33=0
   cmpui $34=-1, $34, 1
     not $34=1, $34
      cp $2=0, $34=0
     jal $31=383, $0=0, 716
      cp $13=0, $2=0
      cp $1=0, $13=0
    jala $0=0, $31=420, 0
      cp $34=0, $1=0
     jeq $34=0, $0=0, 20
    cmps $34=0, $32=-1, $32
   cmpui $34=0, $34, 1
     not $34=-1, $34
      cp $2=0, $34=0
     jal $31=420, $0=0, 665
      cp $13=0, $2=0
      cp $1=0, $13=0
    jala $0=0, $31=471, 0
      cp $34=0, $1=0
     jeq $34=0, $0=0, 20
    cmps $34=0, $32=-1, $33=0
   cmpui $34=-1, $34, -1
      cp $2=0, $34=0
     jal $31=471, $0=0, 617
      cp $13=0, $2=0
      cp $1=0, $13=0
    jala $0=0, $31=519, 0
      cp $34=0, $1=0
     jeq $34=0, $0=0, 20
    cmps $34=0, $33=0, $32=-1
   cmpui $34=1, $34, -1
     not $34=-1, $34
      cp $2=0, $34=0
     jal $31=519, $0=0, 566
      cp $13=0, $2=0
      cp $1=0, $13=0
    jala $0=0, $31=570, 0
      cp $34=0, $1=0
     jeq $34=0, $0=0, 20
    cmps $34=0, $32=-1, $32
   cmpui $34=0, $34, -1
     not $34=-1, $34
      cp $2=0, $34=0
     jal $31=570, $0=0, 515
      cp $13=0, $2=0
      cp $1=0, $13=0
    jala $0=0, $31=621, 0
      cp $34=0, $1=0
     jeq $34=0, $0=0, 20
    cmps $32=-1, $33=0, $32
   cmpui $32=1, $32, 1
      cp $2=0, $32=0
     jal $31=621, $0=0, 467
      cp $13=0, $2=0
      cp $1=0, $13=0
    jala $0=0, $31=669, 0
      cp $32=0, $1=0
     jeq $32=0, $0=0, 20
     jal $31=669, $0=0, 478
    li64 $13=0, 1
      cp $1=0, $13=1
    jala $0=0, $31=699, 0
      cp $32=0, $1=1
     jal $31=699, $0=0, 444
    li64 $13=1, 0
      cp $1=1, $13=0
    jala $0=0, $31=709, 0
      cp $33=0, $1=0
    andi $32=1, $32, 255
    andi $33=0, $33, 255
    jltu $32=1, $33=0, 10
     jmp 5
    jltu $32=1, $32, 10
     jmp 5
    jgtu $32=1, $33=0, 20
    jgtu $33=0, $32=1, 10
     jmp 5
    jgtu $32=1, $32, 10
     jmp 5
    jltu $33=0, $32=1, 20
     jal $31=709, $0=0, 288
    li64 $13=0, 1
     neg $13=1, $13
      cp $1=0, $13=-1
    jala $0=0, $31=821, 0
      cp $32=1, $1=-1
     jal $31=821, $0=0, 254
    li64 $13=-1, 0
      cp $1=-1, $13=0
    jala $0=0, $31=831, 0
      cp $33=0, $1=0
    sxt8 $32=-1, $32
    sxt8 $33=0, $33
    jgts $32=-1, $33=0, 10
     jmp 5
    jgts $32=-1, $32, 10
     jmp 5
    jlts $32=-1, $33=0, 20
    jlts $33=0, $32=-1, 10
     jmp 5
    jlts $32=-1, $32, 10
     jmp 5
    jgts $33=0, $32=-1, 20
    li64 $32=-1, 0
     jmp 120
      cp $1=0, $32=0
  addi64 $254=10208, $254, 32
      ld $31=831, $254=10240, -32, 32
      tx