======== SOURCE ========
fn(): uint {
	{
		// no opts unsigned
		o := one()
		z := zero()

		if cond(o < z) return 1
		if cond(o < o) return 2
		if cond(o <= z) return 3
		if cond(z > o) return 4
		if cond(o > o) return 5
		if cond(z >= o) return 6
	}

	{
		// no opts signed
		o := mne()
		z := mero()

		if cond(o > z) return 7
		if cond(o > o) return 8
		if cond(o >= z) return 9
		if cond(z < o) return 10
		if cond(o < o) return 11
		if cond(z <= o) return 12
	}

	{
		// branch opts unsigned
		o := one()
		z := zero()

		if o < z return 13
		if o < o return 14
		if o <= z return 15
		if z > o return 16
		if o > o return 17
		if z >= o return 18
	}

	{
		// branch opts signed
		o := mne()
		z := mero()

		if o > z return 19
		if o > o return 20
		if o >= z return 21
		if z < o return 22
		if o < o return 23
		if z <= o return 24
	}

	return 0
}
======== UNSCHEDULED SON ========
%117 = CInt: 6 [, %122]
%204 = CInt: 10 [, %209]
%185 = CInt: 9 [, %190]
%166 = CInt: 8 [, %171]
%148 = CInt: 7 [, %153]
%222 = CInt: 11 [, %227]
%80 = CInt: 4 [, %85]
%61 = CInt: 3 [, %66]
%42 = CInt: 2 [, %47]
%28 = CInt: 1 [, %47]
%116 = Then: idepth: 0, %115 [, %119]
%119 = Jmp: idepth: 0, %116 [, %120]
%122 = Phi: %120, %103, %117 [, %153]
%98 = CInt: 5 [, %103]
%240 = Then: idepth: 0, %239 [, %243]
%241 = CInt: 12 [, %246]
%313 = Then: idepth: 0, %305 [, %318]
%300 = Then: idepth: 0, %292 [, %305]
%287 = Then: idepth: 0, %279 [, %292]
%209 = Phi: %207, %190, %204 [, %227]
%206 = Jmp: idepth: 0, %203 [, %207]
%203 = Then: idepth: 0, %202 [, %206]
%190 = Phi: %188, %171, %185 [, %209]
%205 = Jmp: idepth: 0, %188 [, %207]
%187 = Jmp: idepth: 0, %184 [, %188]
%184 = Then: idepth: 0, %183 [, %187]
%171 = Phi: %169, %153, %166 [, %190]
%186 = Jmp: idepth: 0, %169 [, %188]
%168 = Jmp: idepth: 0, %165 [, %169]
%165 = Then: idepth: 0, %164 [, %168]
%153 = Phi: %151, %122, %148 [, %171]
%167 = Jmp: idepth: 0, %151 [, %169]
%150 = Jmp: idepth: 0, %147 [, %151]
%149 = Jmp: idepth: 0, %120 [, %151]
%147 = Then: idepth: 0, %146 [, %150]
%237 = Ret: 0, %235 [, %239]
%239 = If: idepth: 0, %235, %237 [, %240, %247]
%227 = Phi: %225, %209, %222 [, %246]
%224 = Jmp: idepth: 0, %221 [, %225]
%223 = Jmp: idepth: 0, %207 [, %225]
%221 = Then: idepth: 0, %220 [, %224]
%85 = Phi: %83, %66, %80 [, %103]
%82 = Jmp: idepth: 0, %79 [, %83]
%79 = Then: idepth: 0, %78 [, %82]
%66 = Phi: %64, %47, %61 [, %85]
%81 = Jmp: idepth: 0, %64 [, %83]
%63 = Jmp: idepth: 0, %60 [, %64]
%60 = Then: idepth: 0, %59 [, %63]
%41 = Then: idepth: 0, %40 [, %44]
%47 = Phi: %45, %28, %42 [, %66]
%62 = Jmp: idepth: 0, %45 [, %64]
%44 = Jmp: idepth: 0, %41 [, %45]
%43 = Jmp: idepth: 0, %27 [, %45]
%27 = Then: idepth: 0, %26 [, %43]
%113 = Ret: 0, %111 [, %115]
%115 = If: idepth: 0, %111, %113 [, %116, %123]
%120 = Region: idepth: 0, %118, %119 [, %149, %121, %122]
%103 = Phi: %101, %85, %98 [, %122]
%118 = Jmp: idepth: 0, %101 [, %120]
%100 = Jmp: idepth: 0, %97 [, %101]
%99 = Jmp: idepth: 0, %83 [, %101]
%97 = Then: idepth: 0, %96 [, %100]
%294 = CInt: 15 [, %299]
%293 = Then: idepth: 0, %292 [, %296]
%281 = CInt: 14 [, %286]
%280 = Then: idepth: 0, %279 [, %283]
%243 = Jmp: idepth: 0, %240 [, %244]
%242 = Jmp: idepth: 0, %225 [, %244]
%268 = CInt: 13 [, %273]
%246 = Phi: %244, %227, %241 [, %273]
%306 = Then: idepth: 0, %305 [, %309]
%307 = CInt: 16 [, %312]
%318 = If: idepth: 0, %313, %316 [, %319, %326]
%305 = If: idepth: 0, %300, %303 [, %306, %313]
%292 = If: idepth: 0, %287, %290 [, %293, %300]
%279 = If: idepth: 0, %274, %277 [, %280, %287]
%247 = Then: idepth: 0, %239 [, %248]
%210 = Then: idepth: 0, %202 [, %215]
%207 = Region: idepth: 0, %205, %206 [, %223, %208, %209]
%200 = Ret: 0, %198 [, %202]
%202 = If: idepth: 0, %198, %200 [, %203, %210]
%191 = Then: idepth: 0, %183 [, %197]
%188 = Region: idepth: 0, %186, %187 [, %205, %189, %190]
%181 = Ret: 0, %179 [, %183]
%183 = If: idepth: 0, %179, %181 [, %184, %191]
%172 = Then: idepth: 0, %164 [, %178]
%169 = Region: idepth: 0, %167, %168 [, %186, %170, %171]
%162 = Ret: 0, %160 [, %164]
%164 = If: idepth: 0, %160, %162 [, %165, %172]
%154 = Then: idepth: 0, %146 [, %159]
%151 = Region: idepth: 0, %149, %150 [, %167, %152, %153]
%144 = Ret: 0, %142 [, %146]
%146 = If: idepth: 0, %142, %144 [, %147, %154]
%235 = CallEnd: idepth: 0, %234 [, %239, %236, %237]
%228 = Then: idepth: 0, %220 [, %234]
%225 = Region: idepth: 0, %223, %224 [, %242, %226, %227]
%218 = Ret: 0, %216 [, %220]
%220 = If: idepth: 0, %216, %218 [, %221, %228]
%112 = Mem: %111 [, %121, %124]
%123 = Then: idepth: 0, %115 [, %124]
%86 = Then: idepth: 0, %78 [, %91]
%83 = Region: idepth: 0, %81, %82 [, %99, %84, %85]
%76 = Ret: 0, %74 [, %78]
%78 = If: idepth: 0, %74, %76 [, %79, %86]
%67 = Then: idepth: 0, %59 [, %73]
%64 = Region: idepth: 0, %62, %63 [, %81, %65, %66]
%57 = Ret: 0, %55 [, %59]
%59 = If: idepth: 0, %55, %57 [, %60, %67]
%48 = Then: idepth: 0, %40 [, %54]
%38 = Ret: 0, %36 [, %40]
%40 = If: idepth: 0, %36, %38 [, %41, %48]
%30 = Then: idepth: 0, %26 [, %35]
%45 = Region: idepth: 0, %43, %44 [, %62, %46, %47]
%24 = Ret: 0, %22 [, %26]
%26 = If: idepth: 0, %22, %24 [, %27, %30]
%111 = CallEnd: idepth: 0, %110 [, %115, %112, %113]
%104 = Then: idepth: 0, %96 [, %110]
%121 = Phi: %120, %102, %112 [, %152]
%101 = Region: idepth: 0, %99, %100 [, %118, %102, %103]
%94 = Ret: 0, %92 [, %96]
%96 = If: idepth: 0, %92, %94 [, %97, %104]
%326 = Then: idepth: 0, %318 [, %331]
%299 = Phi: %297, %286, %294 [, %312]
%296 = Jmp: idepth: 0, %293 [, %297]
%286 = Phi: %284, %273, %281 [, %299]
%295 = Jmp: idepth: 0, %284 [, %297]
%283 = Jmp: idepth: 0, %280 [, %284]
%236 = Mem: %235 [, %245, %248]
%244 = Region: idepth: 0, %242, %243 [, %269, %245, %246]
%273 = Phi: %271, %246, %268 [, %286]
%282 = Jmp: idepth: 0, %271 [, %284]
%270 = Jmp: idepth: 0, %267 [, %271]
%269 = Jmp: idepth: 0, %244 [, %271]
%274 = Then: idepth: 0, %266 [, %279]
%267 = Then: idepth: 0, %266 [, %270]
%309 = Jmp: idepth: 0, %306 [, %310]
%308 = Jmp: idepth: 0, %297 [, %310]
%319 = Then: idepth: 0, %318 [, %322]
%320 = CInt: 17 [, %325]
%312 = Phi: %310, %299, %307 [, %325]
%329 = BinOp: uge, %327, %328 [, %331]
%316 = BinOp: ugt, %314, %315 [, %318]
%303 = BinOp: ugt, %301, %302 [, %305]
%290 = BinOp: ule, %288, %289 [, %292]
%277 = BinOp: ult, %275, %276 [, %279]
%264 = BinOp: ult, %262, %263 [, %266]
%248 = Call: id: 1, idepth: 0, %247, %236 [, %249]
%214 = BinOp: slt, %212, %213 [, %215]
%215 = Call: id: 3, idepth: 0, %210, %199, %214 [, %216]
%208 = Phi: %207, %189, %199 [, %226]
%198 = CallEnd: idepth: 0, %197 [, %202, %199, %200]
%196 = BinOp: slt, %194, %195 [, %197]
%197 = Call: id: 3, idepth: 0, %191, %180, %196 [, %198]
%189 = Phi: %188, %170, %180 [, %208]
%179 = CallEnd: idepth: 0, %178 [, %183, %180, %181]
%177 = BinOp: sge, %175, %176 [, %178]
%178 = Call: id: 3, idepth: 0, %172, %161, %177 [, %179]
%170 = Phi: %169, %152, %161 [, %189]
%160 = CallEnd: idepth: 0, %159 [, %164, %161, %162]
%158 = BinOp: sgt, %156, %157 [, %159]
%159 = Call: id: 3, idepth: 0, %154, %143, %158 [, %160]
%152 = Phi: %151, %121, %143 [, %170]
%142 = CallEnd: idepth: 0, %141 [, %146, %143, %144]
%140 = BinOp: sgt, %138, %139 [, %141]
%233 = BinOp: sle, %231, %232 [, %234]
%234 = Call: id: 3, idepth: 0, %228, %217, %233 [, %235]
%226 = Phi: %225, %208, %217 [, %245]
%216 = CallEnd: idepth: 0, %215 [, %220, %217, %218]
%124 = Call: id: 4, idepth: 0, %123, %112 [, %125]
%90 = BinOp: ugt, %88, %89 [, %91]
%91 = Call: id: 3, idepth: 0, %86, %75, %90 [, %92]
%84 = Phi: %83, %65, %75 [, %102]
%74 = CallEnd: idepth: 0, %73 [, %78, %75, %76]
%72 = BinOp: ugt, %70, %71 [, %73]
%73 = Call: id: 3, idepth: 0, %67, %56, %72 [, %74]
%65 = Phi: %64, %46, %56 [, %84]
%55 = CallEnd: idepth: 0, %54 [, %59, %56, %57]
%53 = BinOp: ule, %51, %52 [, %54]
%54 = Call: id: 3, idepth: 0, %48, %37, %53 [, %55]
%36 = CallEnd: idepth: 0, %35 [, %40, %37, %38]
%34 = BinOp: ult, %32, %33 [, %35]
%35 = Call: id: 3, idepth: 0, %30, %23, %34 [, %36]
%46 = Phi: %45, %23, %37 [, %65]
%22 = CallEnd: idepth: 0, %21 [, %26, %23, %24]
%20 = BinOp: ult, %18, %19 [, %21]
%109 = BinOp: uge, %107, %108 [, %110]
%110 = Call: id: 3, idepth: 0, %104, %93, %109 [, %111]
%102 = Phi: %101, %84, %93 [, %121]
%92 = CallEnd: idepth: 0, %91 [, %96, %93, %94]
%331 = If: idepth: 0, %326, %329 [, %332, %339]
%392 = Then: idepth: 0, %384 [, %397]
%297 = Region: idepth: 0, %295, %296 [, %308, %298, %299]
%284 = Region: idepth: 0, %282, %283 [, %295, %285, %286]
%245 = Phi: %244, %226, %236 [, %272]
%271 = Region: idepth: 0, %269, %270 [, %282, %272, %273]
%266 = If: idepth: 0, %255, %264 [, %267, %274]
%310 = Region: idepth: 0, %308, %309 [, %321, %311, %312]
%322 = Jmp: idepth: 0, %319 [, %323]
%321 = Jmp: idepth: 0, %310 [, %323]
%332 = Then: idepth: 0, %331 [, %335]
%333 = CInt: 18 [, %338]
%325 = Phi: %323, %312, %320 [, %338]
%327 = UnOp: uext, %261 [, %329]
%301 = UnOp: uext, %261 [, %303]
%289 = UnOp: uext, %261 [, %290]
%263 = UnOp: uext, %261 [, %264]
%328 = UnOp: uext, %260 [, %329]
%315 = UnOp: uext, %260 [, %316]
%314 = UnOp: uext, %260 [, %316]
%302 = UnOp: uext, %260 [, %303]
%288 = UnOp: uext, %260 [, %290]
%276 = UnOp: uext, %260 [, %277]
%275 = UnOp: uext, %260 [, %277]
%262 = UnOp: uext, %260 [, %264]
%254 = Call: id: 2, idepth: 0, %249, %253 [, %255]
%251 = Ret: 0, %249 [, %253]
%250 = Mem: %249 [, %253]
%249 = CallEnd: idepth: 0, %248 [, %254, %250, %251, %253]
%194 = UnOp: sext, %192 [, %196]
%176 = UnOp: sext, %174 [, %177]
%139 = UnOp: sext, %137 [, %140]
%231 = UnOp: sext, %229 [, %233]
%141 = Call: id: 3, idepth: 0, %131, %135, %140 [, %142]
%133 = Ret: 0, %131 [, %135]
%132 = Mem: %131 [, %135]
%131 = CallEnd: idepth: 0, %130 [, %141, %132, %133, %135]
%213 = UnOp: sext, %211 [, %214]
%212 = UnOp: sext, %211 [, %214]
%199 = Mem: %198 [, %208, %215, %211]
%195 = UnOp: sext, %193 [, %196]
%180 = Mem: %179 [, %189, %197, %192, %193]
%175 = UnOp: sext, %173 [, %177]
%161 = Mem: %160 [, %170, %178, %173, %174]
%157 = UnOp: sext, %155 [, %158]
%156 = UnOp: sext, %155 [, %158]
%143 = Mem: %142 [, %152, %159, %155]
%138 = UnOp: sext, %136 [, %140]
%232 = UnOp: sext, %230 [, %233]
%217 = Mem: %216 [, %226, %234, %229, %230]
%130 = Call: id: 5, idepth: 0, %125, %129 [, %131]
%127 = Ret: 0, %125 [, %129]
%126 = Mem: %125 [, %129]
%125 = CallEnd: idepth: 0, %124 [, %130, %126, %127, %129]
%70 = UnOp: uext, %68 [, %72]
%52 = UnOp: uext, %50 [, %53]
%19 = UnOp: uext, %17 [, %20]
%107 = UnOp: uext, %105 [, %109]
%21 = Call: id: 3, idepth: 0, %11, %15, %20 [, %22]
%13 = Ret: 0, %11 [, %15]
%12 = Mem: %11 [, %15]
%11 = CallEnd: idepth: 0, %10 [, %21, %12, %13, %15]
%89 = UnOp: uext, %87 [, %90]
%88 = UnOp: uext, %87 [, %90]
%75 = Mem: %74 [, %84, %91, %87]
%71 = UnOp: uext, %69 [, %72]
%56 = Mem: %55 [, %65, %73, %68, %69]
%51 = UnOp: uext, %49 [, %53]
%37 = Mem: %36 [, %46, %54, %49, %50]
%33 = UnOp: uext, %31 [, %34]
%32 = UnOp: uext, %31 [, %34]
%23 = Mem: %22 [, %46, %35, %31]
%18 = UnOp: uext, %16 [, %20]
%108 = UnOp: uext, %106 [, %109]
%93 = Mem: %92 [, %102, %110, %105, %106]
%7 = Ret: 0, %5 [, %9]
%6 = Mem: %5 [, %9]
%10 = Call: id: 2, idepth: 0, %5, %9 [, %11]
%379 = Then: idepth: 0, %371 [, %384]
%339 = Then: idepth: 0, %331 [, %340]
%405 = Then: idepth: 0, %397 [, %410]
%398 = Then: idepth: 0, %397 [, %401]
%386 = CInt: 21 [, %391]
%385 = Then: idepth: 0, %384 [, %388]
%373 = CInt: 20 [, %378]
%372 = Then: idepth: 0, %371 [, %375]
%397 = If: idepth: 0, %392, %395 [, %398, %405]
%384 = If: idepth: 0, %379, %382 [, %385, %392]
%298 = Phi: %297, %285, %259 [, %311]
%285 = Phi: %284, %272, %259 [, %298]
%272 = Phi: %271, %245, %259 [, %285]
%257 = Ret: 0, %255 [, %259]
%256 = Mem: %255 [, %259]
%255 = CallEnd: idepth: 0, %254 [, %266, %256, %257, %259]
%311 = Phi: %310, %298, %259 [, %324]
%323 = Region: idepth: 0, %321, %322 [, %334, %324, %325]
%335 = Jmp: idepth: 0, %332 [, %336]
%334 = Jmp: idepth: 0, %323 [, %336]
%360 = CInt: 19 [, %365]
%338 = Phi: %336, %325, %333 [, %365]
%261 = Load: %259, %258 [, %263, %289, %301, %327]
%260 = Load: %259, %252 [, %262, %275, %276, %288, %302, %314, %315, %328]
%253 = Store: %249, %250, %252, %251 [, %254]
%192 = Load: %180, %134 [, %194]
%174 = Load: %161, %134 [, %176]
%137 = Load: %135, %134 [, %139]
%229 = Load: %217, %134 [, %231]
%135 = Store: %131, %132, %134, %133 [, %141, %136, %137]
%211 = Load: %199, %128 [, %212, %213]
%193 = Load: %180, %128 [, %195]
%173 = Load: %161, %128 [, %175]
%155 = Load: %143, %128 [, %156, %157]
%136 = Load: %135, %128 [, %138]
%230 = Load: %217, %128 [, %232]
%129 = Store: %125, %126, %128, %127 [, %130]
%68 = Load: %56, %14 [, %70]
%50 = Load: %37, %14 [, %52]
%17 = Load: %15, %14 [, %19]
%105 = Load: %93, %14 [, %107]
%15 = Store: %11, %12, %14, %13 [, %21, %16, %17]
%87 = Load: %75, %8 [, %88, %89]
%69 = Load: %56, %8 [, %71]
%49 = Load: %37, %8 [, %51]
%31 = Load: %23, %8 [, %32, %33]
%16 = Load: %15, %8 [, %18]
%106 = Load: %93, %8 [, %108]
%9 = Store: %5, %6, %8, %7 [, %10]
%5 = CallEnd: idepth: 0, %4 [, %10, %6, %7, %9]
%1 = Entry: idepth: 0, %0 [, %4]
%371 = If: idepth: 0, %366, %369 [, %372, %379]
%343 = Ret: 0, %341 [, %345]
%342 = Mem: %341 [, %345]
%340 = Call: id: 4, idepth: 0, %339, %259 [, %341]
%411 = Then: idepth: 0, %410 [, %414]
%410 = If: idepth: 0, %405, %408 [, %411, %418]
%399 = CInt: 22 [, %404]
%401 = Jmp: idepth: 0, %398 [, %402]
%391 = Phi: %389, %378, %386 [, %404]
%400 = Jmp: idepth: 0, %389 [, %402]
%388 = Jmp: idepth: 0, %385 [, %389]
%378 = Phi: %376, %365, %373 [, %391]
%387 = Jmp: idepth: 0, %376 [, %389]
%375 = Jmp: idepth: 0, %372 [, %376]
%408 = BinOp: slt, %406, %407 [, %410]
%395 = BinOp: slt, %393, %394 [, %397]
%382 = BinOp: sge, %380, %381 [, %384]
%369 = BinOp: sgt, %367, %368 [, %371]
%259 = Store: %255, %256, %258, %257 [, %272, %260, %261, %285, %298, %311, %324, %337, %340]
%324 = Phi: %323, %311, %259 [, %337]
%336 = Region: idepth: 0, %334, %335 [, %361, %337, %338]
%365 = Phi: %363, %338, %360 [, %378]
%374 = Jmp: idepth: 0, %363 [, %376]
%362 = Jmp: idepth: 0, %359 [, %363]
%361 = Jmp: idepth: 0, %336 [, %363]
%258 = Local: 1, %2 [, %259, %261]
%252 = Local: 1, %2 [, %253, %260]
%134 = Local: 1, %2 [, %135, %229, %137, %174, %192]
%128 = Local: 1, %2 [, %129, %230, %136, %155, %173, %193, %211]
%14 = Local: 1, %2 [, %15, %105, %17, %50, %68]
%8 = Local: 1, %2 [, %9, %106, %16, %31, %49, %69, %87]
%4 = Call: id: 1, idepth: 0, %1, %2 [, %5]
%0 = Start: idepth: 0 [, %1, %2]
%366 = Then: idepth: 0, %358 [, %371]
%359 = Then: idepth: 0, %358 [, %362]
%356 = BinOp: sgt, %354, %355 [, %358]
%345 = Store: %341, %342, %344, %343 [, %346]
%341 = CallEnd: idepth: 0, %340 [, %346, %342, %343, %345]
%414 = Jmp: idepth: 0, %411 [, %415]
%413 = Jmp: idepth: 0, %402 [, %415]
%421 = BinOp: sle, %419, %420 [, %423]
%418 = Then: idepth: 0, %410 [, %423]
%424 = Then: idepth: 0, %423 [, %427]
%412 = CInt: 23 [, %417]
%404 = Phi: %402, %391, %399 [, %417]
%402 = Region: idepth: 0, %400, %401 [, %413, %403, %404]
%389 = Region: idepth: 0, %387, %388 [, %400, %390, %391]
%376 = Region: idepth: 0, %374, %375 [, %387, %377, %378]
%419 = UnOp: sext, %353 [, %421]
%393 = UnOp: sext, %353 [, %395]
%381 = UnOp: sext, %353 [, %382]
%355 = UnOp: sext, %353 [, %356]
%420 = UnOp: sext, %352 [, %421]
%407 = UnOp: sext, %352 [, %408]
%406 = UnOp: sext, %352 [, %408]
%394 = UnOp: sext, %352 [, %395]
%380 = UnOp: sext, %352 [, %382]
%368 = UnOp: sext, %352 [, %369]
%367 = UnOp: sext, %352 [, %369]
%354 = UnOp: sext, %352 [, %356]
%344 = Local: 1, %2 [, %345, %352]
%337 = Phi: %336, %324, %259 [, %364]
%363 = Region: idepth: 0, %361, %362 [, %374, %364, %365]
%2 = Mem: %0 [, %4, %8, %14, %128, %134, %252, %258, %344, %350]
%358 = If: idepth: 0, %347, %356 [, %359, %366]
%346 = Call: id: 5, idepth: 0, %341, %345 [, %347]
%415 = Region: idepth: 0, %413, %414 [, %426, %416, %417]
%423 = If: idepth: 0, %418, %421 [, %424, %431]
%427 = Jmp: idepth: 0, %424 [, %428]
%426 = Jmp: idepth: 0, %415 [, %428]
%425 = CInt: 24 [, %430]
%417 = Phi: %415, %404, %412 [, %430]
%403 = Phi: %402, %390, %351 [, %416]
%390 = Phi: %389, %377, %351 [, %403]
%377 = Phi: %376, %364, %351 [, %390]
%353 = Load: %351, %350 [, %355, %381, %393, %419]
%352 = Load: %351, %344 [, %354, %367, %368, %380, %394, %406, %407, %420]
%364 = Phi: %363, %337, %351 [, %377]
%349 = Ret: 0, %347 [, %351]
%350 = Local: 1, %2 [, %351, %353]
%348 = Mem: %347 [, %351]
%347 = CallEnd: idepth: 0, %346 [, %358, %348, %349, %351]
%416 = Phi: %415, %403, %351 [, %429]
%431 = Then: idepth: 0, %423 [, %434]
%428 = Region: idepth: 0, %426, %427 [, %433, %429, %430]
%432 = CInt: 0 [, %437]
%430 = Phi: %428, %417, %425 [, %437]
%351 = Store: %347, %348, %350, %349 [, %364, %352, %353, %377, %390, %403, %416, %429, %436]
%429 = Phi: %428, %416, %351 [, %436]
%434 = Jmp: idepth: 0, %431 [, %435]
%433 = Jmp: idepth: 0, %428 [, %435]
%437 = Phi: %435, %430, %432 [, %29]
%436 = Phi: %435, %429, %351 [, %29]
%435 = Region: idepth: 0, %433, %434 [, %29, %436, %437]
%29 = Return: idepth: 0, %435, %436, %437 []

======== OPTIMIZED SON ========
%0 = Start: idepth: 0 [, %1, %2]
%2 = Mem: %0 [, %4]
%1 = Entry: idepth: 0, %0 [, %4]
%6 = Mem: %5 [, %10]
%4 = Call: id: 1, idepth: 0, %1, %2 [, %5]
%10 = Call: id: 2, idepth: 0, %5, %6 [, %11]
%20 = BinOp: ult, %18, %19 [, %21]
%12 = Mem: %11 [, %21]
%51 = UnOp: uext, %7 [, %53]
%33 = UnOp: uext, %7 [, %34]
%32 = UnOp: uext, %7 [, %34]
%18 = UnOp: uext, %7 [, %20]
%5 = CallEnd: idepth: 0, %4 [, %6, %7, %10]
%52 = UnOp: uext, %13 [, %53]
%19 = UnOp: uext, %13 [, %20]
%11 = CallEnd: idepth: 0, %10 [, %12, %13, %21]
%71 = UnOp: uext, %7 [, %72]
%70 = UnOp: uext, %13 [, %72]
%53 = BinOp: ule, %51, %52 [, %54]
%48 = Then: idepth: 0, %40 [, %54]
%40 = If: idepth: 0, %36, %38 [, %41, %48]
%38 = Ret: 0, %36 [, %40]
%34 = BinOp: ult, %32, %33 [, %35]
%30 = Then: idepth: 0, %26 [, %35]
%26 = If: idepth: 0, %22, %24 [, %27, %30]
%24 = Ret: 0, %22 [, %26]
%21 = Call: id: 3, idepth: 0, %11, %12, %20 [, %22]
%41 = Then: idepth: 0, %40 [, %44]
%27 = Then: idepth: 0, %26 [, %43]
%42 = CInt: 2 [, %47]
%28 = CInt: 1 [, %47]
%7 = Ret: 0, %5 [, %108, %18, %32, %33, %51, %71, %88, %89]
%13 = Ret: 0, %11 [, %107, %19, %52, %70]
%89 = UnOp: uext, %7 [, %90]
%88 = UnOp: uext, %7 [, %90]
%72 = BinOp: ugt, %70, %71 [, %73]
%67 = Then: idepth: 0, %59 [, %73]
%59 = If: idepth: 0, %55, %57 [, %60, %67]
%57 = Ret: 0, %55 [, %59]
%54 = Call: id: 3, idepth: 0, %48, %37, %53 [, %55]
%36 = CallEnd: idepth: 0, %35 [, %37, %38, %40]
%35 = Call: id: 3, idepth: 0, %30, %23, %34 [, %36]
%22 = CallEnd: idepth: 0, %21 [, %23, %24, %26]
%44 = Jmp: idepth: 0, %41 [, %45]
%43 = Jmp: idepth: 0, %27 [, %45]
%60 = Then: idepth: 0, %59 [, %63]
%61 = CInt: 3 [, %66]
%47 = Phi: %45, %28, %42 [, %66]
%108 = UnOp: uext, %7 [, %109]
%107 = UnOp: uext, %13 [, %109]
%90 = BinOp: ugt, %88, %89 [, %91]
%86 = Then: idepth: 0, %78 [, %91]
%78 = If: idepth: 0, %74, %76 [, %79, %86]
%76 = Ret: 0, %74 [, %78]
%73 = Call: id: 3, idepth: 0, %67, %56, %72 [, %74]
%55 = CallEnd: idepth: 0, %54 [, %56, %57, %59]
%37 = Mem: %36 [, %46, %54]
%23 = Mem: %22 [, %46, %35]
%45 = Region: idepth: 0, %43, %44 [, %46, %47, %62]
%63 = Jmp: idepth: 0, %60 [, %64]
%62 = Jmp: idepth: 0, %45 [, %64]
%79 = Then: idepth: 0, %78 [, %82]
%80 = CInt: 4 [, %85]
%66 = Phi: %64, %47, %61 [, %85]
%109 = BinOp: uge, %107, %108 [, %110]
%104 = Then: idepth: 0, %96 [, %110]
%96 = If: idepth: 0, %92, %94 [, %97, %104]
%94 = Ret: 0, %92 [, %96]
%91 = Call: id: 3, idepth: 0, %86, %75, %90 [, %92]
%74 = CallEnd: idepth: 0, %73 [, %75, %76, %78]
%56 = Mem: %55 [, %65, %73]
%46 = Phi: %45, %23, %37 [, %65]
%64 = Region: idepth: 0, %62, %63 [, %65, %66, %81]
%82 = Jmp: idepth: 0, %79 [, %83]
%81 = Jmp: idepth: 0, %64 [, %83]
%97 = Then: idepth: 0, %96 [, %100]
%98 = CInt: 5 [, %103]
%85 = Phi: %83, %66, %80 [, %103]
%123 = Then: idepth: 0, %115 [, %124]
%115 = If: idepth: 0, %111, %113 [, %116, %123]
%113 = Ret: 0, %111 [, %115]
%110 = Call: id: 3, idepth: 0, %104, %93, %109 [, %111]
%92 = CallEnd: idepth: 0, %91 [, %93, %94, %96]
%75 = Mem: %74 [, %84, %91]
%65 = Phi: %64, %46, %56 [, %84]
%83 = Region: idepth: 0, %81, %82 [, %84, %85, %99]
%100 = Jmp: idepth: 0, %97 [, %101]
%99 = Jmp: idepth: 0, %83 [, %101]
%116 = Then: idepth: 0, %115 [, %119]
%117 = CInt: 6 [, %122]
%103 = Phi: %101, %85, %98 [, %122]
%126 = Mem: %125 [, %130]
%140 = BinOp: sgt, %138, %139 [, %141]
%132 = Mem: %131 [, %141]
%130 = Call: id: 5, idepth: 0, %125, %126 [, %131]
%158 = BinOp: sgt, %156, %157 [, %159]
%154 = Then: idepth: 0, %146 [, %159]
%146 = If: idepth: 0, %142, %144 [, %147, %154]
%144 = Ret: 0, %142 [, %146]
%141 = Call: id: 3, idepth: 0, %131, %132, %140 [, %142]
%124 = Call: id: 4, idepth: 0, %123, %112 [, %125]
%111 = CallEnd: idepth: 0, %110 [, %112, %113, %115]
%93 = Mem: %92 [, %102, %110]
%84 = Phi: %83, %65, %75 [, %102]
%101 = Region: idepth: 0, %99, %100 [, %102, %103, %118]
%119 = Jmp: idepth: 0, %116 [, %120]
%118 = Jmp: idepth: 0, %101 [, %120]
%147 = Then: idepth: 0, %146 [, %150]
%148 = CInt: 7 [, %153]
%122 = Phi: %120, %103, %117 [, %153]
%175 = UnOp: sext, %127 [, %177]
%157 = UnOp: sext, %127 [, %158]
%156 = UnOp: sext, %127 [, %158]
%138 = UnOp: sext, %127 [, %140]
%125 = CallEnd: idepth: 0, %124 [, %126, %127, %130]
%176 = UnOp: sext, %133 [, %177]
%139 = UnOp: sext, %133 [, %140]
%131 = CallEnd: idepth: 0, %130 [, %132, %133, %141]
%195 = UnOp: sext, %127 [, %196]
%194 = UnOp: sext, %133 [, %196]
%177 = BinOp: sge, %175, %176 [, %178]
%172 = Then: idepth: 0, %164 [, %178]
%164 = If: idepth: 0, %160, %162 [, %165, %172]
%162 = Ret: 0, %160 [, %164]
%159 = Call: id: 3, idepth: 0, %154, %143, %158 [, %160]
%142 = CallEnd: idepth: 0, %141 [, %143, %144, %146]
%112 = Mem: %111 [, %121, %124]
%102 = Phi: %101, %84, %93 [, %121]
%120 = Region: idepth: 0, %118, %119 [, %121, %122, %149]
%150 = Jmp: idepth: 0, %147 [, %151]
%149 = Jmp: idepth: 0, %120 [, %151]
%165 = Then: idepth: 0, %164 [, %168]
%166 = CInt: 8 [, %171]
%153 = Phi: %151, %122, %148 [, %171]
%127 = Ret: 0, %125 [, %232, %138, %156, %157, %175, %195, %212, %213]
%133 = Ret: 0, %131 [, %231, %139, %176, %194]
%213 = UnOp: sext, %127 [, %214]
%212 = UnOp: sext, %127 [, %214]
%196 = BinOp: slt, %194, %195 [, %197]
%191 = Then: idepth: 0, %183 [, %197]
%183 = If: idepth: 0, %179, %181 [, %184, %191]
%181 = Ret: 0, %179 [, %183]
%178 = Call: id: 3, idepth: 0, %172, %161, %177 [, %179]
%160 = CallEnd: idepth: 0, %159 [, %161, %162, %164]
%143 = Mem: %142 [, %152, %159]
%121 = Phi: %120, %102, %112 [, %152]
%151 = Region: idepth: 0, %149, %150 [, %152, %153, %167]
%168 = Jmp: idepth: 0, %165 [, %169]
%167 = Jmp: idepth: 0, %151 [, %169]
%184 = Then: idepth: 0, %183 [, %187]
%185 = CInt: 9 [, %190]
%171 = Phi: %169, %153, %166 [, %190]
%232 = UnOp: sext, %127 [, %233]
%231 = UnOp: sext, %133 [, %233]
%214 = BinOp: slt, %212, %213 [, %215]
%210 = Then: idepth: 0, %202 [, %215]
%202 = If: idepth: 0, %198, %200 [, %203, %210]
%200 = Ret: 0, %198 [, %202]
%197 = Call: id: 3, idepth: 0, %191, %180, %196 [, %198]
%179 = CallEnd: idepth: 0, %178 [, %180, %181, %183]
%161 = Mem: %160 [, %170, %178]
%152 = Phi: %151, %121, %143 [, %170]
%169 = Region: idepth: 0, %167, %168 [, %170, %171, %186]
%187 = Jmp: idepth: 0, %184 [, %188]
%186 = Jmp: idepth: 0, %169 [, %188]
%203 = Then: idepth: 0, %202 [, %206]
%204 = CInt: 10 [, %209]
%190 = Phi: %188, %171, %185 [, %209]
%233 = BinOp: sle, %231, %232 [, %234]
%228 = Then: idepth: 0, %220 [, %234]
%220 = If: idepth: 0, %216, %218 [, %221, %228]
%218 = Ret: 0, %216 [, %220]
%215 = Call: id: 3, idepth: 0, %210, %199, %214 [, %216]
%198 = CallEnd: idepth: 0, %197 [, %199, %200, %202]
%180 = Mem: %179 [, %189, %197]
%170 = Phi: %169, %152, %161 [, %189]
%188 = Region: idepth: 0, %186, %187 [, %189, %190, %205]
%206 = Jmp: idepth: 0, %203 [, %207]
%205 = Jmp: idepth: 0, %188 [, %207]
%221 = Then: idepth: 0, %220 [, %224]
%222 = CInt: 11 [, %227]
%209 = Phi: %207, %190, %204 [, %227]
%239 = If: idepth: 0, %235, %237 [, %240, %247]
%237 = Ret: 0, %235 [, %239]
%234 = Call: id: 3, idepth: 0, %228, %217, %233 [, %235]
%216 = CallEnd: idepth: 0, %215 [, %217, %218, %220]
%199 = Mem: %198 [, %208, %215]
%189 = Phi: %188, %170, %180 [, %208]
%207 = Region: idepth: 0, %205, %206 [, %208, %209, %223]
%224 = Jmp: idepth: 0, %221 [, %225]
%223 = Jmp: idepth: 0, %207 [, %225]
%240 = Then: idepth: 0, %239 [, %243]
%241 = CInt: 12 [, %246]
%227 = Phi: %225, %209, %222 [, %246]
%300 = Then: idepth: 0, %438 [, %439]
%287 = Then: idepth: 0, %440 [, %438]
%302 = UnOp: uext, %251 [, %439]
%288 = UnOp: uext, %251 [, %438]
%276 = UnOp: uext, %251 [, %440]
%275 = UnOp: uext, %251 [, %440]
%247 = Then: idepth: 0, %239 [, %248]
%315 = UnOp: uext, %251 [, %441]
%314 = UnOp: uext, %251 [, %441]
%313 = Then: idepth: 0, %439 [, %441]
%294 = CInt: 15 [, %299]
%293 = Then: idepth: 0, %438 [, %296]
%281 = CInt: 14 [, %286]
%280 = Then: idepth: 0, %440 [, %283]
%235 = CallEnd: idepth: 0, %234 [, %236, %237, %239]
%217 = Mem: %216 [, %226, %234]
%208 = Phi: %207, %189, %199 [, %226]
%225 = Region: idepth: 0, %223, %224 [, %226, %227, %242]
%243 = Jmp: idepth: 0, %240 [, %244]
%242 = Jmp: idepth: 0, %225 [, %244]
%268 = CInt: 13 [, %273]
%246 = Phi: %244, %227, %241 [, %273]
%440 = IfOp: swapped: true, op: jltu, idepth: 0, %274, %275, %276 [, %280, %287]
%439 = IfOp: swapped: true, op: jgtu, idepth: 0, %300, %301, %302 [, %306, %313]
%438 = IfOp: swapped: false, op: jgtu, idepth: 0, %287, %288, %289 [, %293, %300]
%251 = Ret: 0, %249 [, %328, %262, %275, %276, %288, %302, %314, %315]
%248 = Call: id: 1, idepth: 0, %247, %236 [, %249]
%306 = Then: idepth: 0, %439 [, %309]
%441 = IfOp: swapped: true, op: jgtu, idepth: 0, %313, %314, %315 [, %319, %326]
%307 = CInt: 16 [, %312]
%328 = UnOp: uext, %251 [, %442]
%326 = Then: idepth: 0, %441 [, %442]
%299 = Phi: %297, %286, %294 [, %312]
%296 = Jmp: idepth: 0, %293 [, %297]
%295 = Jmp: idepth: 0, %284 [, %297]
%286 = Phi: %284, %273, %281 [, %299]
%283 = Jmp: idepth: 0, %280 [, %284]
%236 = Mem: %235 [, %245, %248]
%226 = Phi: %225, %208, %217 [, %245]
%244 = Region: idepth: 0, %242, %243 [, %245, %246, %269]
%282 = Jmp: idepth: 0, %271 [, %284]
%273 = Phi: %271, %246, %268 [, %286]
%270 = Jmp: idepth: 0, %267 [, %271]
%269 = Jmp: idepth: 0, %244 [, %271]
%274 = Then: idepth: 0, %443 [, %440]
%267 = Then: idepth: 0, %443 [, %270]
%262 = UnOp: uext, %251 [, %443]
%301 = UnOp: uext, %257 [, %439]
%289 = UnOp: uext, %257 [, %438]
%263 = UnOp: uext, %257 [, %443]
%327 = UnOp: uext, %257 [, %442]
%250 = Mem: %249 [, %254]
%249 = CallEnd: idepth: 0, %248 [, %250, %251, %254]
%309 = Jmp: idepth: 0, %306 [, %310]
%308 = Jmp: idepth: 0, %297 [, %310]
%319 = Then: idepth: 0, %441 [, %322]
%320 = CInt: 17 [, %325]
%312 = Phi: %310, %299, %307 [, %325]
%442 = IfOp: swapped: false, op: jltu, idepth: 0, %326, %327, %328 [, %332, %339]
%297 = Region: idepth: 0, %295, %296 [, %298, %299, %308]
%284 = Region: idepth: 0, %282, %283 [, %285, %286, %295]
%245 = Phi: %244, %226, %236 [, %272]
%271 = Region: idepth: 0, %269, %270 [, %272, %273, %282]
%443 = IfOp: swapped: true, op: jltu, idepth: 0, %255, %262, %263 [, %267, %274]
%257 = Ret: 0, %255 [, %327, %263, %289, %301]
%254 = Call: id: 2, idepth: 0, %249, %250 [, %255]
%310 = Region: idepth: 0, %308, %309 [, %311, %312, %321]
%322 = Jmp: idepth: 0, %319 [, %323]
%321 = Jmp: idepth: 0, %310 [, %323]
%332 = Then: idepth: 0, %442 [, %335]
%333 = CInt: 18 [, %338]
%325 = Phi: %323, %312, %320 [, %338]
%392 = Then: idepth: 0, %445 [, %444]
%379 = Then: idepth: 0, %446 [, %445]
%339 = Then: idepth: 0, %442 [, %340]
%394 = UnOp: sext, %343 [, %444]
%380 = UnOp: sext, %343 [, %445]
%368 = UnOp: sext, %343 [, %446]
%367 = UnOp: sext, %343 [, %446]
%407 = UnOp: sext, %343 [, %447]
%406 = UnOp: sext, %343 [, %447]
%405 = Then: idepth: 0, %444 [, %447]
%398 = Then: idepth: 0, %444 [, %401]
%386 = CInt: 21 [, %391]
%385 = Then: idepth: 0, %445 [, %388]
%373 = CInt: 20 [, %378]
%372 = Then: idepth: 0, %446 [, %375]
%298 = Phi: %297, %285, %256 [, %311]
%285 = Phi: %284, %272, %256 [, %298]
%272 = Phi: %271, %245, %256 [, %285]
%255 = CallEnd: idepth: 0, %254 [, %256, %257, %443]
%311 = Phi: %310, %298, %256 [, %324]
%323 = Region: idepth: 0, %321, %322 [, %324, %325, %334]
%335 = Jmp: idepth: 0, %332 [, %336]
%334 = Jmp: idepth: 0, %323 [, %336]
%360 = CInt: 19 [, %365]
%338 = Phi: %336, %325, %333 [, %365]
%446 = IfOp: swapped: true, op: jgts, idepth: 0, %366, %367, %368 [, %372, %379]
%444 = IfOp: swapped: true, op: jlts, idepth: 0, %392, %393, %394 [, %398, %405]
%445 = IfOp: swapped: false, op: jlts, idepth: 0, %379, %380, %381 [, %385, %392]
%340 = Call: id: 4, idepth: 0, %339, %256 [, %341]
%411 = Then: idepth: 0, %447 [, %414]
%343 = Ret: 0, %341 [, %420, %354, %367, %368, %380, %394, %406, %407]
%447 = IfOp: swapped: true, op: jlts, idepth: 0, %405, %406, %407 [, %411, %418]
%399 = CInt: 22 [, %404]
%401 = Jmp: idepth: 0, %398 [, %402]
%400 = Jmp: idepth: 0, %389 [, %402]
%391 = Phi: %389, %378, %386 [, %404]
%388 = Jmp: idepth: 0, %385 [, %389]
%387 = Jmp: idepth: 0, %376 [, %389]
%378 = Phi: %376, %365, %373 [, %391]
%375 = Jmp: idepth: 0, %372 [, %376]
%256 = Mem: %255 [, %324, %272, %340, %337, %285, %298, %311]
%324 = Phi: %323, %311, %256 [, %337]
%336 = Region: idepth: 0, %334, %335 [, %337, %338, %361]
%374 = Jmp: idepth: 0, %363 [, %376]
%365 = Phi: %363, %338, %360 [, %378]
%362 = Jmp: idepth: 0, %359 [, %363]
%361 = Jmp: idepth: 0, %336 [, %363]
%366 = Then: idepth: 0, %448 [, %446]
%359 = Then: idepth: 0, %448 [, %362]
%354 = UnOp: sext, %343 [, %448]
%393 = UnOp: sext, %349 [, %444]
%381 = UnOp: sext, %349 [, %445]
%355 = UnOp: sext, %349 [, %448]
%342 = Mem: %341 [, %346]
%341 = CallEnd: idepth: 0, %340 [, %342, %343, %346]
%414 = Jmp: idepth: 0, %411 [, %415]
%413 = Jmp: idepth: 0, %402 [, %415]
%420 = UnOp: sext, %343 [, %449]
%419 = UnOp: sext, %349 [, %449]
%418 = Then: idepth: 0, %447 [, %449]
%424 = Then: idepth: 0, %449 [, %427]
%412 = CInt: 23 [, %417]
%404 = Phi: %402, %391, %399 [, %417]
%402 = Region: idepth: 0, %400, %401 [, %403, %404, %413]
%389 = Region: idepth: 0, %387, %388 [, %390, %391, %400]
%376 = Region: idepth: 0, %374, %375 [, %377, %378, %387]
%337 = Phi: %336, %324, %256 [, %364]
%363 = Region: idepth: 0, %361, %362 [, %364, %365, %374]
%448 = IfOp: swapped: true, op: jgts, idepth: 0, %347, %354, %355 [, %359, %366]
%349 = Ret: 0, %347 [, %419, %355, %381, %393]
%346 = Call: id: 5, idepth: 0, %341, %342 [, %347]
%415 = Region: idepth: 0, %413, %414 [, %416, %417, %426]
%449 = IfOp: swapped: false, op: jgts, idepth: 0, %418, %419, %420 [, %424, %431]
%427 = Jmp: idepth: 0, %424 [, %428]
%426 = Jmp: idepth: 0, %415 [, %428]
%425 = CInt: 24 [, %430]
%417 = Phi: %415, %404, %412 [, %430]
%403 = Phi: %402, %390, %348 [, %416]
%390 = Phi: %389, %377, %348 [, %403]
%377 = Phi: %376, %364, %348 [, %390]
%364 = Phi: %363, %337, %348 [, %377]
%347 = CallEnd: idepth: 0, %346 [, %348, %349, %448]
%416 = Phi: %415, %403, %348 [, %429]
%431 = Then: idepth: 0, %449 [, %434]
%428 = Region: idepth: 0, %426, %427 [, %429, %430, %433]
%432 = CInt: 0 [, %437]
%430 = Phi: %428, %417, %425 [, %437]
%348 = Mem: %347 [, %416, %364, %436, %429, %377, %390, %403]
%429 = Phi: %428, %416, %348 [, %436]
%434 = Jmp: idepth: 0, %431 [, %435]
%433 = Jmp: idepth: 0, %428 [, %435]
%437 = Phi: %435, %430, %432 [, %29]
%436 = Phi: %435, %429, %348 [, %29]
%435 = Region: idepth: 0, %433, %434 [, %436, %437, %29]
%29 = Return: idepth: 0, %435, %436, %437 []

======== SCHEDULED SON ========
%0 = Start: idepth: 0
%1 = Entry: idepth: 1, %0
  %4 = Call: id: 1, idepth: 2, %2
%5 = CallEnd: idepth: 3, %4
  %6 = Mem
  %7 = Ret: 0
  %10 = Call: id: 2, idepth: 4, %6
%11 = CallEnd: idepth: 5, %10
  %12 = Mem
  %13 = Ret: 0
  %18 = UnOp: uext, %7
  %19 = UnOp: uext, %13
  %20 = BinOp: ult, %18, %19
  %21 = Call: id: 3, idepth: 6, %12, %20
%22 = CallEnd: idepth: 7, %21
  %23 = Mem
  %24 = Ret: 0
  %26 = If: idepth: 8, %24
%27 = Then: idepth: 9, %26
  %28 = CInt: 1
  %450 = MachMove: %28
  %43 = Jmp: idepth: 10
%30 = Then: idepth: 9, %26
  %32 = UnOp: uext, %7
  %33 = UnOp: uext, %7
  %34 = BinOp: ult, %32, %33
  %35 = Call: id: 3, idepth: 10, %23, %34
%36 = CallEnd: idepth: 11, %35
  %37 = Mem
  %38 = Ret: 0
  %40 = If: idepth: 12, %38
%41 = Then: idepth: 13, %40
  %42 = CInt: 2
  %451 = MachMove: %42
  %44 = Jmp: idepth: 14
%45 = Region: idepth: 11, %43, %44
  %46 = Phi: %23, %37
  %452 = Phi: %450, %451
  %453 = MachMove: %452
  %62 = Jmp: idepth: 12
%48 = Then: idepth: 13, %40
  %51 = UnOp: uext, %7
  %52 = UnOp: uext, %13
  %53 = BinOp: ule, %51, %52
  %54 = Call: id: 3, idepth: 14, %37, %53
%55 = CallEnd: idepth: 15, %54
  %56 = Mem
  %57 = Ret: 0
  %59 = If: idepth: 16, %57
%60 = Then: idepth: 17, %59
  %61 = CInt: 3
  %454 = MachMove: %61
  %63 = Jmp: idepth: 18
%64 = Region: idepth: 13, %62, %63
  %65 = Phi: %46, %56
  %455 = Phi: %453, %454
  %456 = MachMove: %455
  %81 = Jmp: idepth: 14
%67 = Then: idepth: 17, %59
  %70 = UnOp: uext, %13
  %71 = UnOp: uext, %7
  %72 = BinOp: ugt, %70, %71
  %73 = Call: id: 3, idepth: 18, %56, %72
%74 = CallEnd: idepth: 19, %73
  %75 = Mem
  %76 = Ret: 0
  %78 = If: idepth: 20, %76
%79 = Then: idepth: 21, %78
  %80 = CInt: 4
  %457 = MachMove: %80
  %82 = Jmp: idepth: 22
%83 = Region: idepth: 15, %81, %82
  %84 = Phi: %65, %75
  %458 = Phi: %456, %457
  %459 = MachMove: %458
  %99 = Jmp: idepth: 16
%86 = Then: idepth: 21, %78
  %88 = UnOp: uext, %7
  %89 = UnOp: uext, %7
  %90 = BinOp: ugt, %88, %89
  %91 = Call: id: 3, idepth: 22, %75, %90
%92 = CallEnd: idepth: 23, %91
  %93 = Mem
  %94 = Ret: 0
  %96 = If: idepth: 24, %94
%97 = Then: idepth: 25, %96
  %98 = CInt: 5
  %460 = MachMove: %98
  %100 = Jmp: idepth: 26
%101 = Region: idepth: 17, %99, %100
  %102 = Phi: %84, %93
  %461 = Phi: %459, %460
  %462 = MachMove: %461
  %118 = Jmp: idepth: 18
%104 = Then: idepth: 25, %96
  %107 = UnOp: uext, %13
  %108 = UnOp: uext, %7
  %109 = BinOp: uge, %107, %108
  %110 = Call: id: 3, idepth: 26, %93, %109
%111 = CallEnd: idepth: 27, %110
  %112 = Mem
  %113 = Ret: 0
  %115 = If: idepth: 28, %113
%116 = Then: idepth: 29, %115
  %117 = CInt: 6
  %463 = MachMove: %117
  %119 = Jmp: idepth: 30
%120 = Region: idepth: 19, %118, %119
  %121 = Phi: %102, %112
  %464 = Phi: %462, %463
  %465 = MachMove: %464
  %149 = Jmp: idepth: 20
%123 = Then: idepth: 29, %115
  %124 = Call: id: 4, idepth: 30, %112
%125 = CallEnd: idepth: 31, %124
  %126 = Mem
  %127 = Ret: 0
  %130 = Call: id: 5, idepth: 32, %126
%131 = CallEnd: idepth: 33, %130
  %132 = Mem
  %133 = Ret: 0
  %138 = UnOp: sext, %127
  %139 = UnOp: sext, %133
  %140 = BinOp: sgt, %138, %139
  %141 = Call: id: 3, idepth: 34, %132, %140
%142 = CallEnd: idepth: 35, %141
  %143 = Mem
  %144 = Ret: 0
  %146 = If: idepth: 36, %144
%147 = Then: idepth: 37, %146
  %148 = CInt: 7
  %466 = MachMove: %148
  %150 = Jmp: idepth: 38
%151 = Region: idepth: 21, %149, %150
  %152 = Phi: %121, %143
  %467 = Phi: %465, %466
  %468 = MachMove: %467
  %167 = Jmp: idepth: 22
%154 = Then: idepth: 37, %146
  %156 = UnOp: sext, %127
  %157 = UnOp: sext, %127
  %158 = BinOp: sgt, %156, %157
  %159 = Call: id: 3, idepth: 38, %143, %158
%160 = CallEnd: idepth: 39, %159
  %161 = Mem
  %162 = Ret: 0
  %164 = If: idepth: 40, %162
%165 = Then: idepth: 41, %164
  %166 = CInt: 8
  %469 = MachMove: %166
  %168 = Jmp: idepth: 42
%169 = Region: idepth: 23, %167, %168
  %170 = Phi: %152, %161
  %470 = Phi: %468, %469
  %471 = MachMove: %470
  %186 = Jmp: idepth: 24
%172 = Then: idepth: 41, %164
  %175 = UnOp: sext, %127
  %176 = UnOp: sext, %133
  %177 = BinOp: sge, %175, %176
  %178 = Call: id: 3, idepth: 42, %161, %177
%179 = CallEnd: idepth: 43, %178
  %180 = Mem
  %181 = Ret: 0
  %183 = If: idepth: 44, %181
%184 = Then: idepth: 45, %183
  %185 = CInt: 9
  %472 = MachMove: %185
  %187 = Jmp: idepth: 46
%188 = Region: idepth: 25, %186, %187
  %189 = Phi: %170, %180
  %473 = Phi: %471, %472
  %474 = MachMove: %473
  %205 = Jmp: idepth: 26
%191 = Then: idepth: 45, %183
  %194 = UnOp: sext, %133
  %195 = UnOp: sext, %127
  %196 = BinOp: slt, %194, %195
  %197 = Call: id: 3, idepth: 46, %180, %196
%198 = CallEnd: idepth: 47, %197
  %199 = Mem
  %200 = Ret: 0
  %202 = If: idepth: 48, %200
%203 = Then: idepth: 49, %202
  %204 = CInt: 10
  %475 = MachMove: %204
  %206 = Jmp: idepth: 50
%207 = Region: idepth: 27, %205, %206
  %208 = Phi: %189, %199
  %476 = Phi: %474, %475
  %477 = MachMove: %476
  %223 = Jmp: idepth: 28
%210 = Then: idepth: 49, %202
  %212 = UnOp: sext, %127
  %213 = UnOp: sext, %127
  %214 = BinOp: slt, %212, %213
  %215 = Call: id: 3, idepth: 50, %199, %214
%216 = CallEnd: idepth: 51, %215
  %217 = Mem
  %218 = Ret: 0
  %220 = If: idepth: 52, %218
%221 = Then: idepth: 53, %220
  %222 = CInt: 11
  %478 = MachMove: %222
  %224 = Jmp: idepth: 54
%225 = Region: idepth: 29, %223, %224
  %226 = Phi: %208, %217
  %479 = Phi: %477, %478
  %480 = MachMove: %479
  %242 = Jmp: idepth: 30
%228 = Then: idepth: 53, %220
  %231 = UnOp: sext, %133
  %232 = UnOp: sext, %127
  %233 = BinOp: sle, %231, %232
  %234 = Call: id: 3, idepth: 54, %217, %233
%235 = CallEnd: idepth: 55, %234
  %236 = Mem
  %237 = Ret: 0
  %239 = If: idepth: 56, %237
%240 = Then: idepth: 57, %239
  %241 = CInt: 12
  %481 = MachMove: %241
  %243 = Jmp: idepth: 58
%244 = Region: idepth: 31, %242, %243
  %245 = Phi: %226, %236
  %482 = Phi: %480, %481
  %483 = MachMove: %482
  %269 = Jmp: idepth: 32
%247 = Then: idepth: 57, %239
  %248 = Call: id: 1, idepth: 58, %236
%249 = CallEnd: idepth: 59, %248
  %250 = Mem
  %251 = Ret: 0
  %254 = Call: id: 2, idepth: 60, %250
%255 = CallEnd: idepth: 61, %254
  %256 = Mem
  %257 = Ret: 0
  %262 = UnOp: uext, %251
  %263 = UnOp: uext, %257
  %443 = IfOp: swapped: true, op: jltu, idepth: 62, %262, %263
%274 = Then: idepth: 63, %443
  %275 = UnOp: uext, %251
  %276 = UnOp: uext, %251
  %440 = IfOp: swapped: true, op: jltu, idepth: 64, %275, %276
%287 = Then: idepth: 65, %440
  %288 = UnOp: uext, %251
  %289 = UnOp: uext, %257
  %438 = IfOp: swapped: false, op: jgtu, idepth: 66, %288, %289
%293 = Then: idepth: 67, %438
  %294 = CInt: 15
  %490 = MachMove: %294
  %296 = Jmp: idepth: 68
%300 = Then: idepth: 67, %438
  %301 = UnOp: uext, %257
  %302 = UnOp: uext, %251
  %439 = IfOp: swapped: true, op: jgtu, idepth: 68, %301, %302
%313 = Then: idepth: 69, %439
  %314 = UnOp: uext, %251
  %315 = UnOp: uext, %251
  %441 = IfOp: swapped: true, op: jgtu, idepth: 70, %314, %315
%326 = Then: idepth: 71, %441
  %327 = UnOp: uext, %257
  %328 = UnOp: uext, %251
  %442 = IfOp: swapped: false, op: jltu, idepth: 72, %327, %328
%332 = Then: idepth: 73, %442
  %333 = CInt: 18
  %499 = MachMove: %333
  %335 = Jmp: idepth: 74
%339 = Then: idepth: 73, %442
  %340 = Call: id: 4, idepth: 74, %256
%341 = CallEnd: idepth: 75, %340
  %342 = Mem
  %343 = Ret: 0
  %346 = Call: id: 5, idepth: 76, %342
%347 = CallEnd: idepth: 77, %346
  %348 = Mem
  %349 = Ret: 0
  %354 = UnOp: sext, %343
  %355 = UnOp: sext, %349
  %448 = IfOp: swapped: true, op: jgts, idepth: 78, %354, %355
%366 = Then: idepth: 79, %448
  %367 = UnOp: sext, %343
  %368 = UnOp: sext, %343
  %446 = IfOp: swapped: true, op: jgts, idepth: 80, %367, %368
%379 = Then: idepth: 81, %446
  %380 = UnOp: sext, %343
  %381 = UnOp: sext, %349
  %445 = IfOp: swapped: false, op: jlts, idepth: 82, %380, %381
%385 = Then: idepth: 83, %445
  %386 = CInt: 21
  %508 = MachMove: %386
  %388 = Jmp: idepth: 84
%392 = Then: idepth: 83, %445
  %393 = UnOp: sext, %349
  %394 = UnOp: sext, %343
  %444 = IfOp: swapped: true, op: jlts, idepth: 84, %393, %394
%405 = Then: idepth: 85, %444
  %406 = UnOp: sext, %343
  %407 = UnOp: sext, %343
  %447 = IfOp: swapped: true, op: jlts, idepth: 86, %406, %407
%418 = Then: idepth: 87, %447
  %419 = UnOp: sext, %349
  %420 = UnOp: sext, %343
  %449 = IfOp: swapped: false, op: jgts, idepth: 88, %419, %420
%424 = Then: idepth: 89, %449
  %425 = CInt: 24
  %517 = MachMove: %425
  %427 = Jmp: idepth: 90
%431 = Then: idepth: 89, %449
  %432 = CInt: 0
  %520 = MachMove: %432
  %434 = Jmp: idepth: 90
%411 = Then: idepth: 87, %447
  %412 = CInt: 23
  %514 = MachMove: %412
  %414 = Jmp: idepth: 88
%398 = Then: idepth: 85, %444
  %399 = CInt: 22
  %511 = MachMove: %399
  %401 = Jmp: idepth: 86
%372 = Then: idepth: 81, %446
  %373 = CInt: 20
  %505 = MachMove: %373
  %375 = Jmp: idepth: 82
%359 = Then: idepth: 79, %448
  %360 = CInt: 19
  %502 = MachMove: %360
  %362 = Jmp: idepth: 80
%319 = Then: idepth: 71, %441
  %320 = CInt: 17
  %496 = MachMove: %320
  %322 = Jmp: idepth: 72
%306 = Then: idepth: 69, %439
  %307 = CInt: 16
  %493 = MachMove: %307
  %309 = Jmp: idepth: 70
%280 = Then: idepth: 65, %440
  %281 = CInt: 14
  %487 = MachMove: %281
  %283 = Jmp: idepth: 66
%267 = Then: idepth: 63, %443
  %268 = CInt: 13
  %484 = MachMove: %268
  %270 = Jmp: idepth: 64
%271 = Region: idepth: 33, %269, %270
  %272 = Phi: %245, %256
  %485 = Phi: %483, %484
  %486 = MachMove: %485
  %282 = Jmp: idepth: 34
%284 = Region: idepth: 35, %282, %283
  %285 = Phi: %272, %256
  %488 = Phi: %486, %487
  %489 = MachMove: %488
  %295 = Jmp: idepth: 36
%297 = Region: idepth: 37, %295, %296
  %298 = Phi: %285, %256
  %491 = Phi: %489, %490
  %492 = MachMove: %491
  %308 = Jmp: idepth: 38
%310 = Region: idepth: 39, %308, %309
  %311 = Phi: %298, %256
  %494 = Phi: %492, %493
  %495 = MachMove: %494
  %321 = Jmp: idepth: 40
%323 = Region: idepth: 41, %321, %322
  %324 = Phi: %311, %256
  %497 = Phi: %495, %496
  %498 = MachMove: %497
  %334 = Jmp: idepth: 42
%336 = Region: idepth: 43, %334, %335
  %337 = Phi: %324, %256
  %500 = Phi: %498, %499
  %501 = MachMove: %500
  %361 = Jmp: idepth: 44
%363 = Region: idepth: 45, %361, %362
  %364 = Phi: %337, %348
  %503 = Phi: %501, %502
  %504 = MachMove: %503
  %374 = Jmp: idepth: 46
%376 = Region: idepth: 47, %374, %375
  %377 = Phi: %364, %348
  %506 = Phi: %504, %505
  %507 = MachMove: %506
  %387 = Jmp: idepth: 48
%389 = Region: idepth: 49, %387, %388
  %390 = Phi: %377, %348
  %509 = Phi: %507, %508
  %510 = MachMove: %509
  %400 = Jmp: idepth: 50
%402 = Region: idepth: 51, %400, %401
  %403 = Phi: %390, %348
  %512 = Phi: %510, %511
  %513 = MachMove: %512
  %413 = Jmp: idepth: 52
%415 = Region: idepth: 53, %413, %414
  %416 = Phi: %403, %348
  %515 = Phi: %513, %514
  %516 = MachMove: %515
  %426 = Jmp: idepth: 54
%428 = Region: idepth: 55, %426, %427
  %429 = Phi: %416, %348
  %518 = Phi: %516, %517
  %519 = MachMove: %518
  %433 = Jmp: idepth: 56
%435 = Region: idepth: 0, %433, %434
  %436 = Phi: %429, %348
  %521 = Phi: %519, %520
  %29 = Return: idepth: 0, %436, %521

======== REGISTER SELECTION ========
{ 1, 1, 1, 1, 1, 2, 3, 4, 3, 1, 1, 3, 1, 1, 1, 1, 3, 4, 3, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 3, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 3, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 3, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 3, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 3, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 3, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 3, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 3, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 1, 3, 4, 1, 3, 4, 1, 1, 1, 1, 3, 4, 1, 3, 4, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 1, 3, 4, 1, 3, 4, 1, 1, 1, 1, 3, 4, 1, 3, 4, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 }

======== SOURCE ========
fn(): i8 return 0
======== UNSCHEDULED SON ========
%0 = Start: idepth: 0 [, %1, %2]
%4 = CInt: 0 [, %5]
%2 = Mem: %0 [, %5]
%1 = Entry: idepth: 0, %0 [, %5]
%5 = Return: idepth: 0, %1, %2, %4 []

======== OPTIMIZED SON ========
%0 = Start: idepth: 0 [, %1, %2]
%4 = CInt: 0 [, %5]
%2 = Mem: %0 [, %5]
%1 = Entry: idepth: 0, %0 [, %5]
%5 = Return: idepth: 0, %1, %2, %4 []

======== SCHEDULED SON ========
%0 = Start: idepth: 0
%1 = Entry: idepth: 0, %0
  %4 = CInt: 0
  %5 = Return: idepth: 0, %2, %4

======== REGISTER SELECTION ========
{ 1, 1 }

======== SOURCE ========
fn(): i8 return -1
======== UNSCHEDULED SON ========
%4 = CInt: 1 [, %5]
%0 = Start: idepth: 0 [, %1, %2]
%5 = UnOp: neg, %4 [, %6]
%2 = Mem: %0 [, %6]
%1 = Entry: idepth: 0, %0 [, %6]
%6 = Return: idepth: 0, %1, %2, %5 []

======== OPTIMIZED SON ========
%4 = CInt: 1 [, %5]
%0 = Start: idepth: 0 [, %1, %2]
%5 = UnOp: neg, %4 [, %6]
%2 = Mem: %0 [, %6]
%1 = Entry: idepth: 0, %0 [, %6]
%6 = Return: idepth: 0, %1, %2, %5 []

======== SCHEDULED SON ========
%0 = Start: idepth: 0
%1 = Entry: idepth: 1, %0
  %4 = CInt: 1
  %5 = UnOp: neg, %4
  %6 = Return: idepth: 0, %2, %5

======== REGISTER SELECTION ========
{ 1, 1, 1 }

======== SOURCE ========
fn(v: bool): bool return v
======== UNSCHEDULED SON ========
%4 = Arg: 0, %0 [, %6]
%5 = Local: 1, %2 [, %6, %7]
%2 = Mem: %0 [, %6, %5]
%0 = Start: idepth: 0 [, %1, %2, %4]
%7 = Load: %6, %5 [, %8]
%6 = Store: %1, %2, %5, %4 [, %8, %7]
%1 = Entry: idepth: 0, %0 [, %8, %6]
%8 = Return: idepth: 0, %1, %6, %7 []

======== OPTIMIZED SON ========
%0 = Start: idepth: 0 [, %1, %2, %4]
%4 = Arg: 0, %0 [, %8]
%2 = Mem: %0 [, %8]
%1 = Entry: idepth: 0, %0 [, %8]
%8 = Return: idepth: 0, %1, %2, %4 []

======== SCHEDULED SON ========
%0 = Start: idepth: 0
%1 = Entry: idepth: 0, %0
  %4 = Arg: 0
  %8 = Return: idepth: 0, %2, %4

======== REGISTER SELECTION ========
{ 1, 1 }

======== SOURCE ========
fn(): u8 return 0
======== UNSCHEDULED SON ========
%0 = Start: idepth: 0 [, %1, %2]
%4 = CInt: 0 [, %5]
%2 = Mem: %0 [, %5]
%1 = Entry: idepth: 0, %0 [, %5]
%5 = Return: idepth: 0, %1, %2, %4 []

======== OPTIMIZED SON ========
%0 = Start: idepth: 0 [, %1, %2]
%4 = CInt: 0 [, %5]
%2 = Mem: %0 [, %5]
%1 = Entry: idepth: 0, %0 [, %5]
%5 = Return: idepth: 0, %1, %2, %4 []

======== SCHEDULED SON ========
%0 = Start: idepth: 0
%1 = Entry: idepth: 0, %0
  %4 = CInt: 0
  %5 = Return: idepth: 0, %2, %4

======== REGISTER SELECTION ========
{ 1, 1 }

======== SOURCE ========
fn(): u8 return 1
======== UNSCHEDULED SON ========
%0 = Start: idepth: 0 [, %1, %2]
%4 = CInt: 1 [, %5]
%2 = Mem: %0 [, %5]
%1 = Entry: idepth: 0, %0 [, %5]
%5 = Return: idepth: 0, %1, %2, %4 []

======== OPTIMIZED SON ========
%0 = Start: idepth: 0 [, %1, %2]
%4 = CInt: 1 [, %5]
%2 = Mem: %0 [, %5]
%1 = Entry: idepth: 0, %0 [, %5]
%5 = Return: idepth: 0, %1, %2, %4 []

======== SCHEDULED SON ========
%0 = Start: idepth: 0
%1 = Entry: idepth: 0, %0
  %4 = CInt: 1
  %5 = Return: idepth: 0, %2, %4

======== REGISTER SELECTION ========
{ 1, 1 }

======== CODEGEN ========
main:
         st $31, $254, -40, 40
     addi64 $254, $254, -40
        jal $31, $0, :one
         cp $32, $1
        jal $31, $0, :zero
         cp $33, $1
       andi $34, $32, 255
       andi $35, $33, 255
       cmpu $34, $34, $35
      cmpui $34, $34, -1
        not $34, $34
         cp $2, $34
        jal $31, $0, :cond
         cp $34, $1
        jeq $34, $0, :3
       li64 $32, 1
        jmp :4
3:     andi $34, $32, 255
       andi $35, $32, 255
       cmpu $34, $34, $35
      cmpui $34, $34, -1
        not $34, $34
         cp $2, $34
        jal $31, $0, :cond
         cp $34, $1
        jeq $34, $0, :5
       li64 $32, 2
4:      jmp :6
5:     andi $34, $32, 255
       andi $35, $33, 255
       cmpu $34, $34, $35
      cmpui $34, $34, 1
         cp $2, $34
        jal $31, $0, :cond
         cp $34, $1
        jeq $34, $0, :7
       li64 $32, 3
6:      jmp :8
7:     andi $34, $33, 255
       andi $35, $32, 255
       cmpu $34, $34, $35
      cmpui $34, $34, 1
        not $34, $34
         cp $2, $34
        jal $31, $0, :cond
         cp $34, $1
        jeq $34, $0, :9
       li64 $32, 4
8:      jmp :a
9:     andi $34, $32, 255
       andi $35, $32, 255
       cmpu $34, $34, $35
      cmpui $34, $34, 1
        not $34, $34
         cp $2, $34
        jal $31, $0, :cond
         cp $34, $1
        jeq $34, $0, :b
       li64 $32, 5
a:      jmp :c
b:     andi $33, $33, 255
       andi $32, $32, 255
       cmpu $32, $33, $32
      cmpui $32, $32, -1
         cp $2, $32
        jal $31, $0, :cond
         cp $32, $1
        jeq $32, $0, :d
       li64 $32, 6
c:      jmp :e
d:      jal $31, $0, :mne
         cp $32, $1
        jal $31, $0, :mero
         cp $33, $1
       sxt8 $34, $32
       sxt8 $35, $33
       cmps $34, $34, $35
      cmpui $34, $34, 1
        not $34, $34
         cp $2, $34
        jal $31, $0, :cond
         cp $34, $1
        jeq $34, $0, :11
       li64 $32, 7
e:      jmp :12
11:     sxt8 $34, $32
       sxt8 $35, $32
       cmps $34, $34, $35
      cmpui $34, $34, 1
        not $34, $34
         cp $2, $34
        jal $31, $0, :cond
         cp $34, $1
        jeq $34, $0, :13
       li64 $32, 8
12:      jmp :14
13:     sxt8 $34, $32
       sxt8 $35, $33
       cmps $34, $34, $35
      cmpui $34, $34, -1
         cp $2, $34
        jal $31, $0, :cond
         cp $34, $1
        jeq $34, $0, :15
       li64 $32, 9
14:      jmp :16
15:     sxt8 $34, $33
       sxt8 $35, $32
       cmps $34, $34, $35
      cmpui $34, $34, -1
        not $34, $34
         cp $2, $34
        jal $31, $0, :cond
         cp $34, $1
        jeq $34, $0, :17
       li64 $32, 10
16:      jmp :18
17:     sxt8 $34, $32
       sxt8 $35, $32
       cmps $34, $34, $35
      cmpui $34, $34, -1
        not $34, $34
         cp $2, $34
        jal $31, $0, :cond
         cp $34, $1
        jeq $34, $0, :19
       li64 $32, 11
18:      jmp :1a
19:     sxt8 $33, $33
       sxt8 $32, $32
       cmps $32, $33, $32
      cmpui $32, $32, 1
         cp $2, $32
        jal $31, $0, :cond
         cp $32, $1
        jeq $32, $0, :1b
       li64 $32, 12
1a:      jmp :1c
1b:      jal $31, $0, :one
         cp $32, $1
        jal $31, $0, :zero
         cp $33, $1
       andi $34, $32, 255
       andi $35, $33, 255
       jltu $34, $35, :1d
        jmp :1d
1d:     andi $34, $32, 255
       andi $35, $32, 255
       jltu $34, $35, :1e
        jmp :1e
1e:     andi $34, $32, 255
       andi $35, $33, 255
       jgtu $34, $35, :1f
       li64 $32, 15
        jmp :1c
1f:     andi $34, $33, 255
       andi $35, $32, 255
       jgtu $34, $35, :20
        jmp :20
20:     andi $34, $32, 255
       andi $35, $32, 255
       jgtu $34, $35, :21
        jmp :21
21:     andi $33, $33, 255
       andi $32, $32, 255
       jltu $33, $32, :22
       li64 $32, 18
        jmp :1c
22:      jal $31, $0, :mne
         cp $32, $1
        jal $31, $0, :mero
         cp $33, $1
       sxt8 $34, $32
       sxt8 $35, $33
       jgts $34, $35, :23
        jmp :23
23:     sxt8 $34, $32
       sxt8 $35, $32
       jgts $34, $35, :24
        jmp :24
24:     sxt8 $34, $32
       sxt8 $35, $33
       jlts $34, $35, :25
       li64 $32, 21
        jmp :1c
25:     sxt8 $34, $33
       sxt8 $35, $32
       jlts $34, $35, :26
        jmp :26
26:     sxt8 $34, $32
       sxt8 $35, $32
       jlts $34, $35, :27
        jmp :27
27:     sxt8 $33, $33
       sxt8 $32, $32
       jgts $33, $32, :28
       li64 $32, 24
        jmp :1c
28:     li64 $32, 0
        jmp :1c
       li64 $32, 23
        jmp :1c
       li64 $32, 22
        jmp :1c
       li64 $32, 20
        jmp :1c
       li64 $32, 19
        jmp :1c
       li64 $32, 17
        jmp :1c
       li64 $32, 16
        jmp :1c
       li64 $32, 14
        jmp :1c
       li64 $32, 13
1c:       cp $1, $32
     addi64 $254, $254, 40
         ld $31, $254, -40, 40
         tx
mero:
       li64 $13, 0
         cp $1, $13
       jala $0, $31, 0
mne:
       li64 $13, 1
        neg $13, $13
         cp $1, $13
       jala $0, $31, 0
cond:
         cp $13, $2
         cp $1, $13
       jala $0, $31, 0
zero:
       li64 $13, 0
         cp $1, $13
       jala $0, $31, 0
one:
       li64 $13, 1
         cp $1, $13
       jala $0, $31, 0

======== EXECUTION ========
      st $31=0, $254=10240, -40, 40
  addi64 $254=10240, $254, -40
     jal $31=0, $0=0, 1426
    li64 $13=0, 1
      cp $1=0, $13=1
    jala $0=0, $31=31, 0
      cp $32=0, $1=1
     jal $31=31, $0=0, 1392
    li64 $13=1, 0
      cp $1=1, $13=0
    jala $0=0, $31=41, 0
      cp $33=0, $1=0
    andi $34=0, $32=1, 255
    andi $35=0, $33=0, 255
    cmpu $34=1, $34, $35=0
   cmpui $34=1, $34, -1
     not $34=18446744073709551615, $34
      cp $2=0, $34=0
     jal $31=41, $0=0, 1322
      cp $13=0, $2=0
      cp $1=0, $13=0
    jala $0=0, $31=94, 0
      cp $34=0, $1=0
     jeq $34=0, $0=0, 20
    andi $34=0, $32=1, 255
    andi $35=0, $32=1, 255
    cmpu $34=1, $34, $35=1
   cmpui $34=0, $34, -1
     not $34=18446744073709551615, $34
      cp $2=0, $34=0
     jal $31=94, $0=0, 1249
      cp $13=0, $2=0
      cp $1=0, $13=0
    jala $0=0, $31=167, 0
      cp $34=0, $1=0
     jeq $34=0, $0=0, 20
    andi $34=0, $32=1, 255
    andi $35=1, $33=0, 255
    cmpu $34=1, $34, $35=0
   cmpui $34=1, $34, 1
      cp $2=0, $34=0
     jal $31=167, $0=0, 1179
      cp $13=0, $2=0
      cp $1=0, $13=0
    jala $0=0, $31=237, 0
      cp $34=0, $1=0
     jeq $34=0, $0=0, 20
    andi $34=0, $33=0, 255
    andi $35=0, $32=1, 255
    cmpu $34=0, $34, $35=1
   cmpui $34=18446744073709551615, $34, 1
     not $34=1, $34
      cp $2=0, $34=0
     jal $31=237, $0=0, 1106
      cp $13=0, $2=0
      cp $1=0, $13=0
    jala $0=0, $31=310, 0
      cp $34=0, $1=0
     jeq $34=0, $0=0, 20
    andi $34=0, $32=1, 255
    andi $35=1, $32=1, 255
    cmpu $34=1, $34, $35=1
   cmpui $34=0, $34, 1
     not $34=18446744073709551615, $34
      cp $2=0, $34=0
     jal $31=310, $0=0, 1033
      cp $13=0, $2=0
      cp $1=0, $13=0
    jala $0=0, $31=383, 0
      cp $34=0, $1=0
     jeq $34=0, $0=0, 20
    andi $33=0, $33, 255
    andi $32=1, $32, 255
    cmpu $32=1, $33=0, $32
   cmpui $32=18446744073709551615, $32, -1
      cp $2=0, $32=0
     jal $31=383, $0=0, 963
      cp $13=0, $2=0
      cp $1=0, $13=0
    jala $0=0, $31=453, 0
      cp $32=0, $1=0
     jeq $32=0, $0=0, 20
     jal $31=453, $0=0, 906
    li64 $13=0, 1
     neg $13=1, $13
      cp $1=0, $13=18446744073709551615
    jala $0=0, $31=483, 0
      cp $32=0, $1=18446744073709551615
     jal $31=483, $0=0, 872
    li64 $13=18446744073709551615, 0
      cp $1=18446744073709551615, $13=0
    jala $0=0, $31=493, 0
      cp $33=0, $1=0
    sxt8 $34=0, $32=18446744073709551615
    sxt8 $35=1, $33=0
    cmps $34=18446744073709551615, $34, $35=0
   cmpui $34=18446744073709551615, $34, 1
     not $34=1, $34
      cp $2=0, $34=0
     jal $31=493, $0=0, 886
      cp $13=0, $2=0
      cp $1=0, $13=0
    jala $0=0, $31=530, 0
      cp $34=0, $1=0
     jeq $34=0, $0=0, 20
    sxt8 $34=0, $32=18446744073709551615
    sxt8 $35=0, $32=18446744073709551615
    cmps $34=18446744073709551615, $34, $35=18446744073709551615
   cmpui $34=0, $34, 1
     not $34=18446744073709551615, $34
      cp $2=0, $34=0
     jal $31=530, $0=0, 829
      cp $13=0, $2=0
      cp $1=0, $13=0
    jala $0=0, $31=587, 0
      cp $34=0, $1=0
     jeq $34=0, $0=0, 20
    sxt8 $34=0, $32=18446744073709551615
    sxt8 $35=18446744073709551615, $33=0
    cmps $34=18446744073709551615, $34, $35=0
   cmpui $34=18446744073709551615, $34, -1
      cp $2=0, $34=0
     jal $31=587, $0=0, 775
      cp $13=0, $2=0
      cp $1=0, $13=0
    jala $0=0, $31=641, 0
      cp $34=0, $1=0
     jeq $34=0, $0=0, 20
    sxt8 $34=0, $33=0
    sxt8 $35=0, $32=18446744073709551615
    cmps $34=0, $34, $35=18446744073709551615
   cmpui $34=1, $34, -1
     not $34=18446744073709551615, $34
      cp $2=0, $34=0
     jal $31=641, $0=0, 718
      cp $13=0, $2=0
      cp $1=0, $13=0
    jala $0=0, $31=698, 0
      cp $34=0, $1=0
     jeq $34=0, $0=0, 20
    sxt8 $34=0, $32=18446744073709551615
    sxt8 $35=18446744073709551615, $32=18446744073709551615
    cmps $34=18446744073709551615, $34, $35=18446744073709551615
   cmpui $34=0, $34, -1
     not $34=18446744073709551615, $34
      cp $2=0, $34=0
     jal $31=698, $0=0, 661
      cp $13=0, $2=0
      cp $1=0, $13=0
    jala $0=0, $31=755, 0
      cp $34=0, $1=0
     jeq $34=0, $0=0, 20
    sxt8 $33=0, $33
    sxt8 $32=18446744073709551615, $32
    cmps $32=18446744073709551615, $33=0, $32
   cmpui $32=1, $32, 1
      cp $2=0, $32=0
     jal $31=755, $0=0, 607
      cp $13=0, $2=0
      cp $1=0, $13=0
    jala $0=0, $31=809, 0
      cp $32=0, $1=0
     jeq $32=0, $0=0, 20
     jal $31=809, $0=0, 618
    li64 $13=0, 1
      cp $1=0, $13=1
    jala $0=0, $31=839, 0
      cp $32=0, $1=1
     jal $31=839, $0=0, 584
    li64 $13=1, 0
      cp $1=1, $13=0
    jala $0=0, $31=849, 0
      cp $33=0, $1=0
    andi $34=0, $32=1, 255
    andi $35=18446744073709551615, $33=0, 255
    jltu $34=1, $35=0, 10
     jmp 5
    andi $34=1, $32=1, 255
    andi $35=0, $32=1, 255
    jltu $34=1, $35=1, 10
     jmp 5
    andi $34=1, $32=1, 255
    andi $35=1, $33=0, 255
    jgtu $34=1, $35=0, 20
    andi $34=1, $33=0, 255
    andi $35=0, $32=1, 255
    jgtu $34=0, $35=1, 10
     jmp 5
    andi $34=0, $32=1, 255
    andi $35=1, $32=1, 255
    jgtu $34=1, $35=1, 10
     jmp 5
    andi $33=0, $33, 255
    andi $32=1, $32, 255
    jltu $33=0, $32=1, 20
     jal $31=849, $0=0, 318
    li64 $13=0, 1
     neg $13=1, $13
      cp $1=0, $13=18446744073709551615
    jala $0=0, $31=1071, 0
      cp $32=1, $1=18446744073709551615
     jal $31=1071, $0=0, 284
    li64 $13=18446744073709551615, 0
      cp $1=18446744073709551615, $13=0
    jala $0=0, $31=1081, 0
      cp $33=0, $1=0
    sxt8 $34=1, $32=18446744073709551615
    sxt8 $35=1, $33=0
    jgts $34=18446744073709551615, $35=0, 10
     jmp 5
    sxt8 $34=18446744073709551615, $32=18446744073709551615
    sxt8 $35=0, $32=18446744073709551615
    jgts $34=18446744073709551615, $35=18446744073709551615, 10
     jmp 5
    sxt8 $34=18446744073709551615, $32=18446744073709551615
    sxt8 $35=18446744073709551615, $33=0
    jlts $34=18446744073709551615, $35=0, 20
    sxt8 $34=18446744073709551615, $33=0
    sxt8 $35=0, $32=18446744073709551615
    jlts $34=0, $35=18446744073709551615, 10
     jmp 5
    sxt8 $34=0, $32=18446744073709551615
    sxt8 $35=18446744073709551615, $32=18446744073709551615
    jlts $34=18446744073709551615, $35=18446744073709551615, 10
     jmp 5
    sxt8 $33=0, $33
    sxt8 $32=18446744073709551615, $32
    jgts $33=0, $32=18446744073709551615, 20
    li64 $32=18446744073709551615, 0
     jmp 120
      cp $1=0, $32=0
  addi64 $254=10200, $254, 40
      ld $31=1081, $254=10240, -40, 40
      tx