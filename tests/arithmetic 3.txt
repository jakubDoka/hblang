main:
         st $31, $254, -32, 32
     addi64 $254, $254, -32
        jal $31, $0, :one
         cp $32, $1
        jal $31, $0, :zero
         cp $33, $1
       andi $32, $32, 255
       andi $33, $33, 255
       cmpu $34, $32, $33
      cmpui $34, $34, -1
        not $34, $34
         cp $1, $34
        jal $31, $0, :cond
         cp $34, $1
       andi $34, $34, 255
        jeq $34, $0, :3
       li64 $1, 1
        jmp :4
3:     cmpu $34, $32, $32
      cmpui $34, $34, -1
        not $34, $34
         cp $1, $34
        jal $31, $0, :cond
         cp $34, $1
       andi $34, $34, 255
        jeq $34, $0, :5
       li64 $1, 2
4:      jmp :6
5:     cmpu $34, $32, $33
      cmpui $34, $34, 1
       andi $34, $34, 1
         cp $1, $34
        jal $31, $0, :cond
         cp $34, $1
       andi $34, $34, 255
        jeq $34, $0, :7
       li64 $1, 3
6:      jmp :8
7:     cmpu $34, $33, $32
      cmpui $34, $34, 1
        not $34, $34
         cp $1, $34
        jal $31, $0, :cond
         cp $34, $1
       andi $34, $34, 255
        jeq $34, $0, :9
       li64 $1, 4
8:      jmp :a
9:     cmpu $34, $32, $32
      cmpui $34, $34, 1
        not $34, $34
         cp $1, $34
        jal $31, $0, :cond
         cp $34, $1
       andi $34, $34, 255
        jeq $34, $0, :b
       li64 $1, 5
a:      jmp :c
b:     cmpu $32, $33, $32
      cmpui $32, $32, -1
       andi $32, $32, 1
         cp $1, $32
        jal $31, $0, :cond
         cp $32, $1
       andi $32, $32, 255
        jeq $32, $0, :d
       li64 $1, 6
c:      jmp :e
d:      jal $31, $0, :mne
         cp $32, $1
        jal $31, $0, :mero
         cp $33, $1
       sxt8 $32, $32
       sxt8 $33, $33
       cmps $34, $32, $33
      cmpui $34, $34, 1
        not $34, $34
         cp $1, $34
        jal $31, $0, :cond
         cp $34, $1
       andi $34, $34, 255
        jeq $34, $0, :11
       li64 $1, 7
e:      jmp :12
11:     cmps $34, $32, $32
      cmpui $34, $34, 1
        not $34, $34
         cp $1, $34
        jal $31, $0, :cond
         cp $34, $1
       andi $34, $34, 255
        jeq $34, $0, :13
       li64 $1, 8
12:      jmp :14
13:     cmps $34, $32, $33
      cmpui $34, $34, -1
       andi $34, $34, 1
         cp $1, $34
        jal $31, $0, :cond
         cp $34, $1
       andi $34, $34, 255
        jeq $34, $0, :15
       li64 $1, 9
14:      jmp :16
15:     cmps $34, $33, $32
      cmpui $34, $34, -1
        not $34, $34
         cp $1, $34
        jal $31, $0, :cond
         cp $34, $1
       andi $34, $34, 255
        jeq $34, $0, :17
       li64 $1, 10
16:      jmp :18
17:     cmps $34, $32, $32
      cmpui $34, $34, -1
        not $34, $34
         cp $1, $34
        jal $31, $0, :cond
         cp $34, $1
       andi $34, $34, 255
        jeq $34, $0, :19
       li64 $1, 11
18:      jmp :1a
19:     cmps $32, $33, $32
      cmpui $32, $32, 1
       andi $32, $32, 1
         cp $1, $32
        jal $31, $0, :cond
         cp $32, $1
       andi $32, $32, 255
        jeq $32, $0, :1b
       li64 $1, 12
1a:      jmp :1c
1b:      jal $31, $0, :one
         cp $32, $1
        jal $31, $0, :zero
         cp $33, $1
       andi $32, $32, 255
       andi $33, $33, 255
       jltu $32, $33, :1d
       jltu $32, $32, :1e
       jgtu $32, $33, :1f
       li64 $1, 15
        jmp :1c
1f:     jgtu $33, $32, :20
       jgtu $32, $32, :21
       jltu $33, $32, :22
       li64 $1, 18
        jmp :1c
22:      jal $31, $0, :mne
         cp $32, $1
        jal $31, $0, :mero
       sxt8 $2, $32
       sxt8 $3, $1
       jgts $2, $3, :23
       jgts $2, $2, :24
       jlts $2, $3, :25
       li64 $1, 21
        jmp :1c
25:     jlts $3, $2, :26
       jlts $2, $2, :27
       jgts $3, $2, :28
       li64 $1, 24
        jmp :1c
28:     andi $2, $32, 255
        jeq $2, $2, :29
       li64 $1, 25
        jmp :1c
29:     andi $1, $1, 255
        jne $2, $1, :2a
       li64 $1, 26
        jmp :1c
2a:     li64 $1, 0
        jmp :1c
27:     li64 $1, 23
        jmp :1c
26:     li64 $1, 22
        jmp :1c
24:     li64 $1, 20
        jmp :1c
23:     li64 $1, 19
        jmp :1c
21:     li64 $1, 17
        jmp :1c
20:     li64 $1, 16
        jmp :1c
1e:     li64 $1, 14
        jmp :1c
1d:     li64 $1, 13
1c:   addi64 $254, $254, 32
         ld $31, $254, -32, 32
         tx
mero:
        li8 $1, 0
       jala $0, $31, 0
mne:
        li8 $1, -1
       jala $0, $31, 0
zero:
        li8 $1, 0
       jala $0, $31, 0
one:
        li8 $1, 1
       jala $0, $31, 0
cond:
       jala $0, $31, 0
code size: 1361