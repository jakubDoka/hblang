======== SOURCE ========
fn(): uint {
    // comment is a statement
    foo(/* comment is an exprression /* if you are crazy */ */)
    return 0
}
======== UNSCHEDULED SON ========
%0 = Start: idpth: 0 [, %1]
%1 = Entry: idpth: 0, %0 [, %2]
%4 = Ret: %3 []
%2 = Call: fn1, idpth: 0, %1 [, %3]
%5 = CInt: 0 [, %6]
%3 = CallEnd: idpth: 0, %2 [, %4, %6]
%6 = Return: idpth: 0, %3, %5 []

======== OPTIMIZED SON ========
%0 = Start: idpth: 0 [, %1]
%1 = Entry: idpth: 0, %0 [, %2]
%2 = Call: fn1, idpth: 0, %1 [, %3]
%5 = CInt: 0 [, %6]
%3 = CallEnd: idpth: 0, %2 [, %6]
%6 = Return: idpth: 0, %3, %5 []

======== SCHEDULED SON ========
%0 = Start: idpth: 0
%1 = Entry: idpth: 1, %0
  %2 = Call: fn1, idpth: 2
%3 = CallEnd: idpth: 3, %2
  %5 = CInt: 0
  %6 = Return: idpth: 0, %5

======== REGISTER SELECTION ========
{ 1, 1, 1 }

======== SOURCE ========
fn(comment: void): void return /* comment evaluates to void */
======== UNSCHEDULED SON ========
%0 = Start: idpth: 0 [, %1]
%1 = Entry: idpth: 0, %0 [, %2]
%2 = Return: idpth: 0, %1 []

======== OPTIMIZED SON ========
%0 = Start: idpth: 0 [, %1]
%1 = Entry: idpth: 0, %0 [, %2]
%2 = Return: idpth: 0, %1 []

======== SCHEDULED SON ========
%0 = Start: idpth: 0
%1 = Entry: idpth: 0, %0
  %2 = Return: idpth: 0

======== REGISTER SELECTION ========
{ 1 }

======== CODEGEN ========
main:
        jal $31, $0, :foo
       li64 $32, 0
         cp $1, $32
         tx
foo:
       jala $0, $31, 0

======== EXECUTION ========
     jal $31=0, $0=0, 21
    jala $0=0, $31=7, 0
    li64 $32=0, 0
      cp $1=0, $32=0
      tx