IR
b0:
	v0 = Li64 10
	call :f1, v0

b1:
	v1 = ret b0
	ret v1

b0:
	v0 = arg 0
	v0 = Li64 2
	v1 = <=64 v0, v0
	if v1 b2 b3

b2:
	v2 = Li64 1
	ret v2

b3:
	v0 = arg 0
	v3 = Li64 1
	v4 = -64 v0, v3
	call :f1, v4

b4:
	v0 = arg 0
	v6 = Li64 2
	v7 = -64 v0, v6
	call :f1, v7

b5:
	v5 = ret b3
	v8 = ret b4
	v9 = +64 v5, v8
	ret v9


DISASM
   addi64   $254, $254, 0
   li64     $2, 10
   jal      $31, $0, :0
   addi64   $254, $254, 0
   tx
0: addi64   $254, $254, 18446744073709551592
   st       $31, $254, 0, 24
   cp       $32, $2
   li64     $33, 2
   jgtu     $32, $33, :1
   li64     $1, 1
   jmp      :2
1: cp       $2, $32
   li64     $33, 1
   sub64    $2, $2, $33
   jal      $31, $0, :0
   cp       $2, $32
   li64     $33, 2
   sub64    $2, $2, $33
   cp       $33, $1
   jal      $31, $0, :0
   swa      $33, $1
   add64    $1, $1, $33
2: ld       $31, $254, 0, 24
   addi64   $254, $254, 24
   jala     $0, $31, 0

REGISTERS
$1: 55