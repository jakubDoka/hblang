IR
b0:
	v0 = Li64 10
	call :f1, v0

b1:
	v2 = Li64 20
	call :f2, v2

b2:
	v1 = ret b0
	v3 = ret b1
	v4 = +64 v1, v3
	ret v4

b0:
	v0 = arg 0
	v0 = Li64 1
	v1 = +64 v0, v0
	ret v1

b0:
	v0 = arg 0
	v0 = Li64 2
	v1 = +64 v0, v0
	ret v1


DISASM
   addi64   $254, $254, 0
   li64     $2, 10
   jal      $31, $0, :0
   li64     $2, 20
   cp       $32, $1
   jal      $31, $0, :1
   swa      $32, $1
   add64    $1, $1, $32
   addi64   $254, $254, 0
   tx
0: addi64   $254, $254, 18446744073709551592
   st       $31, $254, 0, 24
   cp       $32, $2
   cp       $1, $32
   li64     $33, 1
   add64    $1, $1, $33
   ld       $31, $254, 0, 24
   addi64   $254, $254, 24
   jala     $0, $31, 0
1: addi64   $254, $254, 18446744073709551592
   st       $31, $254, 0, 24
   cp       $32, $2
   cp       $1, $32
   li64     $33, 2
   add64    $1, $1, $33
   ld       $31, $254, 0, 24
   addi64   $254, $254, 24
   jala     $0, $31, 0

REGISTERS
$1: 33