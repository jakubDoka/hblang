main:
         st $31, $254, -8, 8
     addi64 $254, $254, -40
        lra $1, $0, :out of bounds matching 1.main.hello, world
         st $1, $254, 0, 8
       li64 $1, 12
         st $1, $254, 8, 8
         ld $1, $254, 0, 8
         ld $2, $254, 8, 8
        jal $31, $0, :out of bounds matching 1.byte_iter
         st $1, $254, 16, 8
         st $2, $254, 24, 8
     addi64 $1, $254, 16
        jal $31, $0, :out of bounds matching 1.Iterator().for_each(.main)
         cp $1, $0
     addi64 $254, $254, 40
         ld $31, $254, -8, 8
         tx
out of bounds matching 1.byte_iter:
     addi64 $254, $254, -32
         st $1, $254, 0, 8
         st $2, $254, 8, 8
     addi64 $2, $254, 16
     addi64 $1, $254, 0
        bmc $1, $2, 16
         ld $1, $254, 16, 8
         ld $2, $254, 24, 8
     addi64 $254, $254, 32
       jala $0, $31, 0
out of bounds matching 1.Iterator().for_each(.main):
         st $31, $254, -8, 8
     addi64 $254, $254, -18
         st $1, $254, 0, 8
6:       ld $1, $254, 0, 8
        jal $31, $0, :out of bounds matching 1.Iterator().next
         st $1, $254, 8, 1
         st $2, $254, 9, 1
         ld $1, $254, 8, 1
       andi $2, $1, 255
         ld $1, $254, 9, 1
         st $1, $254, 8, 1
        jeq $2, $0, :4
         ld $1, $254, 8, 1
        jal $31, $0, :out of bounds matching 1.main
        jmp :6
4:   addi64 $254, $254, 18
         ld $31, $254, -8, 8
       jala $0, $31, 0
out of bounds matching 1.Iterator().next:
         st $31, $254, -8, 8
     addi64 $254, $254, -18
         st $1, $254, 0, 8
         ld $1, $254, 0, 8
        jal $31, $0, :out of bounds matching 1.next
         st $1, $254, 8, 1
         st $2, $254, 9, 1
         ld $1, $254, 8, 1
         ld $2, $254, 9, 1
     addi64 $254, $254, 18
         ld $31, $254, -8, 8
       jala $0, $31, 0
out of bounds matching 1.main:
     addi64 $254, $254, -1
         st $1, $254, 0, 1
     addi64 $254, $254, 1
       jala $0, $31, 0
out of bounds matching 1.next:
     addi64 $254, $254, -13
         st $1, $254, 0, 8
         ld $2, $254, 0, 8
         ld $1, $2, 8, 8
        jne $1, $0, :8
         st $0, $254, 8, 1
         ld $1, $254, 8, 1
         ld $2, $254, 9, 1
        jmp :9
8:       ld $1, $2, 0, 8
        li8 $4, 1
         ld $1, $1, 0, 1
         st $1, $254, 10, 1
         ld $3, $254, 0, 8
         ld $1, $3, 0, 8
         ld $2, $3, 8, 8
     addi64 $1, $1, 1
         st $1, $3, 0, 8
     addi64 $1, $2, -1
         st $1, $3, 8, 8
         st $4, $254, 11, 1
         ld $1, $254, 10, 1
         st $1, $254, 12, 1
         ld $2, $254, 12, 1
         ld $1, $254, 11, 1
9:   addi64 $254, $254, 13
       jala $0, $31, 0