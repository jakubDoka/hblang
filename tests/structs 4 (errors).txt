structs 4 (errors):8:8: cant infer the type of this constructor, you can specify a type: '<ty>.{'
    _ = .{}
          ^
structs 4 (errors):10:10: uint can not be constructed with '.{..}'
    _ = uint.{}
            ^
structs 4 (errors):11:10: uint can not be constructed with '.(..)'
    _ = uint.()
            ^
structs 4 (errors):12:8: field a on struct "structs 4 (errors)".Ty is not initialized
    _ = Ty.{}
          ^
structs 4 (errors):13:8: "structs 4 (errors)".Ty has 2 fields, but tuple constructor has 0 values
    _ = Ty.()
          ^
structs 4 (errors):14:10: "structs 4 (errors)".Ty does not have a field called p (TODO: list fields)
    _ = Ty.{p: 10}
            ^
structs 4 (errors):14:8: field a on struct "structs 4 (errors)".Ty is not initialized
    _ = Ty.{p: 10}
          ^
structs 4 (errors):15:22: "structs 4 (errors)".Ty does not have a field called p (TODO: list fields)
    _ = Ty.{a: 1, b: 2, p: 10}
                        ^
structs 4 (errors):16:16: initializing the filed multiple times
    _ = Ty.{a: 1, a: 2}
                  ^
structs 4 (errors):16:13: ...arleady initialized here
    _ = Ty.{a: 1, a: 2}
               ^
structs 4 (errors):16:8: field b on struct "structs 4 (errors)".Ty is not initialized
    _ = Ty.{a: 1, a: 2}
          ^
structs 4 (errors):17:8: "structs 4 (errors)".Ty has 2 fields, but tuple constructor has 3 values
    _ = Ty.(.{}, .(), /**/)
          ^
structs 4 (errors):18:9: "structs 4 (errors)".Ty has 2 fields, but tuple constructor has 3 values
    v := Ty.(0, 0, 0)
           ^
structs 4 (errors):19:11: uint can not be constructed with '.(..)'
    return Ty.(v, 0)
             ^
structs 4 (errors):7:20: function is missing a return value since uint has more then 1 possible value
main := fn(): uint {
                   ^