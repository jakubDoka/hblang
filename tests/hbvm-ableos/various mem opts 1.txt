main:
         st $31, $254, -8, 8
     addi64 $254, $254, -8
        jal $31, $0, :various mem opts 1.store_pullout
        jeq $1, $0, :1
       li64 $1, 1
        jmp :2
1:      jal $31, $0, :various mem opts 1.duplicate_store
        jeq $1, $0, :4
       li64 $1, 2
2:      jmp :5
4:      jal $31, $0, :various mem opts 1.combine_pull_out_duplicate
        jeq $1, $0, :7
       li64 $1, 3
5:      jmp :8
7:       cp $1, $0
8:   addi64 $254, $254, 8
         ld $31, $254, -8, 8
         tx
various mem opts 1.store_pullout:
         st $31, $254, -8, 8
     addi64 $254, $254, -16
       li64 $1, 1
         st $1, $254, 0, 8
     addi64 $1, $254, 0
        jal $31, $0, :various mem opts 1.use(^uint)
         cp $1, $0
     addi64 $254, $254, 16
         ld $31, $254, -8, 8
       jala $0, $31, 0
various mem opts 1.duplicate_store:
         st $31, $254, -8, 8
     addi64 $254, $254, -16
       li64 $1, 1
         st $1, $254, 0, 8
     addi64 $1, $254, 0
        jal $31, $0, :various mem opts 1.use(^uint)
         st $0, $254, 0, 8
     addi64 $1, $254, 0
        jal $31, $0, :various mem opts 1.use(^uint)
         ld $1, $254, 0, 8
     addi64 $254, $254, 16
         ld $31, $254, -8, 8
       jala $0, $31, 0
various mem opts 1.combine_pull_out_duplicate:
         st $31, $254, -8, 8
     addi64 $254, $254, -16
       li64 $1, 1
         st $1, $254, 0, 8
     addi64 $1, $254, 0
        jal $31, $0, :various mem opts 1.use(^uint)
         st $0, $254, 0, 8
     addi64 $1, $254, 0
        jal $31, $0, :various mem opts 1.use(^uint)
         ld $1, $254, 0, 8
     addi64 $254, $254, 16
         ld $31, $254, -8, 8
       jala $0, $31, 0
various mem opts 1.use(^uint):
       jala $0, $31, 0