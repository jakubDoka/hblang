main:
         st $31, $254, -80, 80
     addi64 $254, $254, -128
       li64 $40, 0
       li64 $39, 1
       li64 $38, 2
       li64 $37, 3
       li64 $36, 4
       li64 $35, 5
       li64 $34, 6
       li64 $33, 7
         cp $1, $40
         cp $2, $39
         cp $3, $38
         cp $4, $37
         cp $5, $36
         cp $6, $35
         cp $7, $34
         cp $8, $33
        jal $31, $0, :proper systemv abi 1 (spilled arg).load_of_args
         cp $32, $1
     addi64 $1, $254, 0
         st $40, $254, 0, 8
         st $39, $254, 8, 8
         st $38, $254, 16, 8
     addi64 $2, $254, 24
         st $37, $254, 24, 8
         st $36, $254, 32, 8
         st $35, $254, 40, 8
         cp $3, $34
         cp $4, $33
        jal $31, $0, :proper systemv abi 1 (spilled arg).stack_args
      sub64 $1, $32, $1
     addi64 $254, $254, 128
         ld $31, $254, -80, 80
         tx
proper systemv abi 1 (spilled arg).load_of_args:
      add64 $1, $1, $2
      add64 $1, $1, $3
      add64 $1, $1, $4
      add64 $1, $1, $5
      add64 $1, $1, $6
      add64 $1, $1, $7
      add64 $1, $1, $8
       jala $0, $31, 0
proper systemv abi 1 (spilled arg).stack_args:
         cp $7, $2
         cp $6, $3
         cp $5, $4
         ld $3, $1, 16, 8
         ld $2, $1, 0, 8
         ld $1, $1, 8, 8
      add64 $1, $2, $1
         ld $4, $7, 0, 8
      add64 $1, $1, $3
         ld $3, $7, 16, 8
         ld $2, $7, 8, 8
      add64 $1, $1, $4
      add64 $1, $1, $2
      add64 $1, $1, $3
      add64 $1, $1, $6
      add64 $1, $1, $5
       jala $0, $31, 0