defer 1.main:
         st $31, $254, -56, 56
     addi64 $254, $254, -64
       li64 $32, 0
       li64 $33, 1
        jeq $32, $0, :0
         cp $1, $33
        jmp :1
0:      jeq $33, $33, :2
       li64 $1, 2
1:      jmp :3
2:     li64 $34, 3
       li64 $35, 4
         cp $36, $33
c:   addi64 $37, $36, 1
        jne $36, $34, :4
         cp $36, $37
        jmp :5
4:      jne $36, $35, :6
       li64 $36, 5
        jeq $37, $36, :7
         cp $1, $34
3:      jmp :8
7:   addi64 $34, $254, 0
         st $32, $254, 0, 8
         cp $1, $34
        jal $31, $0, :defer 1.main.ret_defer
         ld $1, $254, 0, 8
        jeq $1, $33, :a
         cp $1, $35
8:      jmp :b
a:       cp $1, $32
b:   addi64 $254, $254, 64
         ld $31, $254, -56, 56
         tx
6:       cp $36, $37
5:      jmp :c
defer 1.main.ret_defer:
         ld $2, $1, 0, 8
     addi64 $2, $2, 1
         st $2, $1, 0, 8
       jala $0, $31, 0