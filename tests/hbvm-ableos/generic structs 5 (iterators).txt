generic structs 5 (iterators).main:
         st $31, $254, -104, 104
     addi64 $254, $254, -244
     addi64 $32, $254, 100
     addi64 $33, $254, 0
        lra $34, $0, :generic structs 5 (iterators).main.abcd
         st $34, $254, 0, 8
       li64 $34, 4
         st $34, $254, 8, 8
     addi64 $35, $254, 84
        li8 $36, 0
     addi64 $37, $254, 16
        lra $38, $0, :generic structs 5 (iterators).main.ab
         st $38, $254, 16, 8
       li64 $38, 2
         st $38, $254, 24, 8
     addi64 $39, $32, 8
        lra $40, $0, :generic structs 5 (iterators).main.cd
     addi64 $41, $254, 32
         st $40, $254, 32, 8
         st $38, $254, 40, 8
     addi64 $40, $254, 68
        bmc $37, $40, 16
        bmc $33, $35, 16
         st $36, $254, 100, 1
        bmc $37, $39, 16
     addi64 $36, $32, 24
        bmc $41, $36, 16
     addi64 $36, $254, 48
d:       cp $1, $40
        jal $31, $0, :generic structs 5 (iterators).main(Next = generic structs 5 (iterators).main.Next).next
         cp $37, $1
         cp $39, $2
         st $37, $254, 48, 1
         st $39, $254, 49, 1
       andi $37, $37, 255
        not $37, $37
       andi $37, $37, 255
        jeq $37, $0, :4
     addi64 $36, $254, 52
        bmc $33, $36, 16
        bmc $36, $35, 16
     addi64 $33, $254, 50
a:       cp $1, $35
        jal $31, $0, :generic structs 5 (iterators).main(Next = generic structs 5 (iterators).main.Next).next
         cp $36, $1
         cp $37, $2
         st $36, $254, 50, 1
         st $37, $254, 51, 1
       andi $36, $36, 255
        not $36, $36
       andi $36, $36, 255
        jeq $36, $0, :5
       li64 $1, 0
        jmp :6
5:       cp $1, $32
        jal $31, $0, :generic structs 5 (iterators).main.Chain(A = generic structs 5 (iterators).main(Next = generic structs 5 (iterators).main.Next), B = generic structs 5 (iterators).main(Next = generic structs 5 (iterators).main.Next)).next
         cp $36, $1
         cp $37, $2
       andi $36, $36, 255
        not $38, $36
       andi $38, $38, 255
         ld $39, $254, 51, 1
         ld $40, $254, 50, 1
        jeq $38, $0, :8
       li64 $1, 3
        jmp :6
8:     andi $38, $40, 255
       andi $39, $39, 255
       andi $37, $37, 255
       cmpu $36, $36, $38
      cmpui $36, $36, 0
       andi $36, $36, 1
       cmpu $37, $37, $39
      cmpui $37, $37, 0
       andi $37, $37, 1
         or $36, $36, $37
       andi $36, $36, 255
        jeq $36, $0, :9
         cp $1, $34
        jmp :6
9:      jmp :a
4:       cp $1, $35
        jal $31, $0, :generic structs 5 (iterators).main(Next = generic structs 5 (iterators).main.Next).next
         cp $37, $1
         cp $39, $2
       andi $37, $37, 255
        not $41, $37
       andi $41, $41, 255
         ld $42, $254, 49, 1
         ld $43, $254, 48, 1
        jeq $41, $0, :b
       li64 $1, 1
        jmp :6
b:     andi $41, $43, 255
       andi $39, $39, 255
       andi $42, $42, 255
       cmpu $37, $41, $37
      cmpui $37, $37, 0
       andi $37, $37, 1
       cmpu $39, $42, $39
      cmpui $39, $39, 0
       andi $39, $39, 1
         or $37, $37, $39
       andi $37, $37, 255
        jeq $37, $0, :c
         cp $1, $38
6:   addi64 $254, $254, 244
         ld $31, $254, -104, 104
         tx
c:      jmp :d
generic structs 5 (iterators).main(Next = generic structs 5 (iterators).main.Next).next:
         st $31, $254, -32, 32
     addi64 $254, $254, -50
         cp $32, $1
       li64 $33, 0
         ld $34, $32, 8, 8
        jne $34, $33, :e
        jal $31, $0, :generic structs 5 (iterators).main.Next(T = u8).none
        jmp :10
e:       ld $33, $32, 0, 8
         ld $33, $33, 0, 1
         cp $1, $33
        jal $31, $0, :generic structs 5 (iterators).main.Next(T = u8).some
         ld $3, $32, 8, 8
     addi64 $4, $254, 0
         st $1, $254, 0, 1
         st $2, $254, 1, 1
         ld $1, $32, 0, 8
     addi64 $2, $254, 2
     addi64 $1, $1, 1
         st $1, $254, 2, 8
     addi64 $1, $3, -1
         st $1, $254, 10, 8
        bmc $2, $32, 16
         ld $1, $254, 1, 1
         ld $2, $254, 0, 1
        swa $1, $2
10:   addi64 $254, $254, 50
         ld $31, $254, -32, 32
       jala $0, $31, 0
generic structs 5 (iterators).main.Chain(A = generic structs 5 (iterators).main(Next = generic structs 5 (iterators).main.Next), B = generic structs 5 (iterators).main(Next = generic structs 5 (iterators).main.Next)).next:
         st $31, $254, -88, 88
     addi64 $254, $254, -88
         cp $32, $1
       li64 $33, 0
       li64 $34, 1
        li8 $35, 1
        li8 $36, 2
     addi64 $37, $32, 24
     addi64 $38, $32, 8
19:       ld $39, $32, 0, 1
       sxt8 $39, $39
        jne $39, $33, :12
         cp $1, $38
        jal $31, $0, :generic structs 5 (iterators).main(Next = generic structs 5 (iterators).main.Next).next
         cp $39, $1
         cp $40, $2
       andi $41, $39, 255
        jeq $41, $0, :13
         cp $1, $39
         cp $2, $40
        jmp :14
13:       st $35, $32, 0, 1
        jmp :15
12:      jne $39, $34, :16
         cp $1, $37
        jal $31, $0, :generic structs 5 (iterators).main(Next = generic structs 5 (iterators).main.Next).next
         cp $39, $1
         cp $40, $2
       andi $41, $39, 255
        jeq $41, $0, :17
         cp $1, $39
         cp $2, $40
14:      jmp :18
17:       st $36, $32, 0, 1
15:      jmp :19
16:      jal $31, $0, :generic structs 5 (iterators).main.Next(T = u8).none
18:   addi64 $254, $254, 88
         ld $31, $254, -88, 88
       jala $0, $31, 0
generic structs 5 (iterators).main.Next(T = u8).none:
        li8 $1, 0
        li8 $2, -86
       jala $0, $31, 0
generic structs 5 (iterators).main.Next(T = u8).some:
        li8 $2, 1
        swa $1, $2
       jala $0, $31, 0