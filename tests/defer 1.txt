main:
         st $31, $254, -72, 72
     addi64 $254, $254, -80
       li64 $32, 0
       li64 $33, 1
        jne $32, $33, :0
         cp $1, $33
        jmp :1
0:   addi64 $34, $32, 1
        jeq $34, $33, :2
       li64 $1, 2
1:      jmp :3
2:     li64 $35, 3
       li64 $36, 4
       li64 $37, 5
     addi64 $38, $254, 0
c:   addi64 $39, $34, 1
        jne $34, $35, :4
         cp $34, $39
        jmp :5
4:      jne $34, $36, :6
        jeq $39, $37, :7
         cp $1, $35
3:      jmp :8
7:       st $32, $254, 0, 8
         cp $1, $38
        jal $31, $0, :main.ret_defer
         ld $1, $254, 0, 8
        jeq $1, $33, :a
         cp $1, $36
8:      jmp :b
a:       cp $1, $32
b:   addi64 $254, $254, 80
         ld $31, $254, -72, 72
         tx
6:       cp $34, $39
5:      jmp :c
main.ret_defer:
         ld $2, $1, 0, 8
     addi64 $2, $2, 1
         st $2, $1, 0, 8
       jala $0, $31, 0
code size: 304