(module
  (type (;0;) (func (result i64)))
  (type (;1;) (func (param i32 i32) (result i32)))
  (func $main (type 0) (result i64)
    (local i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64)
    global.get 0
    i64.const 8
    i64.sub
    global.set 0
    i64.const 0
    global.get 0
    i64.add
    local.set 12
    i32.const 0
    local.set 0
    local.get 12
    i32.wrap_i64
    local.get 0
    i32.store8
    i64.const 1
    local.set 13
    local.get 12
    local.get 13
    i64.add
    local.set 14
    local.get 12
    i32.wrap_i64
    i32.load8_u
    local.set 1
    local.get 14
    i32.wrap_i64
    i32.load8_u
    local.set 2
    local.get 1
    local.get 2
    call $short_and_op_precedence_1.foo
    local.set 3
    block  ;; label = @1
      block  ;; label = @2
        block  ;; label = @3
          block  ;; label = @4
            i64.const 4
            global.get 0
            i64.add
            local.set 15
            local.get 15
            i32.wrap_i64
            local.get 3
            i32.store8
            local.get 15
            i32.wrap_i64
            i32.load8_u
            local.set 4
            local.get 4
            i32.eqz
            br_if 0 (;@4;)
            local.get 13
            local.set 20
            br 1 (;@3;)
          end
          i32.const 1
          local.set 5
          i64.const 2
          global.get 0
          i64.add
          local.set 16
          local.get 16
          i32.wrap_i64
          local.get 5
          i32.store8
          local.get 16
          local.get 13
          i64.add
          local.set 17
          local.get 17
          i32.wrap_i64
          local.get 5
          i32.store8
          local.get 17
          i32.wrap_i64
          i32.load8_u
          local.set 6
          local.get 16
          i32.wrap_i64
          i32.load8_u
          local.set 7
          local.get 7
          local.get 6
          call $short_and_op_precedence_1.foo
          local.set 8
          i64.const 5
          global.get 0
          i64.add
          local.set 18
          local.get 18
          i32.wrap_i64
          local.get 8
          i32.store8
          local.get 18
          i32.wrap_i64
          i32.load8_u
          local.set 9
          local.get 9
          i32.eqz
          local.set 10
          local.get 10
          i32.eqz
          br_if 1 (;@2;)
          i64.const 2
          local.set 19
          local.get 19
          local.set 20
        end
        local.get 20
        local.set 24
        br 1 (;@1;)
      end
      i64.const 7
      global.get 0
      i64.add
      local.set 21
      local.get 21
      i32.wrap_i64
      local.get 0
      i32.store8
      i64.const 6
      global.get 0
      i64.add
      local.set 22
      local.get 21
      i32.wrap_i64
      i32.load8_u
      local.set 11
      local.get 22
      i32.wrap_i64
      local.get 11
      i32.store8
      i64.const 0
      local.set 23
      local.get 23
      local.set 24
    end
    i64.const 8
    global.get 0
    i64.add
    global.set 0
    local.get 24
    return
    unreachable)
  (func $short_and_op_precedence_1.foo (type 1) (param i32 i32) (result i32)
    (local i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i64 i64 i64 i64 i64 i64)
    global.get 0
    i64.const 8
    i64.sub
    global.set 0
    block  ;; label = @1
      block  ;; label = @2
        i64.const 1
        local.set 13
        i64.const 0
        global.get 0
        i64.add
        local.set 14
        local.get 14
        i32.wrap_i64
        local.get 0
        i32.store8
        i64.const 4
        global.get 0
        i64.add
        local.set 15
        i32.const 0
        local.set 2
        i64.const 6
        global.get 0
        i64.add
        local.set 16
        i64.const 2
        global.get 0
        i64.add
        local.set 17
        local.get 14
        local.get 13
        i64.add
        local.set 18
        local.get 18
        i32.wrap_i64
        local.get 1
        i32.store8
        local.get 18
        i32.wrap_i64
        i32.load8_u
        local.set 3
        local.get 14
        i32.wrap_i64
        i32.load8_u
        local.set 4
        local.get 17
        i32.wrap_i64
        local.get 3
        i32.store8
        local.get 4
        i32.eqz
        br_if 0 (;@2;)
        local.get 14
        i32.wrap_i64
        i32.load8_u
        local.set 5
        local.get 18
        i32.wrap_i64
        i32.load8_u
        local.set 6
        local.get 15
        i32.wrap_i64
        local.get 6
        i32.store8
        local.get 16
        i32.wrap_i64
        local.get 5
        i32.store8
        br 1 (;@1;)
      end
      local.get 16
      i32.wrap_i64
      local.get 2
      i32.store8
    end
    block  ;; label = @1
      block  ;; label = @2
        local.get 16
        i32.wrap_i64
        i32.load8_u
        local.set 7
        local.get 7
        i32.eqz
        br_if 0 (;@2;)
        local.get 17
        i32.wrap_i64
        i32.load8_u
        i32.const 255
        i32.and
        local.set 8
        local.get 15
        i32.wrap_i64
        i32.load8_u
        local.set 9
        local.get 9
        i32.const 255
        i32.and
        local.set 10
        local.get 8
        local.get 10
        i32.eq
        local.set 11
        local.get 11
        local.set 12
        br 1 (;@1;)
      end
      local.get 2
      local.set 12
    end
    i64.const 8
    global.get 0
    i64.add
    global.set 0
    local.get 12
    return
    unreachable)
  (table (;0;) 0 funcref)
  (memory (;0;) 3)
  (global (;0;) (mut i64) (i64.const 131072))
  (export "__stack_pointer" (global 0))
  (export "main" (func $main))
  (elem (;0;) (i32.const 0) func)
  (data (;0;) (i32.const 131072) ""))