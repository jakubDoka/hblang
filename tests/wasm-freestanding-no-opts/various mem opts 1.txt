(module
  (type (;0;) (func (result i64)))
  (type (;1;) (func (result i64)))
  (type (;2;) (func (result i64)))
  (type (;3;) (func (result i64)))
  (type (;4;) (func (result i64)))
  (type (;5;) (func (param i64)))
  (func $main (type 0) (result i64)
    (local i32 i32 i32 i32 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64)
    global.get 0
    i64.const 32
    i64.sub
    global.set 0
    call $various_mem_opts_1.store_pullout
    local.set 5
    block  ;; label = @1
      block  ;; label = @2
        block  ;; label = @3
          block  ;; label = @4
            block  ;; label = @5
              global.get 0
              i32.wrap_i64
              local.get 5
              i64.store
              global.get 0
              i32.wrap_i64
              i64.load
              i64.const 0
              local.set 4
              local.get 4
              i64.ne
              local.set 0
              local.get 0
              br_if 0 (;@5;)
              call $various_mem_opts_1.duplicate_store
              local.set 6
              block  ;; label = @6
                global.get 0
                i32.wrap_i64
                local.get 6
                i64.store offset=8
                global.get 0
                i32.wrap_i64
                i64.load offset=8
                local.get 4
                i64.ne
                local.set 1
                local.get 1
                br_if 0 (;@6;)
                call $various_mem_opts_1.combine_pull_out_duplicate
                local.set 7
                block  ;; label = @7
                  global.get 0
                  i32.wrap_i64
                  local.get 7
                  i64.store offset=16
                  global.get 0
                  i32.wrap_i64
                  i64.load offset=16
                  local.get 4
                  i64.ne
                  local.set 2
                  local.get 2
                  br_if 0 (;@7;)
                  call $various_mem_opts_1.parallel_stores
                  local.set 8
                  block  ;; label = @8
                    global.get 0
                    i32.wrap_i64
                    local.get 8
                    i64.store offset=24
                    global.get 0
                    i32.wrap_i64
                    i64.load offset=24
                    local.get 4
                    i64.ne
                    local.set 3
                    local.get 3
                    br_if 0 (;@8;)
                    local.get 4
                    local.set 16
                    br 7 (;@1;)
                  end
                  i64.const 4
                  local.set 9
                  local.get 9
                  local.set 15
                  br 5 (;@2;)
                end
                i64.const 3
                local.set 10
                local.get 10
                local.set 14
                br 3 (;@3;)
              end
              i64.const 2
              local.set 11
              local.get 11
              local.set 13
              br 1 (;@4;)
            end
            i64.const 1
            local.set 12
            local.get 12
            local.set 13
          end
          local.get 13
          local.set 14
        end
        local.get 14
        local.set 15
      end
      local.get 15
      local.set 16
    end
    i64.const 32
    global.get 0
    i64.add
    global.set 0
    local.get 16
    return
    unreachable)
  (func $various_mem_opts_1.store_pullout (type 1) (result i64)
    (local i32 i64 i64)
    global.get 0
    i64.const 8
    i64.sub
    global.set 0
    i64.const 1
    local.set 1
    global.get 0
    i32.wrap_i64
    local.get 1
    i64.store
    i64.const 0
    global.get 0
    i64.add
    call $various_mem_opts_1.use_^uint_
    block  ;; label = @1
      block  ;; label = @2
        global.get 1
        i64.const 0
        local.set 2
        i32.wrap_i64
        i32.load8_u
        local.set 0
        local.get 0
        br_if 0 (;@2;)
        global.get 0
        i32.wrap_i64
        local.get 2
        i64.store
        br 1 (;@1;)
      end
      global.get 0
      i32.wrap_i64
      local.get 2
      i64.store
    end
    global.get 0
    i32.wrap_i64
    i64.load
    i64.const 8
    global.get 0
    i64.add
    global.set 0
    return
    unreachable)
  (func $various_mem_opts_1.duplicate_store (type 2) (result i64)
    (local i64 i64 i64)
    global.get 0
    i64.const 8
    i64.sub
    global.set 0
    i64.const 1
    local.set 1
    global.get 0
    i32.wrap_i64
    local.get 1
    i64.store
    i64.const 0
    global.get 0
    i64.add
    local.set 0
    local.get 0
    call $various_mem_opts_1.use_^uint_
    i64.const 0
    local.set 2
    global.get 0
    i32.wrap_i64
    local.get 2
    i64.store
    global.get 0
    i32.wrap_i64
    local.get 2
    i64.store
    local.get 0
    call $various_mem_opts_1.use_^uint_
    global.get 0
    i32.wrap_i64
    i64.load
    i64.const 8
    global.get 0
    i64.add
    global.set 0
    return
    unreachable)
  (func $various_mem_opts_1.combine_pull_out_duplicate (type 3) (result i64)
    (local i32 i64 i64 i64)
    global.get 0
    i64.const 8
    i64.sub
    global.set 0
    i64.const 1
    local.set 2
    global.get 0
    i32.wrap_i64
    local.get 2
    i64.store
    i64.const 0
    global.get 0
    i64.add
    local.set 1
    local.get 1
    call $various_mem_opts_1.use_^uint_
    block  ;; label = @1
      block  ;; label = @2
        global.get 1
        i64.const 0
        local.set 3
        i32.wrap_i64
        i32.load8_u
        local.set 0
        local.get 0
        br_if 0 (;@2;)
        global.get 0
        i32.wrap_i64
        local.get 3
        i64.store
        br 1 (;@1;)
      end
      global.get 0
      i32.wrap_i64
      local.get 3
      i64.store
    end
    global.get 0
    i32.wrap_i64
    local.get 3
    i64.store
    local.get 1
    call $various_mem_opts_1.use_^uint_
    global.get 0
    i32.wrap_i64
    i64.load
    i64.const 8
    global.get 0
    i64.add
    global.set 0
    return
    unreachable)
  (func $various_mem_opts_1.parallel_stores (type 4) (result i64)
    (local i32 i64 i64 i64)
    global.get 0
    i64.const 16
    i64.sub
    global.set 0
    i64.const 0
    local.set 1
    global.get 0
    i32.wrap_i64
    local.get 1
    i64.store
    global.get 0
    i32.wrap_i64
    local.get 1
    i64.store offset=8
    i64.const 0
    global.get 0
    i64.add
    call $various_mem_opts_1.use_^uint_
    i64.const 8
    global.get 0
    i64.add
    call $various_mem_opts_1.use_^uint_
    block  ;; label = @1
      block  ;; label = @2
        global.get 1
        i64.const 1
        local.set 2
        i32.wrap_i64
        i32.load8_u
        local.set 0
        local.get 0
        br_if 0 (;@2;)
        global.get 0
        i32.wrap_i64
        local.get 2
        i64.store offset=8
        global.get 0
        i32.wrap_i64
        local.get 2
        i64.store
        br 1 (;@1;)
      end
      global.get 0
      i32.wrap_i64
      local.get 2
      i64.store
      global.get 0
      i32.wrap_i64
      local.get 2
      i64.store offset=8
    end
    global.get 0
    i32.wrap_i64
    i64.load
    global.get 0
    i32.wrap_i64
    i64.load offset=8
    i64.sub
    local.set 3
    i64.const 16
    global.get 0
    i64.add
    global.set 0
    local.get 3
    return
    unreachable)
  (func $various_mem_opts_1.use_^uint_ (type 5) (param i64)
    global.get 0
    i64.const 8
    i64.sub
    global.set 0
    global.get 0
    i32.wrap_i64
    local.get 0
    i64.store
    i64.const 8
    global.get 0
    i64.add
    global.set 0
    return
    unreachable)
  (table (;0;) 0 funcref)
  (memory (;0;) 4)
  (global (;0;) (mut i64) (i64.const 131072))
  (global (;1;) i64 (i64.const 131072))
  (export "__stack_pointer" (global 0))
  (export "memory" (memory 0))
  (export "main" (func $main))
  (elem (;0;) (i32.const 0) func)
  (data (;0;) (i32.const 131072) "\01"))