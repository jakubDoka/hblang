(module
  (type (;0;) (func (result i64)))
  (func $main (type 0) (result i64)
    (local i32 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64)
    global.get 0
    i64.const 112
    i64.sub
    global.set 0
    i64.const 0
    local.set 6
    global.get 0
    i32.wrap_i64
    local.get 6
    i64.store offset=104
    i64.const 1
    local.set 5
    i64.const 3
    local.set 4
    i64.const 8
    global.get 0
    i64.add
    local.set 3
    i64.const 24
    local.set 2
    i64.const 8
    local.set 1
    loop  ;; label = @1
      block  ;; label = @2
        global.get 0
        i32.wrap_i64
        i64.load offset=104
        local.get 4
        i64.eq
        local.set 0
        local.get 0
        br_if 0 (;@2;)
        global.get 0
        i32.wrap_i64
        local.get 6
        i64.store
        loop  ;; label = @3
          block  ;; label = @4
            global.get 0
            i32.wrap_i64
            i64.load offset=104
            local.set 8
            global.get 0
            i32.wrap_i64
            i64.load
            local.set 7
            local.get 7
            local.get 4
            i64.eq
            br_if 0 (;@4;)
            local.get 8
            local.get 2
            i64.mul
            local.get 3
            i64.add
            local.set 13
            local.get 7
            local.get 1
            i64.mul
            local.set 12
            local.get 13
            local.get 12
            i64.add
            local.get 8
            local.get 7
            i64.mul
            local.set 11
            i32.wrap_i64
            local.get 11
            i64.store
            global.get 0
            i32.wrap_i64
            i64.load
            local.set 10
            local.get 5
            local.get 10
            i64.add
            local.set 9
            global.get 0
            i32.wrap_i64
            local.get 9
            i64.store
            br 1 (;@3;)
          end
          local.get 8
          local.get 5
          i64.add
          local.set 14
          global.get 0
          i32.wrap_i64
          local.get 14
          i64.store offset=104
          br 2 (;@1;)
        end
      end
      global.get 0
      i32.wrap_i64
      local.get 3
      i64.store offset=96
      global.get 0
      i32.wrap_i64
      local.get 6
      i64.store offset=88
      global.get 0
      i32.wrap_i64
      local.get 6
      i64.store offset=80
      i64.const 9
      local.set 15
      loop  ;; label = @2
        block  ;; label = @3
          global.get 0
          i32.wrap_i64
          i64.load offset=88
          local.set 17
          global.get 0
          i32.wrap_i64
          i64.load offset=80
          local.set 16
          local.get 16
          local.get 15
          i64.eq
          br_if 0 (;@3;)
          local.get 16
          local.get 1
          i64.mul
          global.get 0
          i32.wrap_i64
          i64.load offset=96
          i64.add
          local.set 22
          local.get 22
          i32.wrap_i64
          i64.load
          local.set 21
          local.get 17
          local.get 21
          i64.add
          local.set 20
          global.get 0
          i32.wrap_i64
          local.get 20
          i64.store offset=88
          global.get 0
          i32.wrap_i64
          i64.load offset=80
          local.set 19
          local.get 5
          local.get 19
          i64.add
          local.set 18
          global.get 0
          i32.wrap_i64
          local.get 18
          i64.store offset=80
          br 1 (;@2;)
        end
        i64.const 112
        global.get 0
        i64.add
        global.set 0
        local.get 17
        return
      end
    end
    unreachable)
  (table (;0;) 0 funcref)
  (memory (;0;) 3)
  (global (;0;) (mut i64) (i64.const 131072))
  (export "__stack_pointer" (global 0))
  (export "main" (func $main))
  (elem (;0;) (i32.const 0) func)
  (data (;0;) (i32.const 131072) ""))