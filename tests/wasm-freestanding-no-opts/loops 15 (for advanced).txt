(module
  (type (;0;) (func (result i64)))
  (func $main (type 0) (result i64)
    (local i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64)
    global.get 0
    i64.const 96
    i64.sub
    global.set 0
    i64.const 1
    local.set 7
    global.get 0
    i32.wrap_i64
    local.get 7
    i64.store offset=72
    i64.const 0
    global.get 0
    i64.add
    local.set 6
    global.get 0
    i32.wrap_i64
    local.get 6
    i64.store offset=48
    i64.const 8
    local.set 5
    i64.const 4
    local.set 4
    global.get 0
    i32.wrap_i64
    local.get 4
    i64.store offset=56
    global.get 0
    i32.wrap_i64
    i64.load offset=48
    local.set 3
    global.get 0
    i32.wrap_i64
    local.get 3
    i64.store offset=80
    global.get 0
    i32.wrap_i64
    i64.load offset=56
    local.set 2
    local.get 5
    local.get 2
    i64.mul
    local.set 1
    local.get 3
    local.get 1
    i64.add
    local.set 0
    loop  ;; label = @1
      block  ;; label = @2
        global.get 0
        i32.wrap_i64
        i64.load offset=80
        local.set 8
        local.get 8
        local.get 0
        i64.lt_u
        i32.eqz
        br_if 0 (;@2;)
        global.get 0
        i32.wrap_i64
        i64.load offset=72
        local.set 13
        local.get 8
        i32.wrap_i64
        local.get 13
        i64.store
        global.get 0
        i32.wrap_i64
        i64.load offset=72
        local.set 12
        local.get 7
        local.get 12
        i64.add
        local.set 11
        global.get 0
        i32.wrap_i64
        local.get 11
        i64.store offset=72
        global.get 0
        i32.wrap_i64
        i64.load offset=80
        local.set 10
        local.get 5
        local.get 10
        i64.add
        local.set 9
        global.get 0
        i32.wrap_i64
        local.get 9
        i64.store offset=80
        br 1 (;@1;)
      end
      i64.const 0
      local.set 18
      global.get 0
      i32.wrap_i64
      local.get 18
      i64.store offset=88
      global.get 0
      i32.wrap_i64
      local.get 6
      i64.store offset=32
      global.get 0
      i32.wrap_i64
      local.get 4
      i64.store offset=40
      global.get 0
      i32.wrap_i64
      i64.load offset=32
      local.set 17
      global.get 0
      i32.wrap_i64
      local.get 17
      i64.store offset=64
      global.get 0
      i32.wrap_i64
      i64.load offset=40
      local.set 16
      local.get 5
      local.get 16
      i64.mul
      local.set 15
      local.get 17
      local.get 15
      i64.add
      local.set 14
      loop  ;; label = @2
        block  ;; label = @3
          global.get 0
          i32.wrap_i64
          i64.load offset=88
          local.set 20
          global.get 0
          i32.wrap_i64
          i64.load offset=64
          local.set 19
          local.get 19
          local.get 14
          i64.lt_u
          i32.eqz
          br_if 0 (;@3;)
          local.get 19
          i32.wrap_i64
          i64.load
          local.get 20
          i64.add
          local.set 22
          global.get 0
          i32.wrap_i64
          local.get 22
          i64.store offset=88
          global.get 0
          i32.wrap_i64
          i64.load offset=64
          local.get 5
          i64.add
          local.set 21
          global.get 0
          i32.wrap_i64
          local.get 21
          i64.store offset=64
          br 1 (;@2;)
        end
        i64.const 96
        global.get 0
        i64.add
        global.set 0
        local.get 20
        return
      end
    end
    unreachable)
  (table (;0;) 0 funcref)
  (memory (;0;) 3)
  (global (;0;) (mut i64) (i64.const 131072))
  (export "__stack_pointer" (global 0))
  (export "main" (func $main))
  (elem (;0;) (i32.const 0) func)
  (data (;0;) (i32.const 131072) ""))