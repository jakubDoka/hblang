(module
  (type (;0;) (func (result i64)))
  (type (;1;) (func (param i64 i64 i64) (result i64)))
  (func $main (type 0) (result i64)
    (local i64 i64 i64 i64 i64)
    global.get 0
    i64.const 40
    i64.sub
    global.set 0
    i64.const 1
    local.set 2
    i64.const 0
    local.set 1
    global.get 0
    i32.wrap_i64
    local.get 2
    i64.store offset=16
    global.get 0
    i32.wrap_i64
    local.get 1
    i64.store offset=24
    i64.const 16
    global.get 0
    i64.add
    local.set 0
    global.get 0
    i32.wrap_i64
    local.get 0
    i64.store
    global.get 0
    i32.wrap_i64
    local.get 2
    i64.store offset=8
    i64.const 0
    global.get 0
    i64.add
    local.get 2
    local.get 1
    call $mem2reg_crash_2.insert
    local.set 4
    global.get 0
    i32.wrap_i64
    local.get 4
    i64.store offset=32
    global.get 0
    i32.wrap_i64
    i64.load offset=32
    i32.wrap_i64
    i64.load
    local.set 3
    i64.const 40
    global.get 0
    i64.add
    global.set 0
    local.get 3
    return
    unreachable)
  (func $mem2reg_crash_2.insert (type 1) (param i64 i64 i64) (result i64)
    (local i32 i32 i64 i64 i64 i64 i64 i64 i64)
    global.get 0
    i64.const 48
    i64.sub
    global.set 0
    global.get 0
    i32.wrap_i64
    local.get 0
    i64.store
    global.get 0
    i32.wrap_i64
    local.get 1
    i64.store offset=8
    global.get 0
    i32.wrap_i64
    local.get 2
    i64.store offset=16
    i64.const 8
    local.set 7
    i64.const 0
    local.set 6
    global.get 0
    i32.wrap_i64
    local.get 6
    i64.store offset=24
    i64.const 1
    local.set 5
    loop  ;; label = @1
      global.get 0
      i32.wrap_i64
      local.get 6
      i64.store offset=32
      loop  ;; label = @2
        block  ;; label = @3
          global.get 0
          i32.wrap_i64
          i64.load offset=32
          local.get 7
          i64.ge_u
          local.set 3
          local.get 3
          i32.eqz
          br_if 0 (;@3;)
          block  ;; label = @4
          end
          global.get 0
          i32.wrap_i64
          i64.load offset=24
          local.get 5
          i64.add
          local.set 8
          global.get 0
          i32.wrap_i64
          local.get 8
          i64.store offset=24
          br 2 (;@1;)
        end
        block  ;; label = @3
          global.get 0
          i32.wrap_i64
          i64.load
          i32.wrap_i64
          i64.load
          local.set 10
          global.get 0
          i32.wrap_i64
          local.get 10
          i64.store offset=40
          global.get 0
          i32.wrap_i64
          i64.load offset=8
          global.get 0
          i32.wrap_i64
          i64.load offset=40
          local.set 9
          local.get 9
          i32.wrap_i64
          i64.load
          i64.eq
          local.set 4
          local.get 4
          i32.eqz
          br_if 0 (;@3;)
          local.get 9
          local.get 7
          i64.add
          i64.const 48
          global.get 0
          i64.add
          global.set 0
          return
        end
        global.get 0
        i32.wrap_i64
        i64.load offset=32
        local.get 5
        i64.add
        local.set 11
        global.get 0
        i32.wrap_i64
        local.get 11
        i64.store offset=32
        br 0 (;@2;)
      end
    end
    unreachable)
  (table (;0;) 0 funcref)
  (memory (;0;) 3)
  (global (;0;) (mut i64) (i64.const 131072))
  (export "__stack_pointer" (global 0))
  (export "main" (func $main))
  (elem (;0;) (i32.const 0) func)
  (data (;0;) (i32.const 131072) ""))