(module
  (type (;0;) (func (result i64)))
  (type (;1;) (func (param i64 i64 i64) (result i64)))
  (func $main (type 0) (result i64)
    (local i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64)
    global.get 0
    i64.const 40
    i64.sub
    global.set 0
    i64.const 16
    global.get 0
    i64.add
    local.set 0
    i64.const 1
    local.set 1
    i64.const 8
    local.set 2
    i64.const 0
    local.set 3
    i64.const 0
    global.get 0
    i64.add
    local.set 4
    local.get 0
    i32.wrap_i64
    local.get 1
    i64.store
    local.get 0
    local.get 2
    i64.add
    local.set 5
    local.get 5
    i32.wrap_i64
    local.get 3
    i64.store
    local.get 4
    i32.wrap_i64
    local.get 0
    i64.store
    local.get 4
    local.get 2
    i64.add
    local.set 6
    local.get 6
    i32.wrap_i64
    local.get 1
    i64.store
    local.get 4
    local.get 1
    local.get 3
    call $mem2reg_crash_2.insert
    local.set 7
    i64.const 32
    global.get 0
    i64.add
    local.set 8
    local.get 8
    i32.wrap_i64
    local.get 7
    i64.store
    local.get 8
    i32.wrap_i64
    i64.load
    local.set 9
    local.get 9
    i32.wrap_i64
    i64.load
    local.set 10
    i64.const 40
    global.get 0
    i64.add
    global.set 0
    local.get 10
    return
    unreachable)
  (func $mem2reg_crash_2.insert (type 1) (param i64 i64 i64) (result i64)
    (local i32 i32 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64)
    global.get 0
    i64.const 48
    i64.sub
    global.set 0
    i64.const 16
    global.get 0
    i64.add
    local.set 5
    i64.const 0
    global.get 0
    i64.add
    local.set 6
    local.get 6
    i32.wrap_i64
    local.get 0
    i64.store
    i64.const 24
    global.get 0
    i64.add
    local.set 7
    i64.const 0
    local.set 8
    i64.const 1
    local.set 9
    i64.const 32
    global.get 0
    i64.add
    local.set 10
    i64.const 40
    global.get 0
    i64.add
    local.set 11
    i64.const 8
    local.set 12
    i64.const 8
    global.get 0
    i64.add
    local.set 13
    local.get 13
    i32.wrap_i64
    local.get 1
    i64.store
    local.get 5
    i32.wrap_i64
    local.get 2
    i64.store
    local.get 7
    i32.wrap_i64
    local.get 8
    i64.store
    loop  ;; label = @1
      local.get 10
      i32.wrap_i64
      local.get 8
      i64.store
      loop  ;; label = @2
        block  ;; label = @3
          local.get 10
          i32.wrap_i64
          i64.load
          local.set 14
          local.get 14
          local.get 12
          i64.ge_u
          local.set 3
          local.get 3
          i32.eqz
          br_if 0 (;@3;)
          block  ;; label = @4
          end
          local.get 7
          i32.wrap_i64
          i64.load
          local.set 15
          local.get 15
          local.get 9
          i64.add
          local.set 16
          local.get 7
          i32.wrap_i64
          local.get 16
          i64.store
          br 2 (;@1;)
        end
        block  ;; label = @3
          local.get 6
          i32.wrap_i64
          i64.load
          local.set 17
          local.get 17
          i32.wrap_i64
          i64.load
          local.set 18
          local.get 11
          i32.wrap_i64
          local.get 18
          i64.store
          local.get 13
          i32.wrap_i64
          i64.load
          local.set 19
          local.get 11
          i32.wrap_i64
          i64.load
          local.set 20
          local.get 20
          i32.wrap_i64
          i64.load
          local.set 21
          local.get 21
          local.get 19
          i64.eq
          local.set 4
          local.get 4
          i32.eqz
          br_if 0 (;@3;)
          local.get 20
          local.get 12
          i64.add
          i64.const 48
          global.get 0
          i64.add
          global.set 0
          return
        end
        local.get 10
        i32.wrap_i64
        i64.load
        local.set 22
        local.get 22
        local.get 9
        i64.add
        local.set 23
        local.get 10
        i32.wrap_i64
        local.get 23
        i64.store
        br 0 (;@2;)
      end
    end
    unreachable)
  (table (;0;) 0 funcref)
  (memory (;0;) 3)
  (global (;0;) (mut i64) (i64.const 131072))
  (export "__stack_pointer" (global 0))
  (export "main" (func $main))
  (elem (;0;) (i32.const 0) func)
  (data (;0;) (i32.const 131072) ""))