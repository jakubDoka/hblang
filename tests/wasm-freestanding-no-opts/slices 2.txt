(module
  (type (;0;) (func (result i64)))
  (func $main (type 0) (result i64)
    (local i32 i32 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64)
    global.get 0
    i64.const 136
    i64.sub
    global.set 0
    i64.const 64
    global.get 0
    i64.add
    local.set 24
    i64.const 96
    global.get 0
    i64.add
    local.set 23
    i64.const 2
    local.set 22
    i64.const 3
    local.set 21
    i64.const 1
    local.set 20
    local.get 24
    i32.wrap_i64
    local.get 20
    i64.store
    local.get 24
    i32.wrap_i64
    local.get 22
    i64.store offset=8
    local.get 24
    i32.wrap_i64
    local.get 21
    i64.store offset=16
    i64.const 8
    local.set 19
    i64.const 112
    global.get 0
    i64.add
    local.set 18
    i64.const 0
    local.set 17
    i64.const 120
    global.get 0
    i64.add
    local.set 16
    i64.const 128
    global.get 0
    i64.add
    local.set 15
    i64.const 16
    local.set 14
    i64.const 4
    local.set 13
    local.get 24
    i32.wrap_i64
    local.get 13
    i64.store offset=24
    local.get 23
    i32.wrap_i64
    local.get 24
    i64.store
    local.get 23
    i32.wrap_i64
    local.get 13
    i64.store offset=8
    i64.const 0
    global.get 0
    i64.add
    local.set 12
    local.get 12
    i32.wrap_i64
    local.get 24
    i64.store
    local.get 12
    i32.wrap_i64
    local.get 13
    i64.store offset=8
    local.get 24
    i32.wrap_i64
    i64.load offset=8
    local.set 11
    local.get 12
    i32.wrap_i64
    local.get 24
    i64.store offset=16
    local.get 12
    i32.wrap_i64
    local.get 11
    i64.store offset=24
    local.get 24
    i32.wrap_i64
    i64.load offset=8
    local.set 10
    local.get 10
    local.get 19
    i64.mul
    local.set 9
    local.get 24
    local.get 9
    i64.add
    local.set 8
    local.get 12
    i32.wrap_i64
    local.get 8
    i64.store offset=32
    local.get 13
    local.get 10
    i64.sub
    local.set 7
    local.get 12
    i32.wrap_i64
    local.get 7
    i64.store offset=40
    local.get 24
    i32.wrap_i64
    i64.load offset=16
    local.set 6
    local.get 24
    i32.wrap_i64
    i64.load
    local.set 5
    local.get 5
    local.get 19
    i64.mul
    local.set 4
    local.get 24
    local.get 4
    i64.add
    local.set 3
    local.get 12
    i32.wrap_i64
    local.get 3
    i64.store offset=48
    local.get 6
    local.get 5
    i64.sub
    local.set 2
    local.get 12
    i32.wrap_i64
    local.get 2
    i64.store offset=56
    local.get 18
    i32.wrap_i64
    local.get 17
    i64.store
    local.get 16
    i32.wrap_i64
    local.get 17
    i64.store
    loop  ;; label = @1
      block  ;; label = @2
        local.get 16
        i32.wrap_i64
        i64.load
        local.set 25
        local.get 25
        local.get 13
        i64.eq
        local.set 0
        local.get 0
        i32.eqz
        br_if 0 (;@2;)
        local.get 18
        i32.wrap_i64
        i64.load
        i64.const 136
        global.get 0
        i64.add
        global.set 0
        return
      end
      local.get 15
      i32.wrap_i64
      local.get 17
      i64.store
      loop  ;; label = @2
        block  ;; label = @3
          local.get 16
          i32.wrap_i64
          i64.load
          local.set 30
          local.get 30
          local.get 14
          i64.mul
          local.set 29
          local.get 12
          local.get 29
          i64.add
          local.set 28
          local.get 28
          i32.wrap_i64
          i64.load offset=8
          local.set 27
          local.get 15
          i32.wrap_i64
          i64.load
          local.set 26
          local.get 26
          local.get 27
          i64.eq
          local.set 1
          local.get 1
          i32.eqz
          br_if 0 (;@3;)
          local.get 30
          local.get 20
          i64.add
          local.set 31
          local.get 16
          i32.wrap_i64
          local.get 31
          i64.store
          br 2 (;@1;)
        end
        local.get 26
        local.get 19
        i64.mul
        local.set 39
        local.get 28
        i32.wrap_i64
        i64.load
        local.set 38
        local.get 38
        local.get 39
        i64.add
        local.set 37
        local.get 37
        i32.wrap_i64
        i64.load
        local.set 36
        local.get 18
        i32.wrap_i64
        i64.load
        local.set 35
        local.get 35
        local.get 36
        i64.add
        local.set 34
        local.get 18
        i32.wrap_i64
        local.get 34
        i64.store
        local.get 15
        i32.wrap_i64
        i64.load
        local.set 33
        local.get 33
        local.get 20
        i64.add
        local.set 32
        local.get 15
        i32.wrap_i64
        local.get 32
        i64.store
        br 0 (;@2;)
      end
    end
    unreachable)
  (table (;0;) 0 funcref)
  (memory (;0;) 3)
  (global (;0;) (mut i64) (i64.const 131072))
  (export "__stack_pointer" (global 0))
  (export "main" (func $main))
  (elem (;0;) (i32.const 0) func)
  (data (;0;) (i32.const 131072) ""))