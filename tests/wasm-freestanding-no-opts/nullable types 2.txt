(module
  (type (;0;) (func (result i64)))
  (type (;1;) (func (param i64)))
  (func $main (type 0) (result i64)
    (local i32 i32 i32 i32 i32 i32 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64)
    global.get 0
    i64.const 88
    i64.sub
    global.set 0
    block  ;; label = @1
      block  ;; label = @2
        block  ;; label = @3
          block  ;; label = @4
            block  ;; label = @5
              block  ;; label = @6
                block  ;; label = @7
                  block  ;; label = @8
                    i32.const 1
                    local.set 2
                    global.get 0
                    i32.wrap_i64
                    local.get 2
                    i32.store8 offset=16
                    global.get 1
                    local.set 8
                    i32.const 0
                    local.set 1
                    i64.const 1
                    local.set 7
                    i64.const 0
                    local.set 6
                    global.get 0
                    i32.wrap_i64
                    local.get 6
                    i64.store offset=24
                    global.get 0
                    i32.wrap_i64
                    local.get 6
                    i64.store offset=32
                    global.get 0
                    i32.wrap_i64
                    local.get 2
                    i32.store8 offset=40
                    global.get 0
                    i32.wrap_i64
                    local.get 6
                    i64.store offset=48
                    global.get 0
                    i32.wrap_i64
                    local.get 6
                    i64.store offset=56
                    global.get 0
                    i32.wrap_i64
                    local.get 2
                    i32.store8 offset=64
                    global.get 0
                    i32.wrap_i64
                    local.get 6
                    i64.store offset=72
                    global.get 0
                    i32.wrap_i64
                    local.get 6
                    i64.store offset=80
                    global.get 0
                    i32.wrap_i64
                    local.get 8
                    i64.store
                    global.get 0
                    i32.wrap_i64
                    local.get 6
                    i64.store offset=8
                    global.get 0
                    i32.wrap_i64
                    i32.load8_u offset=16
                    i32.const 255
                    i32.and
                    local.set 0
                    local.get 1
                    local.get 0
                    i32.eq
                    i32.eqz
                    br_if 0 (;@8;)
                    local.get 7
                    local.set 10
                    br 1 (;@7;)
                  end
                  global.get 0
                  i32.wrap_i64
                  i32.load8_u offset=40
                  i32.const 255
                  i32.and
                  local.set 3
                  local.get 3
                  local.get 1
                  i32.eq
                  i32.eqz
                  br_if 1 (;@6;)
                  i64.const 2
                  local.set 9
                  local.get 9
                  local.set 10
                end
                local.get 10
                local.set 12
                br 1 (;@5;)
              end
              global.get 0
              i32.wrap_i64
              i32.load8_u offset=64
              i32.const 255
              i32.and
              local.set 4
              local.get 4
              local.get 1
              i32.eq
              i32.eqz
              br_if 1 (;@4;)
              i64.const 3
              local.set 11
              local.get 11
              local.set 12
            end
            local.get 12
            local.set 14
            br 1 (;@3;)
          end
          global.get 0
          i32.wrap_i64
          i64.load
          local.get 6
          i64.eq
          local.set 5
          local.get 5
          i32.eqz
          br_if 1 (;@2;)
          i64.const 4
          local.set 13
          local.get 13
          local.set 14
        end
        local.get 14
        local.set 17
        br 1 (;@1;)
      end
      global.get 0
      i32.wrap_i64
      local.get 7
      i64.store offset=32
      i64.const 16
      global.get 0
      i64.add
      i64.const 8
      i64.add
      local.set 15
      local.get 15
      call $nullable_types_2.take
      global.get 0
      i32.wrap_i64
      i64.load offset=24
      global.get 0
      i32.wrap_i64
      i64.load offset=32
      i64.sub
      local.set 16
      local.get 16
      local.set 17
    end
    i64.const 88
    global.get 0
    i64.add
    global.set 0
    local.get 17
    return
    unreachable)
  (func $nullable_types_2.take (type 1) (param i64)
    (local i64 i64)
    global.get 0
    i64.const 8
    i64.sub
    global.set 0
    global.get 0
    i32.wrap_i64
    local.get 0
    i64.store
    i64.const 1
    global.get 0
    i32.wrap_i64
    i64.load
    local.set 2
    local.get 2
    i32.wrap_i64
    i64.load
    i64.add
    local.set 1
    local.get 2
    i32.wrap_i64
    local.get 1
    i64.store
    i64.const 8
    global.get 0
    i64.add
    global.set 0
    return
    unreachable)
  (table (;0;) 0 funcref)
  (memory (;0;) 3)
  (global (;0;) (mut i64) (i64.const 131072))
  (global (;1;) i64 (i64.const 131072))
  (export "__stack_pointer" (global 0))
  (export "main" (func $main))
  (elem (;0;) (i32.const 0) func)
  (data (;0;) (i32.const 131072) ""))