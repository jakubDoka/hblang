(module
  (type (;0;) (func (result i64)))
  (type (;1;) (func (param i64 i64) (result i64 i64)))
  (func $main (type 0) (result i64)
    (local i32 i64 i64)
    global.get 0
    i64.const 72
    i64.sub
    global.set 0
    global.get 0
    i32.wrap_i64
    i32.const 1
    i32.store8 offset=64
    global.get 0
    i32.wrap_i64
    i32.const 2
    i32.store8 offset=65
    global.get 0
    i32.wrap_i64
    i32.const 3
    i32.store8 offset=66
    global.get 0
    i32.wrap_i64
    i64.const 1
    i64.store
    global.get 0
    i32.wrap_i64
    i64.const 0
    i64.store offset=8
    global.get 0
    i32.wrap_i64
    i64.load
    global.get 0
    i32.wrap_i64
    i64.load offset=8
    call $slices_3.reverse
    local.set 1
    local.set 2
    global.get 0
    i32.wrap_i64
    local.get 2
    i64.store offset=16
    global.get 0
    i32.wrap_i64
    local.get 1
    i64.store offset=24
    global.get 0
    i32.wrap_i64
    i64.const 64
    global.get 0
    i64.add
    i64.store offset=32
    global.get 0
    i32.wrap_i64
    i64.const 3
    i64.store offset=40
    global.get 0
    i32.wrap_i64
    i64.load offset=40
    local.set 1
    global.get 0
    i32.wrap_i64
    i64.load offset=32
    local.get 1
    call $slices_3.reverse
    local.set 1
    local.set 2
    global.get 0
    i32.wrap_i64
    local.get 2
    i64.store offset=48
    global.get 0
    i32.wrap_i64
    local.get 1
    i64.store offset=56
    global.get 0
    i32.wrap_i64
    i64.load8_u offset=64
    global.get 0
    i32.wrap_i64
    i64.load8_u offset=65
    i64.sub
    global.get 0
    i32.wrap_i64
    i64.load8_u offset=66
    i64.sub
    i64.const 72
    global.get 0
    i64.add
    global.set 0
    return
    unreachable)
  (func $slices_3.reverse (type 1) (param i64 i64) (result i64 i64)
    (local i32 i64)
    global.get 0
    i64.const 40
    i64.sub
    global.set 0
    block  ;; label = @1
      block  ;; label = @2
        global.get 0
        i32.wrap_i64
        local.get 0
        i64.store
        global.get 0
        i32.wrap_i64
        local.get 1
        i64.store offset=8
        global.get 0
        i32.wrap_i64
        i64.load offset=8
        local.tee 1
        i64.eqz
        br_if 0 (;@2;)
        global.get 0
        i32.wrap_i64
        local.get 1
        i64.const 1
        i64.sub
        i64.store offset=16
        global.get 0
        i32.wrap_i64
        i64.const 0
        i64.store offset=24
        global.get 0
        i32.wrap_i64
        i32.const 0
        i32.store8 offset=32
        loop  ;; label = @3
          block  ;; label = @4
            global.get 0
            i32.wrap_i64
            i64.load offset=16
            local.set 3
            global.get 0
            i32.wrap_i64
            i64.load
            local.set 0
            global.get 0
            i32.wrap_i64
            i64.load offset=24
            local.tee 1
            local.get 3
            i64.lt_u
            br_if 0 (;@4;)
            global.get 0
            i32.wrap_i64
            i64.load offset=8
            local.set 1
            br 3 (;@1;)
          end
          global.get 0
          i32.wrap_i64
          local.get 0
          local.get 1
          i64.add
          i32.wrap_i64
          i32.load8_u
          i32.store8 offset=32
          global.get 0
          i32.wrap_i64
          i64.load
          local.tee 0
          global.get 0
          i32.wrap_i64
          i64.load offset=24
          i64.add
          i32.wrap_i64
          local.get 0
          global.get 0
          i32.wrap_i64
          i64.load offset=16
          i64.add
          i32.wrap_i64
          i32.load8_u
          i32.store8
          global.get 0
          i32.wrap_i64
          i64.load
          global.get 0
          i32.wrap_i64
          i64.load offset=16
          i64.add
          i32.wrap_i64
          global.get 0
          i32.wrap_i64
          i32.load8_u offset=32
          i32.store8
          global.get 0
          i32.wrap_i64
          i64.const 1
          global.get 0
          i32.wrap_i64
          i64.load offset=24
          i64.add
          i64.store offset=24
          global.get 0
          i32.wrap_i64
          global.get 0
          i32.wrap_i64
          i64.load offset=16
          i64.const 1
          i64.sub
          i64.store offset=16
          br 0 (;@3;)
        end
      end
      global.get 0
      i32.wrap_i64
      i64.load
      local.set 0
    end
    local.get 0
    local.get 1
    i64.const 40
    global.get 0
    i64.add
    global.set 0
    return
    unreachable)
  (table (;0;) 0 funcref)
  (memory (;0;) 3)
  (global (;0;) (mut i64) (i64.const 131072))
  (export "__stack_pointer" (global 0))
  (export "memory" (memory 0))
  (export "main" (func $main))
  (elem (;0;) (i32.const 0) func)
  (data (;0;) (i32.const 131072) ""))