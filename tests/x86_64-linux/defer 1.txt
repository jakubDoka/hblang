defer 1.main.ret_defer:
	mov rax, [rdi]
	add rax, 0x01
	mov [rdi], rax
	ret
main:
	push rbx
	sub rsp, 0x08
	mov rdx, 0x01
	mov rbx, 0x04
6:	cmp rdx, 0x03
	setz cl
	movzx rcx, cl
	mov rax, rdx
	add rax, 0x01
	test cl, cl
	jz :0
	jmp :2
0:	cmp rdx, rbx
	jnz :2
	cmp rax, 0x05
	setnz al
	movzx rax, al
	test al, al
	jz :2
	mov rax, 0x03
	jmp :3
2:	lea rdi, [rsp]
	mov qword ptr [rsp], 0x00
	call :defer 1.main.ret_defer
	mov rax, [rsp]
	cmp rax, 0x01
	setnz al
	movzx rax, al
	test al, al
	jz :4
	mov rax, rbx
3:	jmp :5
4:	mov rax, 0x00
5:	add rsp, 0x08
	pop rbx
	ret
2:	mov rdx, rax
	jmp :6