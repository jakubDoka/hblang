defer 1.main.ret_defer:
	mov rax, [rdi]
	inc rax
	mov [rdi], rax
	ret
main:
	sub rsp, 0x08
	mov rax, 0x01
7:	cmp rax, 0x03
	setz cl
	movzx rcx, cl
	mov rdx, rax
	inc rdx
	test cl, cl
	jz :0
	mov rax, rdx
	jmp :1
0:	mov rcx, 0x04
	cmp rax, rcx
	jnz :2
	cmp rdx, 0x05
	setnz al
	movzx rax, al
	test al, al
	jz :3
	mov rax, 0x03
	jmp :4
3:	mov qword ptr [rsp], 0x00
	lea rdi, [rsp]
	call :defer 1.main.ret_defer
	mov rax, [rsp]
	cmp rax, 0x01
	setnz al
	movzx rax, al
	test al, al
	jz :5
	mov rax, 0x04
4:	jmp :6
5:	xor rax, rax
6:	add rsp, 0x08
	ret
2:	mov rax, rdx
1:	jmp :7