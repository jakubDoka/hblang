main:
	push rbx
	push rbp
	push r12
	sub rsp, 0x80
	lea rbx, [rsp+0x70]
	mov rbp, 0x00
	mov [rbx], bpl
	mov [rbx+0x01], bpl
	mov [rbx+0x02], bpl
	mov [rbx+0x03], bpl
	lea rax, [rsp+0x74]
	mov rcx, 0x01
	mov [rax], cl
	mov [rax+0x01], cl
	mov [rax+0x02], cl
	mov [rax+0x03], cl
	mov r12, 0x04
	mov rdi, rbx
	mov rsi, rax
	mov rdx, r12
	call :memcpy
	mov rax, 0x04
	mov cl, [rbx+0x02]
	mov dl, [rbx+0x01]
	mov sil, [rbx]
	add rcx, rdx
	mov dl, [rbx+0x03]
	add rcx, rsi
	add rcx, rdx
	cmp cl, al
	setnz cl
	movzx rcx, cl
	test cl, cl
	jz :0
	mov rax, 0x3E9
	jmp :1
0:	test bpl, bpl
	jz :2
	mov rax, 0x3EA
1:	jmp :3
2:	test bpl, bpl
	jz :4
	mov rax, 0x3EB
3:	jmp :5
4:	lea rbx, [rsp+0x40]
	mov rax, 0x01
	lea rcx, [rsp+0x60]
	mov [rcx], rax
	mov rax, 0x02
	mov [rcx+0x08], rax
	lea rbp, [rsp+0x20]
	mov [rbp], r12
	mov rdx, 0x06
	mov [rbp+0x08], rdx
	mov [rbp+0x10], rax
	mov [rbp+0x18], rax
	mov rax, 0xFFFFFFFFFFFFFFFD
	mov [rbx], rax
	mov rax, 0xFFFFFFFFFFFFFFFC
	mov [rbx+0x08], rax
	mov rax, rbx
	add rax, 0x10
	mov rdx, 0x10
	mov rdi, rax
	mov rsi, rcx
	call :memcpy
	mov rax, [rbx]
	mov rcx, [rbp]
	mov rdx, [rbx+0x08]
	mov rsi, [rbp+0x08]
	mov rdi, [rbp+0x18]
	mov r8, [rbx+0x18]
	mov r9, [rbx+0x10]
	mov rbp, [rbp+0x10]
	lea r10, [rsp]
	add rax, rcx
	mov [r10], rax
	mov rax, rdx
	add rax, rsi
	mov [r10+0x08], rax
	mov rax, r9
	add rax, rbp
	mov [r10+0x10], rax
	mov rax, r8
	add rax, rdi
	mov [r10+0x18], rax
	mov rax, 0x20
	mov rdi, rbx
	mov rsi, r10
	mov rdx, rax
	call :memcpy
	mov rax, [rbx+0x18]
	mov rcx, [rbx+0x08]
	mov rdx, [rbx+0x10]
	mov rbx, [rbx]
	add rcx, rax
	mov rax, rbx
	add rax, rdx
	add rax, rcx
5:	add rsp, 0x80
	pop r12
	pop rbp
	pop rbx
	ret
memcpy: