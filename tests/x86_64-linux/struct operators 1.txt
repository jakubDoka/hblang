main:
	push rbx
	push rbp
	push r12
	push r13
	sub rsp, 0x60
	mov rax, 0x03
	mov rbp, 0x04
	mov bl, al
	add bl, 0x01
	lea rdx, [rsp+0x50]
	mov rcx, 0x00
	mov [rdx], cl
	mov [rdx+0x01], cl
	mov [rdx+0x02], cl
	mov [rdx+0x03], cl
	mov rax, 0x01
	mov [rdx], al
	mov [rdx+0x01], al
	mov [rdx+0x02], al
	mov [rdx+0x03], al
	cmp bl, bpl
	jz :0
	mov rax, 0x3E9
	jmp :1
0:	test cl, cl
	jz :2
	mov rax, 0x3EA
1:	jmp :3
2:	test cl, cl
	jz :4
	mov rax, 0x3EB
3:	jmp :5
4:	lea r13, [rsp+0x20]
	lea r12, [rsp]
	lea rdx, [rsp+0x40]
	mov rax, 0x01
	mov [rdx], rax
	mov rcx, 0x02
	mov [rdx+0x08], rcx
	mov rax, 0x04
	mov [r12], rax
	mov rax, 0x06
	mov [r12+0x08], rax
	mov [r12+0x10], rcx
	mov [r12+0x18], rcx
	mov rax, 0xFFFFFFFFFFFFFFFD
	mov [r13], rax
	mov rax, 0xFFFFFFFFFFFFFFFC
	mov [r13+0x08], rax
	mov rcx, 0x10
	mov rax, r13
	add rax, 0x10
	mov rsi, rdx
	mov rdi, rax
	mov rdx, rcx
	call :memcpy
	mov rax, [r13]
	mov r8, [r12]
	mov rbx, [r13+0x08]
	mov rdi, [r12+0x08]
	mov rsi, [r12+0x18]
	mov rbp, [r13+0x18]
	mov rcx, [r13+0x10]
	mov rdx, [r12+0x10]
	add rax, r8
	mov [r13], rax
	add rbx, rdi
	mov [r13+0x08], rbx
	add rcx, rdx
	mov [r13+0x10], rcx
	mov rdx, rbp
	add rdx, rsi
	mov [r13+0x18], rdx
	add rax, rcx
	mov rcx, rbx
	add rcx, rdx
	add rax, rcx
5:	add rsp, 0x60
	pop r13
	pop r12
	pop rbp
	pop rbx
	ret
memcpy: