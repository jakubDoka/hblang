loops 2.square:
	mov r8, 0x00
	mov rsi, r8
	mov rax, r8
2:	cmp rsi, rdi
	jnz :0
	ret
0:	mov rcx, r8
3:	cmp rcx, rdi
	jnz :1
	add rsi, 0x01
	jmp :2
1:	mov rdx, rcx
	imul rdx, rsi
	add rcx, 0x01
	add rax, rdx
	jmp :3
main:
	sub rsp, 0x08
	mov rdi, 0x03
	call :loops 2.square
	add rsp, 0x08
	ret