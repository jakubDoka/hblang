loops 2.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <"loops 2".square>:
   0:	53                   	push   rbx
   1:	55                   	push   rbp
   2:	48 89 f8             	mov    rax,rdi
   5:	48 c7 c1 00 00 00 00 	mov    rcx,0x0
   c:	48 c7 c2 01 00 00 00 	mov    rdx,0x1
  13:	48 89 cb             	mov    rbx,rcx
  16:	48 89 cd             	mov    rbp,rcx
  19:	48 39 c3             	cmp    rbx,rax
  1c:	40 0f 94 c6          	sete   sil
  20:	48 0f b6 f6          	movzx  rsi,sil
  24:	48 85 f6             	test   rsi,rsi
  27:	0f 84 06 00 00 00    	je     33 <"loops 2".square+0x33>
  2d:	48 89 e8             	mov    rax,rbp
  30:	5d                   	pop    rbp
  31:	5b                   	pop    rbx
  32:	c3                   	ret
  33:	48 89 de             	mov    rsi,rbx
  36:	48 01 d6             	add    rsi,rdx
  39:	48 89 ef             	mov    rdi,rbp
  3c:	48 89 cd             	mov    rbp,rcx
  3f:	48 39 c5             	cmp    rbp,rax
  42:	41 0f 94 c0          	sete   r8b
  46:	4d 0f b6 c0          	movzx  r8,r8b
  4a:	4d 85 c0             	test   r8,r8
  4d:	0f 84 0b 00 00 00    	je     5e <"loops 2".square+0x5e>
  53:	48 89 f3             	mov    rbx,rsi
  56:	48 89 fd             	mov    rbp,rdi
  59:	e9 bb ff ff ff       	jmp    19 <"loops 2".square+0x19>
  5e:	49 89 e8             	mov    r8,rbp
  61:	4c 0f af c3          	imul   r8,rbx
  65:	48 01 d5             	add    rbp,rdx
  68:	4c 01 c7             	add    rdi,r8
  6b:	e9 cf ff ff ff       	jmp    3f <"loops 2".square+0x3f>

0000000000000070 <main>:
  70:	53                   	push   rbx
  71:	48 c7 c3 03 00 00 00 	mov    rbx,0x3
  78:	48 89 df             	mov    rdi,rbx
  7b:	e8 00 00 00 00       	call   80 <main+0x10>
  80:	5b                   	pop    rbx
  81:	c3                   	ret