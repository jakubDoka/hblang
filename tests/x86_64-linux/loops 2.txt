loops 2.square:
	xor rsi, rsi
	xor rax, rax
2:	cmp rsi, rdi
	jnz :0
	ret
0:	xor rcx, rcx
3:	cmp rcx, rdi
	jnz :1
	inc rsi
	jmp :2
1:	mov rdx, rcx
	imul rdx, rsi
	inc rcx
	add rax, rdx
	jmp :3
main:
	sub rsp, 0x08
	mov rdi, 0x03
	call :loops 2.square
	add rsp, 0x08
	ret