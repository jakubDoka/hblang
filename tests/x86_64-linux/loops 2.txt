loops 2.square:
	push rbx
	push rbp
	mov rsi, 0x00
	mov rbp, rsi
	mov rcx, rsi
2:	cmp rbp, rdi
	jnz :0
	mov rax, rcx
	pop rbp
	pop rbx
	ret
0:	mov rax, rsi
	mov rbx, rcx
3:	cmp rax, rdi
	jnz :1
	mov rcx, rbp
	add rcx, 0x01
	mov rbp, rcx
	mov rcx, rbx
	jmp :2
1:	mov rdx, rax
	imul rdx, rbp
	add rax, 0x01
	mov rcx, rbx
	add rcx, rdx
	mov rbx, rcx
	jmp :3
main:
	sub rsp, 0x08
	mov rdi, 0x03
	call :loops 2.square
	add rsp, 0x08
	ret