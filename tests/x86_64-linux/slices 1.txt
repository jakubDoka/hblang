main:
	sub rsp, 0x90
	mov byte ptr [rsp+0x80], 0x01
	lea rdx, [rsp+0x80]
	mov byte ptr [rsp+0x81], 0x02
	mov byte ptr [rsp+0x82], 0x03
	mov byte ptr [rsp+0x83], 0x04
	mov [rsp], rdx
	mov qword ptr [rsp+0x08], 0x04
	mov [rsp+0x10], rdx
	mov qword ptr [rsp+0x18], 0x02
	lea rcx, [rsp+0x80]
	add rcx, 0x02
	mov [rsp+0x20], rcx
	mov qword ptr [rsp+0x28], 0x02
	lea rax, [rsp+0x80]
	inc rax
	mov [rsp+0x30], rax
	mov qword ptr [rsp+0x38], 0x02
	mov [rsp+0x40], rdx
	mov qword ptr [rsp+0x48], 0x04
	mov [rsp+0x50], rdx
	mov qword ptr [rsp+0x58], 0x02
	mov [rsp+0x60], rcx
	mov qword ptr [rsp+0x68], 0x02
	mov [rsp+0x70], rax
	mov qword ptr [rsp+0x78], 0x02
	mov r8, 0x10
	xor rsi, rsi
	xor rax, rax
2:	cmp rsi, 0x08
	setz cl
	movzx rcx, cl
	test cl, cl
	jz :0
	add rsp, 0x90
	ret
0:	mov rcx, rsi
	imul rcx, r8
	lea rdi, [rsp]
	add rdi, rcx
	xor rcx, rcx
3:	mov rdx, [rdi+0x08]
	cmp rcx, rdx
	jnz :1
	inc rsi
	jmp :2
1:	mov rdx, [rdi]
	add rdx, rcx
	mov dl, [rdx]
	movzx rdx, dl
	add rax, rdx
	inc rcx
	jmp :3