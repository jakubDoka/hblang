main:
	sub rsp, 0x90
	mov byte ptr [rsp+0x80], 0x01
	mov byte ptr [rsp+0x81], 0x02
	mov byte ptr [rsp+0x82], 0x03
	mov byte ptr [rsp+0x83], 0x04
	lea rsi, [rsp+0x80]
	xor rcx, rcx
	mov eax, [rsp+0x80]
	mov [rsp+0x80], eax
	mov [rsp], rsi
	mov qword ptr [rsp+0x08], 0x04
	mov [rsp+0x10], rsi
	mov qword ptr [rsp+0x18], 0x02
	lea rdx, [rsp+0x80]
	add rdx, 0x02
	mov [rsp+0x20], rdx
	mov qword ptr [rsp+0x28], 0x02
	lea rax, [rsp+0x80]
	inc rax
	mov [rsp+0x30], rax
	mov qword ptr [rsp+0x38], 0x02
	mov [rsp+0x40], rsi
	mov qword ptr [rsp+0x48], 0x04
	mov [rsp+0x50], rsi
	mov qword ptr [rsp+0x58], 0x02
	mov [rsp+0x60], rdx
	mov qword ptr [rsp+0x68], 0x02
	mov [rsp+0x70], rax
	mov qword ptr [rsp+0x78], 0x02
	mov r10, 0x10
	mov rdi, rcx
	mov rax, rcx
2:	cmp rdi, 0x08
	setz dl
	movzx rdx, dl
	test dl, dl
	jz :0
	add rsp, 0x90
	ret
0:	mov rdx, rdi
	imul rdx, r10
	lea r9, [rsp]
	add r9, rdx
	mov r8, rcx
3:	mov rdx, [r9+0x08]
	cmp r8, rdx
	jnz :1
	inc rdi
	jmp :2
1:	mov rdx, [r9]
	mov rsi, r8
	inc rsi
	add rdx, r8
	mov dl, [rdx]
	movzx rdx, dl
	add rax, rdx
	mov r8, rsi
	jmp :3