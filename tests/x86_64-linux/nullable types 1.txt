nullable types 1.mkval(T = uint):
	sub rsp, 0x10
	lea rax, [rsp]
	mov rcx, 0x01
	mov [rax], cl
	mov [rax+0x08], rsi
	mov rcx, 0x10
	mov rsi, rax
	mov rdx, rcx
	call :memcpy
	add rsp, 0x10
	ret
nullable types 1.mknull(T = uint):
	mov rax, 0x00
	mov [rdi], al
	ret
main:
	push rbx
	push rbp
	push r12
	sub rsp, 0x28
	lea rbx, [rsp]
	mov rbp, 0x0A
	mov rdi, rbx
	mov rsi, rbp
	call :nullable types 1.mkval(T = uint)
	mov rbp, 0x00
	mov r12b, [rbx]
	cmp r12b, bpl
	setz r12b
	movzx r12, r12b
	test r12b, r12b
	jz :0
	mov rax, 0x01
	jmp :1
0:	lea rbp, [rsp+0x10]
	mov rdi, rbp
	call :nullable types 1.mknull(T = uint)
	mov al, [rbp]
	mov rcx, [rbx+0x08]
	test al, al
	jz :2
	mov rax, 0x02
1:	jmp :3
2:	mov rax, rcx
3:	add rsp, 0x28
	pop r12
	pop rbp
	pop rbx
	ret
memcpy: