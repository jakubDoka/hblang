structs 3 (call stress test).return_pair:
	mov rax, 0x01
	mov [rdi], al
	mov rax, 0x05
	mov [rdi+0x08], rax
	ret
structs 3 (call stress test).return_triple:
	mov rax, 0x01
	mov [rdi], rax
	mov rax, 0x02
	mov [rdi+0x08], rax
	mov rax, 0x03
	mov [rdi+0x10], al
	ret
structs 3 (call stress test).take_pair:
	mov rax, rdi
	movzx rax, al
	add rax, rsi
	ret
structs 3 (call stress test).take_triple:
	lea rax, [rsp+0x08]
	mov cl, [rax+0x10]
	mov rdx, [rax+0x08]
	mov rax, [rax]
	movzx rcx, cl
	add rax, rdx
	add rax, rcx
	ret
main:
	push rbx
	push rbp
	push r12
	sub rsp, 0x48
	lea rbx, [rsp+0x18]
	mov rdi, rbx
	call :structs 3 (call stress test).return_pair
	lea r12, [rsp+0x28]
	mov rdi, r12
	call :structs 3 (call stress test).return_triple
	mov dil, [rbx]
	mov rsi, [rbx+0x08]
	call :structs 3 (call stress test).take_pair
	mov rbp, rax
	lea rbx, [rsp]
	mov rax, 0x18
	mov rdi, rbx
	mov rsi, r12
	mov rdx, rax
	call :memcpy
	call :structs 3 (call stress test).take_triple
	cmp rbp, rax
	jz :0
	mov rax, 0x01
	jmp :1
0:	mov rax, 0x00
1:	add rsp, 0x48
	pop r12
	pop rbp
	pop rbx
	ret
memcpy: