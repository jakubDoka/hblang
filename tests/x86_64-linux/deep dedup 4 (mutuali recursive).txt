deep dedup 4 (mutuali recursive).fib2:
	sub rsp, 0x08
	mov rax, rdi
	cmp rax, 0x02
	setbe dil
	movzx rdi, dil
	test dil, dil
	jz :0
	mov rax, 0x01
	jmp :1
0:	mov rdi, rax
	call :deep dedup 4 (mutuali recursive).fib_body2
1:	add rsp, 0x08
	ret
deep dedup 4 (mutuali recursive).fib_body2:
	push rbx
	push rbp
	sub rsp, 0x08
	mov rbp, rdi
	mov rdi, rbp
	sub rdi, 0x01
	call :deep dedup 4 (mutuali recursive).fib2
	mov rbx, rax
	mov rdi, rbp
	sub rdi, 0x02
	call :deep dedup 4 (mutuali recursive).fib2
	mov rcx, rax
	mov rax, rbx
	add rax, rcx
	add rsp, 0x08
	pop rbp
	pop rbx
	ret
main:
	push rbx
	push rbp
	sub rsp, 0x08
	mov rbp, 0x03
	mov rdi, rbp
	call :deep dedup 4 (mutuali recursive).fib2
	mov rbx, rax
	mov rdi, rbp
	call :deep dedup 4 (mutuali recursive).fib2
	mov rcx, rax
	mov rax, rbx
	sub rax, rcx
	add rsp, 0x08
	pop rbp
	pop rbx
	ret