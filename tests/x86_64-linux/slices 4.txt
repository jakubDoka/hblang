slices 4.equals:
	mov r8, 0x00
	cmp rsi, rcx
	jz :0
	jmp :1
0:	mov r10, 0x01
	cmp rdi, rdx
	jnz :2
	mov r8b, r10b
1:	jmp :3
2:	mov rax, 0x00
7:	cmp rax, rsi
	jnz :4
	mov al, r10b
	jmp :5
4:	mov r9, rdi
	add r9, rax
	mov rcx, rdx
	add rcx, rax
	mov r9b, [r9]
	mov cl, [rcx]
	cmp r9b, cl
	jz :6
3:	mov al, r8b
5:	ret
6:	add rax, 0x01
	jmp :7
main:
	push rbx
	sub rsp, 0x08
	mov byte ptr [rsp], 0x61
	mov byte ptr [rsp+0x01], 0x62
	mov byte ptr [rsp+0x02], 0x63
	lea rbx, [0x0000000000000007]
	mov rdi, rbx
	mov rdx, rbx
	mov rsi, 0x03
	mov rcx, 0x03
	call :slices 4.equals
	xor al, 0x01
	test al, al
	jz :0
	jmp :1
0:	lea rdi, [rsp]
	mov rdx, rbx
	mov rsi, 0x03
	mov rcx, 0x03
	call :slices 4.equals
	xor al, 0x01
	test al, al
	jz :2
1:	mov rax, 0x01
	jmp :3
2:	mov rax, 0x00
3:	add rsp, 0x08
	pop rbx
	ret