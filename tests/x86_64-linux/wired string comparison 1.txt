wired string comparison 1.broken:
	mov rax, [rsp+0x10]
	mov [rdi], rax
	mov rax, [rsp+0x18]
	mov [rdi+0x08], rax
	mov rax, [rsp+0x10]
	mov [rdi+0x10], rax
	mov rax, [rsp+0x18]
	mov [rdi+0x18], rax
	ret
main:
	push rbx
	sub rsp, 0x68
	lea rdx, [0x0000000000000007]
	mov [rsp+0x38], rdx
	mov rax, 0x04
	mov [rsp+0x40], rax
	lea rcx, [rsp+0x48]
	mov byte ptr [rsp+0x48], 0x00
	mov [rsp+0x50], rdx
	mov [rsp+0x58], rax
	mov rax, 0x18
	lea rbx, [rsp]
	mov rdi, rbx
	mov rsi, rcx
	mov rdx, rax
	call :memcpy
	lea rdi, [rsp+0x18]
	call :wired string comparison 1.broken
	mov rax, [rsp+0x28]
	mov rcx, [rsp+0x38]
	cmp rax, rcx
	setnz al
	movzx rax, al
	movzx rax, al
	add rsp, 0x68
	pop rbx
	ret
memcpy: