wired string comparison 1.broken:
	mov rcx, rsi
	mov rax, [rcx+0x08]
	mov [rdi], rax
	mov rax, [rcx+0x10]
	mov [rdi+0x08], rax
	mov rax, [rcx+0x08]
	mov [rdi+0x10], rax
	mov rax, [rcx+0x10]
	mov [rdi+0x18], rax
	ret
main:
	push rbx
	push rbp
	sub rsp, 0x48
	lea rbp, [rsp+0x20]
	lea rdx, [0x0000000000000007]
	mov [rbp], rdx
	mov rcx, 0x04
	mov [rbp+0x08], rcx
	lea rsi, [rsp+0x30]
	mov rax, 0x00
	mov [rsi], al
	mov [rsi+0x08], rdx
	mov [rsi+0x10], rcx
	lea rbx, [rsp]
	mov rdi, rbx
	call :wired string comparison 1.broken
	mov rax, [rbx+0x10]
	mov rcx, [rbp]
	cmp rax, rcx
	setnz al
	movzx rax, al
	movzx rax, al
	add rsp, 0x48
	pop rbp
	pop rbx
	ret