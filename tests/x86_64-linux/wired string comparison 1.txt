wired string comparison 1.broken:
	push rbx
	push rbp
	push r12
	mov rbx, rdi
	mov rbp, 0x10
	mov r12, rsi
	add r12, 0x08
	mov rdi, rbx
	mov rsi, r12
	mov rdx, rbp
	call :memcpy
	mov rdi, rbx
	add rdi, 0x10
	mov rsi, r12
	mov rdx, rbp
	call :memcpy
	pop r12
	pop rbp
	pop rbx
	ret
main:
	push rbx
	push rbp
	push r12
	sub rsp, 0x48
	lea rbx, [rsp+0x20]
	lea rax, [0x0000000000000007]
	lea rbp, [rsp+0x38]
	mov [rbp], rax
	mov rax, 0x04
	mov [rbp+0x08], rax
	mov rax, 0x00
	mov [rbx], al
	lea r12, [rsp]
	mov rax, 0x10
	mov rsi, rbx
	add rsi, 0x08
	mov rdi, rsi
	mov rsi, rbp
	mov rdx, rax
	call :memcpy
	mov rdi, r12
	mov rsi, rbx
	call :wired string comparison 1.broken
	mov rax, [r12+0x10]
	mov rcx, [rbp]
	cmp rax, rcx
	setnz al
	movzx rax, al
	movzx rax, al
	add rsp, 0x48
	pop r12
	pop rbp
	pop rbx
	ret
memcpy: