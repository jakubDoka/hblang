mixing @Any and comptime args 1.bind(val: ?i32, f = mixing @Any and comptime args 1.main):
	sub rsp, 0x08
	test sil, sil
	jz :0
	mov rsi, rdx
	call :mixing @Any and comptime args 1.main
	jmp :1
0:	mov rax, 0x00
	mov [rdi], al
1:	add rsp, 0x08
	ret
mixing @Any and comptime args 1.main:
	sub rsp, 0x10
	mov rax, 0x01
	mov [rsp], al
	add esi, 0x05
	mov [rsp+0x04], esi
	mov rax, [rsp]
	mov [rdi], rax
	add rsp, 0x10
	ret
main:
	sub rsp, 0x18
	mov rax, 0x01
	mov [rsp+0x08], al
	mov rax, 0x00
	mov [rsp+0x0C], eax
	mov rax, [rsp+0x08]
	mov [rsp], rax
	lea rdi, [rsp+0x10]
	mov sil, [rsp]
	mov edx, [rsp+0x04]
	call :mixing @Any and comptime args 1.bind(val: ?i32, f = mixing @Any and comptime args 1.main)
	mov rax, 0x00
	add rsp, 0x18
	ret