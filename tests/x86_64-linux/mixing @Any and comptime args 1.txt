mixing @Any and comptime args 1.bind(val: ?i32, f = mixing @Any and comptime args 1.main):
	sub rsp, 0x08
	test sil, sil
	jz :0
	mov rsi, rdx
	call :mixing @Any and comptime args 1.main
	jmp :1
0:	mov rax, 0x00
	mov [rdi], al
1:	add rsp, 0x08
	ret
mixing @Any and comptime args 1.main:
	sub rsp, 0x10
	lea rax, [rsp]
	mov rcx, 0x01
	mov [rax], cl
	add esi, 0x05
	mov [rax+0x04], esi
	mov rcx, 0x08
	mov rsi, rax
	mov rdx, rcx
	call :memcpy
	add rsp, 0x10
	ret
main:
	push rbx
	sub rsp, 0x18
	lea rax, [rsp+0x08]
	mov rcx, 0x01
	mov [rax], cl
	mov rcx, 0x00
	mov [rax+0x04], ecx
	lea rbx, [rsp]
	mov rcx, 0x08
	mov rdi, rbx
	mov rsi, rax
	mov rdx, rcx
	call :memcpy
	lea rdi, [rsp+0x10]
	mov sil, [rbx]
	mov edx, [rbx+0x04]
	call :mixing @Any and comptime args 1.bind(val: ?i32, f = mixing @Any and comptime args 1.main)
	mov rax, 0x00
	add rsp, 0x18
	pop rbx
	ret
memcpy: