deep instantiation 2.S.get((((((((.Z)))))))):
	sub rsp, 0x08
	call :deep instantiation 2.S.get(((((((.Z)))))))
	inc eax
	add rsp, 0x08
	ret
deep instantiation 2.S.get(((((((.Z))))))):
	sub rsp, 0x08
	call :deep instantiation 2.S.get((((((.Z))))))
	inc eax
	add rsp, 0x08
	ret
deep instantiation 2.S.get((((((.Z)))))):
	sub rsp, 0x08
	call :deep instantiation 2.S.get(((((.Z)))))
	inc eax
	add rsp, 0x08
	ret
deep instantiation 2.S.get(((((.Z))))):
	sub rsp, 0x08
	call :deep instantiation 2.S.get((((.Z))))
	inc eax
	add rsp, 0x08
	ret
deep instantiation 2.S.get((((.Z)))):
	sub rsp, 0x08
	call :deep instantiation 2.S.get(((.Z)))
	inc eax
	add rsp, 0x08
	ret
deep instantiation 2.S.get(((.Z))):
	sub rsp, 0x08
	call :deep instantiation 2.S.get((.Z))
	inc eax
	add rsp, 0x08
	ret
deep instantiation 2.S.get((.Z)):
	sub rsp, 0x08
	call :deep instantiation 2.S.get(.Z)
	inc eax
	add rsp, 0x08
	ret
deep instantiation 2.S.get(.Z):
	sub rsp, 0x08
	call :deep instantiation 2.Z.get
	inc eax
	add rsp, 0x08
	ret
deep instantiation 2.Z.get:
	xor eax, eax
	ret
main:
	sub rsp, 0x08
	call :deep instantiation 2.S.get((((((((.Z))))))))
	cmp eax, 0x08
	setnz al
	movzx rax, al
	movzx eax, al
	add rsp, 0x08
	ret