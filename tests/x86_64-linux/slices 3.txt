"slices 3".reverse:
	push rbx
	push rbp
	sub rsp, 0x20
	mov rax, rsp
	add rax, 0x00
	mov [rax], rsi
	mov [rax+0x08], rdx
	cmp rdx, 0x00
	setz cl
	movzx rcx, cl
	mov rbx, 0x10
	test cl, cl
	jz 0x0000000000000016
	mov rsi, rax
	mov rdx, rbx
	call 0x0000000000000005
	jmp 0x0000000000000068
	mov rcx, 0x00
	sub rdx, 0x01
	cmp rcx, rdx
	setb bpl
	movzx rbp, bpl
	test bpl, bpl
	jz 0x000000000000003F
	mov rbp, [rax]
	mov rsi, rdx
	sub rsi, 0x01
	mov r8, rcx
	add r8, 0x01
	mov r9, rbp
	add r9, rcx
	mov rcx, rbp
	add rcx, rdx
	mov bpl, [r9]
	mov cl, [rcx]
	mov [r9], cl
	mov rcx, [rax]
	add rcx, rdx
	mov [rcx], bpl
	mov rcx, r8
	mov rdx, rsi
	jmp 0xFFFFFFFFFFFFFFB8
	mov rsi, rax
	mov rdx, rbx
	call 0x0000000000000005
	add rsp, 0x20
	pop rbp
	pop rbx
	ret
main:
	push rbx
	push rbp
	push r12
	push r13
	push r14
	sub rsp, 0x58
	mov rbx, rsp
	add rbx, 0x28
	mov rbp, 0x01
	mov [rbx], bpl
	mov r12, 0x02
	mov [rbx+0x01], r12b
	mov r12, 0x03
	mov [rbx+0x02], r12b
	mov r13, rsp
	add r13, 0x08
	mov qword ptr [rsp], 0x00
	mov rdi, r13
	mov rsi, rbp
	mov rdx, [rsp]
	call 0x0000000000000005
	mov rbp, rsp
	add rbp, 0x18
	mov rdi, rbp
	mov rsi, rbx
	mov rdx, r12
	call 0x0000000000000005
	mov al, [rbx]
	mov cl, [rbx+0x01]
	mov dl, [rbx+0x02]
	movzx rax, al
	movzx rcx, cl
	movzx rdx, dl
	sub rax, rcx
	sub rax, rdx
	add rsp, 0x58
	pop r14
	pop r13
	pop r12
	pop rbp
	pop rbx
	ret
memcpy: