comptime 6 (strings).main.string_to_array("Edward"):
	sub rsp, 0x10
	xor rdx, rdx
1:	cmp rdx, 0x06
	setb al
	movzx rax, al
	test al, al
	jz :0
	lea rcx, [rsp]
	add rcx, rdx
	lea rax, [0x0000000000000007]
	add rax, rdx
	inc rdx
	mov al, [rax]
	mov [rcx], al
	jmp :1
0:	mov r8b, [rsp+0x03]
	mov dil, [rsp+0x02]
	mov sil, [rsp+0x01]
	mov al, [rsp]
	mov dl, [rsp+0x04]
	mov cl, [rsp+0x05]
	movzx r8, r8b
	movzx rdi, dil
	movzx rsi, sil
	movzx rax, al
	movzx rdx, dl
	movzx rcx, cl
	shl r8, 0x18
	shl rdi, 0x10
	shl rsi, 0x08
	shl rdx, 0x20
	shl rcx, 0x28
	or rax, rsi
	or rax, rdi
	or rax, r8
	or rax, rdx
	or rax, rcx
	add rsp, 0x10
	ret
main:
	sub rsp, 0x08
	call :comptime 6 (strings).main.string_to_array("Edward")
	mov [rsp], rax
	mov al, [rsp]
	movzx rax, al
	add rsp, 0x08
	ret