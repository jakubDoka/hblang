comptime 6 (strings).main.string_to_array("Edward"):
	sub rsp, 0x10
	xor rdx, rdx
1:	cmp rdx, 0x06
	setb al
	movzx rax, al
	test al, al
	jz :0
	lea rcx, [rsp]
	add rcx, rdx
	lea rax, [0x0000000000000007]
	add rax, rdx
	mov al, [rax]
	mov [rcx], al
	inc rdx
	jmp :1
0:	mov al, [rsp+0x03]
	movzx r8, al
	shl r8, 0x18
	mov al, [rsp]
	movzx rax, al
	mov cl, [rsp+0x05]
	movzx rdi, cl
	shl rdi, 0x28
	mov cl, [rsp+0x04]
	movzx rsi, cl
	shl rsi, 0x20
	mov cl, [rsp+0x02]
	movzx rdx, cl
	shl rdx, 0x10
	mov cl, [rsp+0x01]
	movzx rcx, cl
	shl rcx, 0x08
	or rax, rcx
	or rax, rdx
	or rax, r8
	or rax, rsi
	or rax, rdi
	add rsp, 0x10
	ret
main:
	sub rsp, 0x08
	call :comptime 6 (strings).main.string_to_array("Edward")
	mov [rsp], rax
	mov al, [rsp]
	movzx rax, al
	add rsp, 0x08
	ret