pointers 2.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
   0:	53                   	push   %rbx
   1:	55                   	push   %rbp
   2:	41 54                	push   %r12
   4:	48 81 c4 f0 ff ff ff 	add    $0xfffffffffffffff0,%rsp
   b:	48 89 e3             	mov    %rsp,%rbx
   e:	48 81 c3 00 00 00 00 	add    $0x0,%rbx
  15:	48 bd 01 00 00 00 00 	movabs $0x1,%rbp
  1c:	00 00 00 
  1f:	48 89 ab 00 00 00 00 	mov    %rbp,0x0(%rbx)
  26:	48 bd 02 00 00 00 00 	movabs $0x2,%rbp
  2d:	00 00 00 
  30:	49 89 e4             	mov    %rsp,%r12
  33:	49 81 c4 08 00 00 00 	add    $0x8,%r12
  3a:	49 89 ac 24 00 00 00 	mov    %rbp,0x0(%r12)
  41:	00 
  42:	48 89 df             	mov    %rbx,%rdi
  45:	4c 89 e6             	mov    %r12,%rsi
  48:	e8 1e 00 00 00       	call   6b <"pointers 2".swap>
  4d:	48 8b 83 00 00 00 00 	mov    0x0(%rbx),%rax
  54:	49 8b 8c 24 00 00 00 	mov    0x0(%r12),%rcx
  5b:	00 
  5c:	48 29 c8             	sub    %rcx,%rax
  5f:	48 81 c4 10 00 00 00 	add    $0x10,%rsp
  66:	5b                   	pop    %rbx
  67:	5d                   	pop    %rbp
  68:	41 5c                	pop    %r12
  6a:	c3                   	ret

000000000000006b <"pointers 2".swap>:
  6b:	53                   	push   %rbx
  6c:	48 89 f9             	mov    %rdi,%rcx
  6f:	48 89 f0             	mov    %rsi,%rax
  72:	48 8b 90 00 00 00 00 	mov    0x0(%rax),%rdx
  79:	48 8b 99 00 00 00 00 	mov    0x0(%rcx),%rbx
  80:	48 89 98 00 00 00 00 	mov    %rbx,0x0(%rax)
  87:	48 89 91 00 00 00 00 	mov    %rdx,0x0(%rcx)
  8e:	5b                   	pop    %rbx
  8f:	c3                   	ret