generic structs 5 (iterators).main.next:
	sub rsp, 0x10
	mov rax, [rsi+0x08]
	cmp rax, 0x00
	setz al
	movzx rax, al
	test al, al
	jz :0
	mov byte ptr [rdi], 0x00
	jmp :1
0:	mov rax, [rsi]
	mov byte ptr [rsp], 0x01
	mov al, [rax]
	mov [rsp+0x01], al
	mov ax, [rsp]
	mov [rdi], ax
	mov rcx, [rsi]
	mov rax, [rsi+0x08]
	inc rcx
	mov [rsi], rcx
	dec rax
	mov [rsi+0x08], rax
1:	add rsp, 0x10
	ret
generic structs 5 (iterators).main.Chain(generic structs 5 (iterators).main, generic structs 5 (iterators).main).next:
	push rbx
	push rbp
	push r12
	push r13
	sub rsp, 0x08
	mov r13, rdi
	mov r12, rsi
	mov rax, r12
	add rax, 0x08
	mov rbp, rax
	mov rax, r12
	add rax, 0x18
	mov rbx, rax
7:	mov rax, r12
	mov al, [rax]
	movsx rcx, al
	cmp rcx, 0x00
	setz al
	movzx rax, al
	test al, al
	jz :0
	mov rsi, rbp
	lea rdi, [rsp+0x02]
	call :generic structs 5 (iterators).main.next
	mov al, [rsp+0x02]
	test al, al
	jz :1
	mov cx, [rsp+0x02]
	mov rax, r13
	mov [rax], cx
	jmp :2
1:	mov rax, r12
	mov byte ptr [rax], 0x01
	jmp :3
0:	cmp rcx, 0x01
	setz al
	movzx rax, al
	test al, al
	jz :4
	mov rsi, rbx
	lea rdi, [rsp]
	call :generic structs 5 (iterators).main.next
	mov al, [rsp]
	test al, al
	jz :5
	mov cx, [rsp]
	mov rax, r13
	mov [rax], cx
2:	jmp :6
5:	mov rax, r12
	mov byte ptr [rax], 0x02
3:	jmp :7
4:	mov rax, r13
	mov byte ptr [rax], 0x00
6:	add rsp, 0x08
	pop r13
	pop r12
	pop rbp
	pop rbx
	ret
main:
	push rbx
	sub rsp, 0x68
	lea rcx, [0x0000000000000007]
	mov [rsp], rcx
	mov qword ptr [rsp+0x08], 0x04
	lea rax, [0x0000000000000007]
	mov [rsp+0x10], rax
	mov qword ptr [rsp+0x18], 0x02
	mov [rsp+0x20], rcx
	mov qword ptr [rsp+0x28], 0x04
	mov byte ptr [rsp+0x30], 0x00
	mov [rsp+0x38], rax
	mov qword ptr [rsp+0x40], 0x02
	lea rax, [0x0000000000000007]
	mov [rsp+0x48], rax
	mov qword ptr [rsp+0x50], 0x02
	xor bl, bl
8:	lea rdi, [rsp+0x58]
	lea rsi, [rsp+0x10]
	call :generic structs 5 (iterators).main.next
	mov al, [rsp+0x58]
	cmp al, bl
	jnz :0
	mov rcx, [rsp+0x08]
	mov rax, [rsp]
	mov [rsp+0x20], rax
	mov [rsp+0x28], rcx
5:	lea rdi, [rsp+0x5C]
	lea rsi, [rsp+0x20]
	call :generic structs 5 (iterators).main.next
	mov al, [rsp+0x5C]
	cmp al, bl
	jnz :1
	xor rax, rax
	jmp :7
1:	lea rdi, [rsp+0x5E]
	lea rsi, [rsp+0x30]
	call :generic structs 5 (iterators).main.Chain(generic structs 5 (iterators).main, generic structs 5 (iterators).main).next
	mov al, [rsp+0x5E]
	cmp al, bl
	jnz :3
	mov rax, 0x03
	jmp :7
3:	mov cl, [rsp+0x5D]
	mov al, [rsp+0x5F]
	cmp al, cl
	jz :4
	mov rax, 0x04
	jmp :7
4:	jmp :5
0:	lea rsi, [rsp+0x20]
	lea rdi, [rsp+0x5A]
	call :generic structs 5 (iterators).main.next
	mov al, [rsp+0x5A]
	cmp al, bl
	jnz :6
	mov rax, 0x01
	jmp :7
6:	mov cl, [rsp+0x5B]
	mov al, [rsp+0x59]
	cmp al, cl
	jz :7
	mov rax, 0x02
7:	add rsp, 0x68
	pop rbx
	ret
7:	jmp :8