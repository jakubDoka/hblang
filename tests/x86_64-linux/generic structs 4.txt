"generic structs 4".Array(E = uint, Next = "generic structs 4".Array(E = uint, Next = "generic structs 4".Array(E = uint, Next = "generic structs 4".Array(E = uint)))).get:
	push rbx
	push rbp
	push r12
	push r13
	push r14
	push r15
	sub rsp, 0x10
	mov rbp, rdi
	mov rbx, rsi
	mov r12, 0x00
	cmp rbx, r12
	setz r13b
	movzx r13, r13b
	test r13, r13
	jz 0x000000000000000F
	mov rax, [rbp]
	jmp 0x0000000000000046
	mov r12, 0x08
	mov r13, 0x10
	mov qword ptr [rsp], 0x01
	mov [rsp+0x08], rbp
	add [rsp+0x08], r12
	add rbp, r13
	sub rbx, [rsp]
	mov r15, [rsp+0x08]
	mov r12, [r15]
	mov rbp, [rbp]
	mov rdi, r12
	mov rsi, rbp
	mov rdx, rbx
	call 0x0000000000000005
	add rsp, 0x10
	pop r15
	pop r14
	pop r13
	pop r12
	pop rbp
	pop rbx
	ret
"generic structs 4".Array(E = uint, Next = "generic structs 4".Array(E = uint, Next = "generic structs 4".Array(E = uint))).get:
	push rbx
	push rbp
	push r12
	push r13
	push r14
	sub rsp, 0x08
	mov r12, rdi
	mov rbp, rsi
	mov rbx, rdx
	mov r13, 0x00
	cmp rbx, r13
	setz [rsp]
	movzx r15, byte ptr [rsp]
	mov [rsp], r15
	mov r15, [rsp]
	test [rsp], r15
	jz 0x000000000000000E
	mov rax, r12
	jmp 0x000000000000001A
	mov r12, 0x01
	sub rbx, r12
	mov rdi, rbp
	mov rsi, rbx
	call 0x0000000000000005
	add rsp, 0x08
	pop r14
	pop r13
	pop r12
	pop rbp
	pop rbx
	ret
"generic structs 4".Array(E = uint, Next = "generic structs 4".Array(E = uint)).get:
	push rbx
	push rbp
	push r12
	push r13
	mov rbp, rdi
	mov rbx, rsi
	mov r12, 0x00
	cmp rbx, r12
	setz r13b
	movzx r13, r13b
	test r13, r13
	jz 0x000000000000000E
	mov rax, rbp
	jmp 0x0000000000000017
	mov rbp, 0x01
	sub rbx, rbp
	mov rdi, rbx
	call 0x0000000000000005
	pop r13
	pop r12
	pop rbp
	pop rbx
	ret
"generic structs 4".Array(E = uint).get:
	ud2
main:
	push rbx
	push rbp
	push r12
	push r13
	push r14
	push r15
	sub rsp, 0x30
	mov rbx, rsp
	add rbx, 0x18
	mov rbp, 0x01
	mov [rbx], rbp
	mov r12, 0x10
	mov r13, 0x08
	mov qword ptr [rsp], 0x00
	mov qword ptr [rsp+0x08], 0x02
	mov [rsp+0x10], rbx
	add [rsp+0x10], r13
	mov r15, [rsp+0x10]
	mov r14, [rsp+0x08]
	mov [r15], r14
	mov r13, 0x03
	mov [rsp+0x10], rbx
	add [rsp+0x10], r12
	mov r15, [rsp+0x10]
	mov [r15], r13
	mov r15, [rsp+0x10]
	mov [r15], r13
	mov rdi, rbx
	mov rsi, [rsp]
	call 0x0000000000000005
	mov r12, rax
	mov rdi, rbx
	mov rsi, rbp
	call 0x0000000000000005
	mov rbp, rax
	mov rdi, rbx
	mov rsi, [rsp+0x08]
	call 0x0000000000000005
	mov rcx, r12
	add rcx, rbp
	add rcx, rax
	mov rax, rcx
	add rsp, 0x30
	pop r15
	pop r14
	pop r13
	pop r12
	pop rbp
	pop rbx
	ret