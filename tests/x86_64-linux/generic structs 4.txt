generic structs 4.Array((((uint), uint), uint), uint).get:
	sub rsp, 0x08
	mov rax, rdi
	lea rcx, [rsp+0x10]
	mov rcx, rax
	cmp rcx, 0x00
	setz cl
	movzx rcx, cl
	test cl, cl
	jz :0
	mov rax, [rsp+0x10]
	jmp :1
0:	mov rdi, [rsp+0x18]
	mov rsi, [rsp+0x20]
	dec rax
	mov rdx, rax
	call :generic structs 4.Array(((uint), uint), uint).get
1:	add rsp, 0x08
	ret
generic structs 4.Array(((uint), uint), uint).get:
	sub rsp, 0x08
	mov rcx, rdx
	mov rax, rdi
	mov rdx, rcx
	cmp rdx, 0x00
	setz dl
	movzx rdx, dl
	test dl, dl
	jz :0
	jmp :1
0:	dec rcx
	mov rdi, rsi
	mov rsi, rcx
	call :generic structs 4.Array((uint), uint).get
1:	add rsp, 0x08
	ret
generic structs 4.Array((uint), uint).get:
	sub rsp, 0x08
	mov rcx, rsi
	mov rax, rdi
	mov rdx, rcx
	cmp rdx, 0x00
	setz dl
	movzx rdx, dl
	test dl, dl
	jz :0
	jmp :1
0:	dec rcx
	mov rdi, rcx
	call :generic structs 4.Array(uint).get
1:	add rsp, 0x08
	ret
generic structs 4.Array(uint).get:
	ud2
main:
	push rbx
	push rbp
	sub rsp, 0x38
	mov qword ptr [rsp+0x18], 0x01
	mov qword ptr [rsp+0x20], 0x02
	mov qword ptr [rsp+0x28], 0x03
	lea rdi, [rsp]
	mov rdx, 0x18
	lea rsi, [rsp+0x18]
	call :memcpy
	xor rdi, rdi
	call :generic structs 4.Array((((uint), uint), uint), uint).get
	mov rbx, rax
	lea rdi, [rsp]
	mov rdx, 0x18
	lea rsi, [rsp+0x18]
	call :memcpy
	mov rdi, 0x01
	call :generic structs 4.Array((((uint), uint), uint), uint).get
	mov rbp, rax
	lea rdi, [rsp]
	mov rdx, 0x18
	lea rsi, [rsp+0x18]
	call :memcpy
	mov rdi, 0x02
	call :generic structs 4.Array((((uint), uint), uint), uint).get
	add rbx, rbp
	add rbx, rax
	mov rax, rbx
	add rsp, 0x38
	pop rbp
	pop rbx
	ret
memcpy: