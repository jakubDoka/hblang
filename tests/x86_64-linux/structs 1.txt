structs 1.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <"structs 1".odher_pass>:
   0:	48 89 f8             	mov    rax,rdi
   3:	48 89 f1             	mov    rcx,rsi
   6:	48 c7 c2 18 00 00 00 	mov    rdx,0x18
   d:	48 89 c7             	mov    rdi,rax
  10:	48 89 ce             	mov    rsi,rcx
  13:	e8 00 00 00 00       	call   18 <"structs 1".odher_pass+0x18>
  18:	c3                   	ret

0000000000000019 <"structs 1".Ty.sum>:
  19:	53                   	push   rbx
  1a:	55                   	push   rbp
  1b:	48 83 ec 10          	sub    rsp,0x10
  1f:	48 89 f8             	mov    rax,rdi
  22:	48 89 f1             	mov    rcx,rsi
  25:	48 89 e2             	mov    rdx,rsp
  28:	48 83 c2 00          	add    rdx,0x0
  2c:	48 89 02             	mov    QWORD PTR [rdx],rax
  2f:	48 c7 c3 02 00 00 00 	mov    rbx,0x2
  36:	48 c7 c5 01 00 00 00 	mov    rbp,0x1
  3d:	48 c7 c6 08 00 00 00 	mov    rsi,0x8
  44:	48 89 d7             	mov    rdi,rdx
  47:	48 01 f7             	add    rdi,rsi
  4a:	48 89 0f             	mov    QWORD PTR [rdi],rcx
  4d:	48 29 d8             	sub    rax,rbx
  50:	48 89 02             	mov    QWORD PTR [rdx],rax
  53:	48 01 e9             	add    rcx,rbp
  56:	48 89 0f             	mov    QWORD PTR [rdi],rcx
  59:	48 29 c8             	sub    rax,rcx
  5c:	48 83 c4 10          	add    rsp,0x10
  60:	5d                   	pop    rbp
  61:	5b                   	pop    rbx
  62:	c3                   	ret

0000000000000063 <"structs 1".pass>:
  63:	53                   	push   rbx
  64:	48 89 f8             	mov    rax,rdi
  67:	48 c7 c1 08 00 00 00 	mov    rcx,0x8
  6e:	48 c7 c2 01 00 00 00 	mov    rdx,0x1
  75:	48 8b 18             	mov    rbx,QWORD PTR [rax]
  78:	48 29 d3             	sub    rbx,rdx
  7b:	48 89 18             	mov    QWORD PTR [rax],rbx
  7e:	48 01 d3             	add    rbx,rdx
  81:	48 89 18             	mov    QWORD PTR [rax],rbx
  84:	48 01 c8             	add    rax,rcx
  87:	48 8b 00             	mov    rax,QWORD PTR [rax]
  8a:	48 89 d9             	mov    rcx,rbx
  8d:	48 29 c1             	sub    rcx,rax
  90:	48 89 c8             	mov    rax,rcx
  93:	5b                   	pop    rbx
  94:	c3                   	ret

0000000000000095 <main>:
  95:	53                   	push   rbx
  96:	55                   	push   rbp
  97:	41 54                	push   r12
  99:	41 55                	push   r13
  9b:	41 56                	push   r14
  9d:	41 57                	push   r15
  9f:	48 83 ec 30          	sub    rsp,0x30
  a3:	48 89 e3             	mov    rbx,rsp
  a6:	48 83 c3 00          	add    rbx,0x0
  aa:	48 c7 c5 04 00 00 00 	mov    rbp,0x4
  b1:	48 89 2b             	mov    QWORD PTR [rbx],rbp
  b4:	48 c7 c5 10 00 00 00 	mov    rbp,0x10
  bb:	49 c7 c4 08 00 00 00 	mov    r12,0x8
  c2:	49 89 e5             	mov    r13,rsp
  c5:	49 83 c5 18          	add    r13,0x18
  c9:	4c 8d 35 00 00 00 00 	lea    r14,[rip+0x0]        # d0 <main+0x3b>
  d0:	49 89 df             	mov    r15,rbx
  d3:	4d 01 e7             	add    r15,r12
  d6:	4c 89 ff             	mov    rdi,r15
  d9:	4c 89 f6             	mov    rsi,r14
  dc:	4c 89 e2             	mov    rdx,r12
  df:	e8 00 00 00 00       	call   e4 <main+0x4f>
  e4:	49 c7 c6 03 00 00 00 	mov    r14,0x3
  eb:	49 89 df             	mov    r15,rbx
  ee:	49 01 ef             	add    r15,rbp
  f1:	4d 89 37             	mov    QWORD PTR [r15],r14
  f4:	4c 89 ef             	mov    rdi,r13
  f7:	48 89 de             	mov    rsi,rbx
  fa:	e8 00 00 00 00       	call   ff <main+0x6a>
  ff:	4c 89 eb             	mov    rbx,r13
 102:	48 01 eb             	add    rbx,rbp
 105:	4c 89 ed             	mov    rbp,r13
 108:	4c 01 e5             	add    rbp,r12
 10b:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
 10e:	4c 39 f3             	cmp    rbx,r14
 111:	0f 95 c3             	setne  bl
 114:	48 0f b6 db          	movzx  rbx,bl
 118:	49 c7 c4 00 00 00 00 	mov    r12,0x0
 11f:	48 8b 6d 00          	mov    rbp,QWORD PTR [rbp+0x0]
 123:	4d 8b 75 00          	mov    r14,QWORD PTR [r13+0x0]
 127:	48 85 db             	test   rbx,rbx
 12a:	0f 84 08 00 00 00    	je     138 <main+0xa3>
 130:	4c 89 e0             	mov    rax,r12
 133:	e9 28 00 00 00       	jmp    160 <main+0xcb>
 138:	4c 89 f7             	mov    rdi,r14
 13b:	48 89 ee             	mov    rsi,rbp
 13e:	e8 00 00 00 00       	call   143 <main+0xae>
 143:	48 89 c3             	mov    rbx,rax
 146:	4c 39 e3             	cmp    rbx,r12
 149:	0f 95 c3             	setne  bl
 14c:	48 0f b6 db          	movzx  rbx,bl
 150:	48 85 db             	test   rbx,rbx
 153:	0f 84 0c 00 00 00    	je     165 <main+0xd0>
 159:	48 c7 c0 64 00 00 00 	mov    rax,0x64
 160:	e9 08 00 00 00       	jmp    16d <main+0xd8>
 165:	4c 89 ef             	mov    rdi,r13
 168:	e8 00 00 00 00       	call   16d <main+0xd8>
 16d:	48 83 c4 30          	add    rsp,0x30
 171:	41 5f                	pop    r15
 173:	41 5e                	pop    r14
 175:	41 5d                	pop    r13
 177:	41 5c                	pop    r12
 179:	5d                   	pop    rbp
 17a:	5b                   	pop    rbx
 17b:	c3                   	ret