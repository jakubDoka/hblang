structs 1.odher_pass:
	mov rax, 0x18
	mov rdx, rax
	call :memcpy
	ret
structs 1.Ty.sum:
	sub rsp, 0x10
	lea rax, [rsp]
	mov [rax], rdi
	mov [rax+0x08], rsi
	sub rdi, 0x02
	mov [rax], rdi
	add rsi, 0x01
	mov [rax+0x08], rsi
	sub rdi, rsi
	mov rax, rdi
	add rsp, 0x10
	ret
structs 1.pass:
	mov rax, [rdi]
	sub rax, 0x01
	mov rcx, [rdi+0x08]
	mov [rdi], rax
	add rax, 0x01
	mov [rdi], rax
	sub rax, rcx
	ret
main:
	push rbx
	sub rsp, 0x38
	lea rsi, [rsp]
	mov rax, 0x04
	mov [rsi], rax
	mov rax, 0x01
	mov [rsi+0x08], rax
	mov rax, 0x03
	mov [rsi+0x10], rax
	lea rbx, [rsp+0x18]
	mov rdi, rbx
	call :structs 1.odher_pass
	mov rax, [rbx+0x10]
	cmp rax, 0x03
	setnz al
	movzx rax, al
	mov rsi, [rbx+0x08]
	mov rdi, [rbx]
	test al, al
	jz :0
	mov rax, 0x00
	jmp :1
0:	call :structs 1.Ty.sum
	cmp rax, 0x00
	setnz al
	movzx rax, al
	test al, al
	jz :2
	mov rax, 0x64
1:	jmp :3
2:	mov rdi, rbx
	call :structs 1.pass
3:	add rsp, 0x38
	pop rbx
	ret
memcpy: