structs 1.odher_pass:
	mov rax, 0x18
	mov rdx, rax
	call :memcpy
	ret
structs 1.Ty.sum:
	sub rsp, 0x10
	lea rax, [rsp]
	mov [rax], rdi
	mov [rax+0x08], rsi
	sub rdi, 0x02
	mov [rax], rdi
	add rsi, 0x01
	mov [rax+0x08], rsi
	sub rdi, rsi
	mov rax, rdi
	add rsp, 0x10
	ret
structs 1.pass:
	mov rax, [rdi]
	sub rax, 0x01
	mov [rdi], rax
	add rax, 0x01
	mov [rdi], rax
	mov rcx, [rdi+0x08]
	sub rax, rcx
	ret
main:
	push rbx
	push rbp
	push r12
	push r13
	push r14
	push r15
	sub rsp, 0x48
	lea rbx, [rsp+0x18]
	mov rbp, 0x04
	mov [rbx], rbp
	mov rbp, 0x03
	lea r12, [rsp+0x30]
	mov r13, 0x08
	mov [rsp], rbx
	add qword ptr [rsp], 0x08
	lea r15, [0x0000000000000007]
	mov [rsp+0x08], r15
	mov rdi, [rsp]
	mov rsi, [rsp+0x08]
	mov rdx, r13
	call :memcpy
	mov [rbx+0x10], rbp
	mov rdi, r12
	mov rsi, rbx
	call :structs 1.odher_pass
	mov rbx, [r12+0x10]
	cmp rbx, 0x03
	setnz bl
	movzx rbx, bl
	mov rbp, [r12+0x08]
	mov r13, [r12]
	test bl, bl
	jz :0
	mov rax, 0x00
	jmp :1
0:	mov rdi, r13
	mov rsi, rbp
	call :structs 1.Ty.sum
	mov rbx, rax
	cmp rbx, 0x00
	setnz bl
	movzx rbx, bl
	test bl, bl
	jz :2
	mov rax, 0x64
1:	jmp :3
2:	mov rdi, r12
	call :structs 1.pass
3:	add rsp, 0x48
	pop r15
	pop r14
	pop r13
	pop r12
	pop rbp
	pop rbx
	ret
memcpy: