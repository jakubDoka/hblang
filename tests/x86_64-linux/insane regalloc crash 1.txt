main:
	sub rsp, 0x300
	mov cl, [rsp]
	mov rax, [rsp+0x08]
	mov [rsp], rax
	mov rax, [rsp+0x10]
	mov [rsp+0x08], rax
	test cl, cl
	jz :0
	jmp :1
0:	mov rax, [rsp+0x20]
	mov cl, [rsp+0x18]
	mov [rsp+0x18], rax
	mov rax, [rsp+0x28]
	mov [rsp+0x20], rax
	test cl, cl
	jz :2
1:	jmp :3
2:	mov rax, [rsp+0x38]
	mov cl, [rsp+0x30]
	mov [rsp+0x30], rax
	mov rax, [rsp+0x40]
	mov [rsp+0x38], rax
	test cl, cl
	jz :4
3:	jmp :5
4:	mov rax, [rsp+0x50]
	mov cl, [rsp+0x48]
	mov [rsp+0x48], rax
	mov rax, [rsp+0x58]
	mov [rsp+0x50], rax
	test cl, cl
	jz :6
5:	jmp :7
6:	mov rax, [rsp+0x68]
	mov cl, [rsp+0x60]
	mov [rsp+0x60], rax
	mov rax, [rsp+0x70]
	mov [rsp+0x68], rax
	test cl, cl
	jz :8
7:	jmp :9
8:	mov rax, [rsp+0x80]
	mov cl, [rsp+0x78]
	mov [rsp+0x78], rax
	mov rax, [rsp+0x88]
	mov [rsp+0x80], rax
	test cl, cl
	jz :10
9:	jmp :11
a:	mov rax, [rsp+0x98]
	mov cl, [rsp+0x90]
	mov [rsp+0x90], rax
	mov rax, [rsp+0xA0]
	mov [rsp+0x98], rax
	test cl, cl
	jz :12
b:	jmp :13
c:	mov rax, [rsp+0xB0]
	mov cl, [rsp+0xA8]
	mov [rsp+0xA8], rax
	mov rax, [rsp+0xB8]
	mov [rsp+0xB0], rax
	test cl, cl
	jz :14
d:	jmp :15
e:	mov rax, [rsp+0xC8]
	mov cl, [rsp+0xC0]
	mov [rsp+0xC0], rax
	mov rax, [rsp+0xD0]
	mov [rsp+0xC8], rax
	test cl, cl
	jz :16
f:	jmp :17
10:	mov rax, [rsp+0xE0]
	mov cl, [rsp+0xD8]
	mov [rsp+0xD8], rax
	mov rax, [rsp+0xE8]
	mov [rsp+0xE0], rax
	test cl, cl
	jz :18
11:	jmp :19
12:	mov rax, [rsp+0xF8]
	mov cl, [rsp+0xF0]
	mov [rsp+0xF0], rax
	mov rax, [rsp+0x100]
	mov [rsp+0xF8], rax
	test cl, cl
	jz :20
13:	jmp :21
14:	mov rax, [rsp+0x110]
	mov cl, [rsp+0x108]
	mov [rsp+0x108], rax
	mov rax, [rsp+0x118]
	mov [rsp+0x110], rax
	test cl, cl
	jz :22
15:	jmp :23
16:	mov rax, [rsp+0x128]
	mov cl, [rsp+0x120]
	mov [rsp+0x120], rax
	mov rax, [rsp+0x130]
	mov [rsp+0x128], rax
	test cl, cl
	jz :24
17:	jmp :25
18:	mov rax, [rsp+0x140]
	mov cl, [rsp+0x138]
	mov [rsp+0x138], rax
	mov rax, [rsp+0x148]
	mov [rsp+0x140], rax
	test cl, cl
	jz :26
19:	jmp :27
1a:	mov rax, [rsp+0x158]
	mov cl, [rsp+0x150]
	mov [rsp+0x150], rax
	mov rax, [rsp+0x160]
	mov [rsp+0x158], rax
	test cl, cl
	jz :28
1b:	jmp :29
1c:	mov rax, [rsp+0x170]
	mov cl, [rsp+0x168]
	mov [rsp+0x168], rax
	mov rax, [rsp+0x178]
	mov [rsp+0x170], rax
	test cl, cl
	jz :30
1d:	jmp :31
1e:	mov rax, [rsp+0x188]
	mov cl, [rsp+0x180]
	mov [rsp+0x180], rax
	mov rax, [rsp+0x190]
	mov [rsp+0x188], rax
	test cl, cl
	jz :32
1f:	jmp :33
20:	mov rax, [rsp+0x1A0]
	mov cl, [rsp+0x198]
	mov [rsp+0x198], rax
	mov rax, [rsp+0x1A8]
	mov [rsp+0x1A0], rax
	test cl, cl
	jz :34
21:	jmp :35
22:	mov rax, [rsp+0x1B8]
	mov cl, [rsp+0x1B0]
	mov [rsp+0x1B0], rax
	mov rax, [rsp+0x1C0]
	mov [rsp+0x1B8], rax
	test cl, cl
	jz :36
23:	jmp :37
24:	mov rax, [rsp+0x1D0]
	mov cl, [rsp+0x1C8]
	mov [rsp+0x1C8], rax
	mov rax, [rsp+0x1D8]
	mov [rsp+0x1D0], rax
	test cl, cl
	jz :38
25:	jmp :39
26:	mov rax, [rsp+0x1E8]
	mov cl, [rsp+0x1E0]
	mov [rsp+0x1E0], rax
	mov rax, [rsp+0x1F0]
	mov [rsp+0x1E8], rax
	test cl, cl
	jz :40
27:	jmp :41
28:	mov rax, [rsp+0x200]
	mov cl, [rsp+0x1F8]
	mov [rsp+0x1F8], rax
	mov rax, [rsp+0x208]
	mov [rsp+0x200], rax
	test cl, cl
	jz :42
29:	jmp :43
2a:	mov rax, [rsp+0x218]
	mov cl, [rsp+0x210]
	mov [rsp+0x210], rax
	mov rax, [rsp+0x220]
	mov [rsp+0x218], rax
	test cl, cl
	jz :44
2b:	jmp :45
2c:	mov rax, [rsp+0x230]
	mov cl, [rsp+0x228]
	mov [rsp+0x228], rax
	mov rax, [rsp+0x238]
	mov [rsp+0x230], rax
	test cl, cl
	jz :46
2d:	jmp :47
2e:	mov rax, [rsp+0x248]
	mov cl, [rsp+0x240]
	mov [rsp+0x240], rax
	mov rax, [rsp+0x250]
	mov [rsp+0x248], rax
	test cl, cl
	jz :48
2f:	jmp :49
30:	mov rax, [rsp+0x260]
	mov cl, [rsp+0x258]
	mov [rsp+0x258], rax
	mov rax, [rsp+0x268]
	mov [rsp+0x260], rax
	test cl, cl
	jz :50
31:	jmp :51
32:	mov rax, [rsp+0x278]
	mov cl, [rsp+0x270]
	mov [rsp+0x270], rax
	mov rax, [rsp+0x280]
	mov [rsp+0x278], rax
	test cl, cl
	jz :52
33:	jmp :53
34:	mov rax, [rsp+0x290]
	mov cl, [rsp+0x288]
	mov [rsp+0x288], rax
	mov rax, [rsp+0x298]
	mov [rsp+0x290], rax
	test cl, cl
	jz :54
35:	jmp :55
36:	mov rax, [rsp+0x2A8]
	mov cl, [rsp+0x2A0]
	mov [rsp+0x2A0], rax
	mov rax, [rsp+0x2B0]
	mov [rsp+0x2A8], rax
	test cl, cl
	jz :56
37:	jmp :57
38:	mov rax, [rsp+0x2C0]
	mov cl, [rsp+0x2B8]
	mov [rsp+0x2B8], rax
	mov rax, [rsp+0x2C8]
	mov [rsp+0x2C0], rax
	test cl, cl
	jz :58
39:	jmp :59
3a:	mov rax, [rsp+0x2D8]
	mov cl, [rsp+0x2D0]
	mov [rsp+0x2D0], rax
	mov rax, [rsp+0x2E0]
	mov [rsp+0x2D8], rax
	test cl, cl
	jz :60
3b:	jmp :61
3c:	mov rax, [rsp+0x2F0]
	mov cl, [rsp+0x2E8]
	mov [rsp+0x2E8], rax
	mov rax, [rsp+0x2F8]
	mov [rsp+0x2F0], rax
	test cl, cl
	jz :63
3d:	jmp :63
3f:	xor eax, eax
	add rsp, 0x300
	ret