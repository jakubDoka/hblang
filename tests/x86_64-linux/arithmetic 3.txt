"arithmetic 3".one:
	mov rax, 0x01
	ret
"arithmetic 3".zero:
	mov rax, 0x00
	ret
"arithmetic 3".cond:
	mov rax, rdi
	ret
"arithmetic 3".mne:
	mov rax, 0xFFFFFFFFFFFFFFFF
	ret
"arithmetic 3".mero:
	mov rax, 0x00
	ret
main:
	push rbx
	push rbp
	push r12
	call 0x0000000000000005
	mov rbx, rax
	call 0x0000000000000005
	mov rbp, rax
	cmp rbx, rbp
	setb r12b
	movzx r12, r12b
	mov rdi, r12
	call 0x0000000000000005
	mov r12, rax
	test r12, r12
	jz 0x0000000000000012
	mov rax, 0x01
	jmp 0x000000000000002B
	cmp rbx, rbx
	setb r12b
	movzx r12, r12b
	mov rdi, r12
	call 0x0000000000000005
	mov r12, rax
	test r12, r12
	jz 0x0000000000000012
	mov rax, 0x02
	jmp 0x000000000000002B
	cmp rbx, rbp
	setbe r12b
	movzx r12, r12b
	mov rdi, r12
	call 0x0000000000000005
	mov r12, rax
	test r12, r12
	jz 0x0000000000000012
	mov rax, 0x03
	jmp 0x000000000000002B
	cmp rbp, rbx
	setnbe r12b
	movzx r12, r12b
	mov rdi, r12
	call 0x0000000000000005
	mov r12, rax
	test r12, r12
	jz 0x0000000000000012
	mov rax, 0x04
	jmp 0x000000000000002B
	cmp rbx, rbx
	setnbe r12b
	movzx r12, r12b
	mov rdi, r12
	call 0x0000000000000005
	mov r12, rax
	test r12, r12
	jz 0x0000000000000012
	mov rax, 0x05
	jmp 0x000000000000002B
	cmp rbp, rbx
	setnb bpl
	movzx rbp, bpl
	mov rdi, rbp
	call 0x0000000000000005
	mov rbx, rax
	test rbx, rbx
	jz 0x0000000000000012
	mov rax, 0x06
	jmp 0x000000000000003B
	call 0x0000000000000005
	mov rbx, rax
	call 0x0000000000000005
	mov rbp, rax
	cmp rbx, rbp
	setnle r12b
	movzx r12, r12b
	mov rdi, r12
	call 0x0000000000000005
	mov r12, rax
	test r12, r12
	jz 0x0000000000000012
	mov rax, 0x07
	jmp 0x000000000000002B
	cmp rbx, rbx
	setnle r12b
	movzx r12, r12b
	mov rdi, r12
	call 0x0000000000000005
	mov r12, rax
	test r12, r12
	jz 0x0000000000000012
	mov rax, 0x08
	jmp 0x000000000000002B
	cmp rbx, rbp
	setnl r12b
	movzx r12, r12b
	mov rdi, r12
	call 0x0000000000000005
	mov r12, rax
	test r12, r12
	jz 0x0000000000000012
	mov rax, 0x09
	jmp 0x000000000000002B
	cmp rbp, rbx
	setl r12b
	movzx r12, r12b
	mov rdi, r12
	call 0x0000000000000005
	mov r12, rax
	test r12, r12
	jz 0x0000000000000012
	mov rax, 0x0A
	jmp 0x000000000000002B
	cmp rbx, rbx
	setl r12b
	movzx r12, r12b
	mov rdi, r12
	call 0x0000000000000005
	mov r12, rax
	test r12, r12
	jz 0x0000000000000012
	mov rax, 0x0B
	jmp 0x000000000000002B
	cmp rbp, rbx
	setle bpl
	movzx rbp, bpl
	mov rdi, rbp
	call 0x0000000000000005
	mov rbx, rax
	test rbx, rbx
	jz 0x0000000000000012
	mov rax, 0x0C
	jmp 0x0000000000000030
	call 0x0000000000000005
	mov rbx, rax
	call 0x0000000000000005
	mov rbp, rax
	cmp rbx, rbp
	setb r12b
	movzx r12, r12b
	test r12, r12
	jz 0x0000000000000012
	mov rax, 0x0D
	jmp 0x0000000000000020
	cmp rbx, rbx
	setb r12b
	movzx r12, r12b
	test r12, r12
	jz 0x0000000000000012
	mov rax, 0x0E
	jmp 0x0000000000000020
	cmp rbx, rbp
	setbe r12b
	movzx r12, r12b
	test r12, r12
	jz 0x0000000000000012
	mov rax, 0x0F
	jmp 0x0000000000000020
	cmp rbp, rbx
	setnbe r12b
	movzx r12, r12b
	test r12, r12
	jz 0x0000000000000012
	mov rax, 0x10
	jmp 0x0000000000000020
	cmp rbx, rbx
	setnbe r12b
	movzx r12, r12b
	test r12, r12
	jz 0x0000000000000012
	mov rax, 0x11
	jmp 0x0000000000000020
	cmp rbp, rbx
	setnb bpl
	movzx rbp, bpl
	test rbp, rbp
	jz 0x0000000000000012
	mov rax, 0x12
	jmp 0x000000000000002C
	call 0x0000000000000005
	mov rbx, rax
	call 0x0000000000000005
	cmp rbx, rax
	setnle cl
	movzx rcx, cl
	test rcx, rcx
	jz 0x0000000000000012
	mov rax, 0x13
	jmp 0x000000000000001F
	cmp rbx, rbx
	setnle cl
	movzx rcx, cl
	test rcx, rcx
	jz 0x0000000000000012
	mov rax, 0x14
	jmp 0x000000000000001F
	cmp rbx, rax
	setnl cl
	movzx rcx, cl
	test rcx, rcx
	jz 0x0000000000000012
	mov rax, 0x15
	jmp 0x000000000000001F
	cmp rax, rbx
	setl cl
	movzx rcx, cl
	test rcx, rcx
	jz 0x0000000000000012
	mov rax, 0x16
	jmp 0x000000000000001F
	cmp rbx, rbx
	setl cl
	movzx rcx, cl
	test rcx, rcx
	jz 0x0000000000000012
	mov rax, 0x17
	jmp 0x000000000000001F
	cmp rax, rbx
	setle cl
	movzx rcx, cl
	test rcx, rcx
	jz 0x0000000000000012
	mov rax, 0x18
	jmp 0x000000000000001F
	cmp rbx, rbx
	setnz cl
	movzx rcx, cl
	test rcx, rcx
	jz 0x0000000000000012
	mov rax, 0x19
	jmp 0x000000000000001F
	cmp rbx, rax
	setz cl
	movzx rcx, cl
	test rcx, rcx
	jz 0x0000000000000012
	mov rax, 0x1A
	jmp 0x000000000000000C
	mov rax, 0x00
	pop r12
	pop rbp
	pop rbx
	ret