nullable types 2.take:
	mov rax, [rdi]
	add rax, 0x01
	mov [rdi], rax
	ret
main:
	push rbx
	sub rsp, 0x18
	mov rcx, 0x00
	lea rbx, [rsp]
	mov rax, 0x01
	mov [rbx], al
	mov rax, 0x00
	mov [rbx+0x08], rax
	mov [rbx+0x10], rax
	mov rax, 0x01
	test cl, cl
	jz :0
	jmp :1
0:	test cl, cl
	jz :2
	mov rax, 0x02
1:	jmp :3
2:	test cl, cl
	jz :4
	mov rax, 0x03
3:	jmp :5
4:	mov [rbx+0x10], rax
	mov rdi, rbx
	add rdi, 0x08
	call :nullable types 2.take
	mov rax, [rbx+0x08]
	mov rcx, [rbx+0x10]
	sub rax, rcx
5:	add rsp, 0x18
	pop rbx
	ret