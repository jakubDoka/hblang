nullable types 2.take:
	mov rax, [rdi]
	add rax, 0x01
	mov [rdi], rax
	ret
main:
	push rbx
	push rbp
	push r12
	sub rsp, 0x30
	mov rbx, 0x01
	mov rbp, 0x00
	lea r12, [rsp]
	mov [r12], bl
	cmp bl, bpl
	setz bl
	movzx rbx, bl
	mov rbp, 0x00
	mov [r12+0x08], rbp
	mov [r12+0x10], rbp
	mov rbp, 0x01
	test bl, bl
	jz :0
	mov rax, rbp
	jmp :1
0:	test bl, bl
	jz :2
	mov rax, 0x02
1:	jmp :3
2:	test bl, bl
	jz :4
	mov rax, 0x03
3:	jmp :5
4:	mov [r12+0x10], rbp
	mov rbx, r12
	add rbx, 0x08
	mov rdi, rbx
	call :nullable types 2.take
	mov rax, [r12+0x08]
	mov rcx, [r12+0x10]
	sub rax, rcx
5:	add rsp, 0x30
	pop r12
	pop rbp
	pop rbx
	ret