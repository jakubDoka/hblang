nullable types 2.take:
	sub rsp, 0x10
	mov [rsp], rdi
	mov rcx, [rsp]
	mov rax, [rcx]
	add rax, 0x01
	mov [rcx], rax
	add rsp, 0x10
	ret
main:
	push rbx
	push rbp
	sub rsp, 0x48
	lea rsi, [rsp]
	mov byte ptr [rsp], 0x01
	mov rax, 0x00
	mov [rsp+0x08], rax
	mov [rsp+0x10], rax
	mov byte ptr [rsp+0x18], 0x01
	mov [rsp+0x20], rax
	mov [rsp+0x28], rax
	mov byte ptr [rsp+0x30], 0x01
	mov [rsp+0x38], rax
	mov [rsp+0x40], rax
	mov rbp, 0x00
	mov bl, [rsp]
	mov dl, [rsp+0x18]
	mov cl, [rsp+0x30]
	mov rax, 0x01
	cmp bl, bpl
	jnz :0
	jmp :1
0:	cmp dl, bpl
	jnz :2
	mov rax, 0x02
1:	jmp :3
2:	cmp cl, bpl
	jnz :4
	mov rax, 0x03
3:	jmp :5
4:	mov [rsp+0x10], rax
	mov rdi, rsi
	add rdi, 0x08
	call :nullable types 2.take
	mov rax, [rsp+0x08]
	mov rcx, [rsp+0x10]
	sub rax, rcx
5:	add rsp, 0x48
	pop rbp
	pop rbx
	ret