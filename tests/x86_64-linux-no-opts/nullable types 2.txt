nullable types 2.take:
	sub rsp, 0x10
	lea rax, [rsp]
	mov [rax], rdi
	mov rcx, [rax]
	mov rax, [rcx]
	add rax, 0x01
	mov [rcx], rax
	add rsp, 0x10
	ret
main:
	push rbx
	push rbp
	push r12
	sub rsp, 0x48
	lea r12, [rsp]
	mov rbx, 0x01
	mov [r12], bl
	mov rdx, 0x00
	mov [r12+0x08], rdx
	mov [r12+0x10], rdx
	lea rcx, [rsp+0x18]
	mov [rcx], bl
	mov [rcx+0x08], rdx
	mov [rcx+0x10], rdx
	lea rax, [rsp+0x30]
	mov [rax], bl
	mov [rax+0x08], rdx
	mov [rax+0x10], rdx
	mov rbp, 0x00
	mov bl, [r12]
	mov dl, [rcx]
	mov cl, [rax]
	mov rax, 0x01
	cmp bl, bpl
	jnz :0
	jmp :1
0:	cmp dl, bpl
	jnz :2
	mov rax, 0x02
1:	jmp :3
2:	cmp cl, bpl
	jnz :4
	mov rax, 0x03
3:	jmp :5
4:	mov [r12+0x10], rax
	mov rdi, r12
	add rdi, 0x08
	call :nullable types 2.take
	mov rax, [r12+0x08]
	mov rcx, [r12+0x10]
	sub rax, rcx
5:	add rsp, 0x48
	pop r12
	pop rbp
	pop rbx
	ret