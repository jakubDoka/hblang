structs 1.odher_pass:
	lea rcx, [rsp+0x08]
	mov rax, 0x18
	mov rsi, rcx
	mov rdx, rax
	call :memcpy
	ret
structs 1.Ty.sum:
	sub rsp, 0x10
	mov [rsp], rdi
	mov [rsp+0x08], rsi
	mov rax, [rsp]
	sub rax, 0x02
	mov [rsp], rax
	mov rax, [rsp+0x08]
	add rax, 0x01
	mov [rsp+0x08], rax
	mov rcx, [rsp+0x08]
	mov rax, [rsp]
	sub rax, rcx
	add rsp, 0x10
	ret
structs 1.pass:
	sub rsp, 0x10
	mov [rsp], rdi
	mov rcx, [rsp]
	mov rax, [rcx]
	sub rax, 0x01
	mov [rcx], rax
	mov rcx, [rsp]
	mov rax, [rcx]
	add rax, 0x01
	mov [rcx], rax
	mov rax, [rsp]
	mov rcx, [rax+0x08]
	mov rax, [rax]
	sub rax, rcx
	add rsp, 0x10
	ret
main:
	push rbx
	push rbp
	sub rsp, 0x48
	lea rdx, [rsp+0x18]
	mov rax, 0x04
	mov [rsp+0x18], rax
	lea rax, [0x0000000000000007]
	mov rcx, 0x03
	mov rax, [rax]
	mov [rsp+0x20], rax
	mov [rsp+0x28], rcx
	mov rax, 0x18
	lea rbp, [rsp]
	mov rsi, rdx
	mov rdi, rbp
	mov rdx, rax
	call :memcpy
	lea rbx, [rsp+0x30]
	mov rdi, rbx
	call :structs 1.odher_pass
	mov rax, [rsp+0x40]
	cmp rax, 0x03
	setnz al
	movzx rax, al
	mov rdi, [rsp+0x30]
	test al, al
	jz :0
	mov rax, 0x00
	jmp :1
0:	mov rsi, [rsp+0x38]
	call :structs 1.Ty.sum
	cmp rax, 0x00
	setnz al
	movzx rax, al
	test al, al
	jz :2
	mov rax, 0x64
1:	jmp :3
2:	mov rdi, rbx
	call :structs 1.pass
3:	add rsp, 0x48
	pop rbp
	pop rbx
	ret
memcpy: