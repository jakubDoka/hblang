eopll 2.epoll_wait:
	sub rsp, 0x28
	mov [rsp], rdi
	mov [rsp+0x08], rsi
	mov [rsp+0x10], rdx
	mov [rsp+0x18], rcx
	mov rdi, 0xE8
	mov rsi, [rsp]
	mov rdx, [rsp+0x08]
	mov rcx, [rsp+0x10]
	mov r8, [rsp+0x18]
	mov rax, rdi
	mov rdi, rsi
	mov rsi, rdx
	mov rdx, rcx
	mov r10, r8
	syscall
	mov [rsp+0x20], rax
	add rsp, 0x28
	ret
main:
	push rbx
	push rbp
	push r12
	push r13
	sub rsp, 0x28
	mov rdi, 0x123
	mov r13, 0x00
	mov rax, rdi
	mov rdi, r13
	syscall
	mov rcx, rax
	mov rax, 0x00
	mov [rsp+0x18], ecx
	test al, al
	jz :0
	mov rax, 0x01
	jmp :1
0:	mov [rsp+0x10], r13
	mov r12, 0x10
	mov rbp, 0xFFFFFFFFFFFFFFFF
	lea rbx, [rsp]
3:	mov rax, [rsp+0x10]
	cmp rax, 0x00
	setz cl
	movzx rcx, cl
	mov eax, [rsp+0x18]
	test cl, cl
	jz :2
	mov rax, r13
1:	add rsp, 0x28
	pop r13
	pop r12
	pop rbp
	pop rbx
	ret
2:	mov rdi, rax
	movsxd rdi, edi
	mov rsi, rbx
	mov rdx, r12
	mov rcx, rbp
	call :eopll 2.epoll_wait
	mov rax, [rsp+0x10]
	add rax, 0x01
	mov [rsp+0x10], rax
	jmp :3