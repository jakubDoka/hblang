float arithmetic 2.sin:
	sub rsp, 0x20
	movss [rsp+0x10], xmm0
	mov rax, 0x40490FDB
	mov r8, 0x3FE0000000000000
	mov rdi, 0x40000000
	mov rdx, 0x3F000000
	mov rsi, 0x04
	lea rcx, [0x0000000000000007]
	movd xmm0, eax
	movss [rsp+0x14], xmm0
	mov dword ptr [rsp+0x18], 0x100
	mov eax, [rsp+0x18]
	movss xmm1, dword ptr [rsp+0x14]
	movss xmm0, dword ptr [rsp+0x10]
	movsxd rax, eax
	movq xmm5, r8
	cvtss2sd xmm0, xmm0
	movd xmm2, edx
	cvtss2sd xmm4, xmm1
	movd xmm3, edi
	cvtsi2sd xmm1, rax
	mulsd xmm0, xmm5
	mulsd xmm0, xmm1
	divsd xmm0, xmm4
	cvttsd2si rax, xmm0
	mov [rsp], rax
	mov rdx, [rsp]
	mov eax, [rsp+0x18]
	cvtsi2ss xmm1, edx
	movsxd rax, eax
	movss xmm4, dword ptr [rsp+0x14]
	mulss xmm1, xmm3
	movss xmm0, dword ptr [rsp+0x10]
	cvtsi2ss xmm3, eax
	mulss xmm1, xmm4
	divss xmm1, xmm3
	subss xmm0, xmm1
	movss [rsp+0x1C], xmm0
	mov eax, [rsp+0x18]
	movsxd r8, eax
	mov rdi, [rsp]
	mov rax, r8
	xor rdx, rdx
	idiv rsi
	sub r8, 0x01
	add rdi, rax
	and rdi, r8
	mov [rsp+0x08], rdi
	mov eax, [rsp+0x18]
	movsxd rdx, eax
	mov rax, [rsp]
	sub rdx, 0x01
	and rax, rdx
	mov [rsp], rax
	mov rax, [rsp]
	mov rdi, [rsp+0x08]
	imul rax, rsi
	imul rdi, rsi
	mov rdx, rcx
	add rdx, rax
	mov rax, rcx
	add rax, rdi
	movss xmm0, dword ptr [rdx]
	movss xmm3, dword ptr [rsp+0x1C]
	mulss xmm2, xmm0
	movss xmm1, dword ptr [rax]
	mulss xmm2, xmm3
	subss xmm1, xmm2
	mulss xmm1, xmm3
	addss xmm0, xmm1
	add rsp, 0x20
	ret
main:
	sub rsp, 0x08
	mov rax, 0x447A0000
	movd xmm0, eax
	movss [rsp], xmm0
	movss xmm0, dword ptr [rsp]
	call :float arithmetic 2.sin
	movss xmm1, dword ptr [rsp]
	mulss xmm0, xmm1
	cvttss2si rax, xmm0
	sub rax, 0x33A
	add rsp, 0x08
	ret