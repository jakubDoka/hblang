false positive in cycle detection.main.Wrap(Wrapper = false positive in cycle detection.main.Wrapper)(T = false positive in cycle detection.main.Wrap(Wrapper = false positive in cycle detection.main.Wrapper)(T = false positive in cycle detection.main)).test:
	sub rsp, 0x08
	call :false positive in cycle detection.main.Wrap(Wrapper = false positive in cycle detection.main.Wrapper)(T = false positive in cycle detection.main).test
	add rsp, 0x08
	ret
false positive in cycle detection.main.Wrap(Wrapper = false positive in cycle detection.main.Wrapper)(T = false positive in cycle detection.main).test:
	sub rsp, 0x08
	call :false positive in cycle detection.main.test
	add rsp, 0x08
	ret
false positive in cycle detection.main.test:
	ret
main:
	sub rsp, 0x18
	mov rax, 0x80000000
	mov [rsp], eax
	mov rax, 0x80000001
	mov [rsp+0x04], eax
	mov dword ptr [rsp+0x08], 0x70000002
	mov dword ptr [rsp+0x0C], 0x70000003
	mov dword ptr [rsp+0x10], 0x70000004
	call :false positive in cycle detection.main.Wrap(Wrapper = false positive in cycle detection.main.Wrapper)(T = false positive in cycle detection.main.Wrap(Wrapper = false positive in cycle detection.main.Wrapper)(T = false positive in cycle detection.main)).test
	xor rax, rax
	add rsp, 0x18
	ret