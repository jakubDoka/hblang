loops 16 (for different lengths error).for_loop_length_mismatch:
	ud2
main:
	sub rsp, 0x68
	mov qword ptr [rsp+0x28], 0x00
	mov qword ptr [rsp+0x30], 0x00
	mov byte ptr [rsp+0x58], 0x01
	mov byte ptr [rsp+0x59], 0x02
	mov byte ptr [rsp+0x5A], 0x03
	lea rax, [rsp+0x58]
	mov [rsp+0x18], rax
	mov qword ptr [rsp+0x20], 0x03
	mov rcx, 0x02
	mov rax, [rsp+0x18]
	mov [rsp+0x38], rax
	mov rax, [rsp+0x20]
	sub rcx, [rsp+0x30]
	cmp rax, rcx
	jz :2
	lea rax, [0x0000000000000007]
	mov [rsp+0x40], rax
	mov qword ptr [rsp+0x48], 0x26
	mov rax, 0x200000007
	mov [rsp+0x50], rax
	lea rsi, [rsp+0x40]
	mov rdx, 0x18
	lea rdi, [rsp]
	call :memcpy
	call :loops 16 (for different lengths error).for_loop_length_mismatch
2:	mov rcx, [rsp+0x30]
	cmp rcx, 0x02
	setb al
	movzx rax, al
	test al, al
	jz :1
	mov rax, [rsp+0x38]
	mov al, [rax]
	movzx rax, al
	add rcx, rax
	add [rsp+0x28], rcx
	mov rax, [rsp+0x30]
	inc rax
	mov [rsp+0x30], rax
	mov rax, [rsp+0x38]
	inc rax
	mov [rsp+0x38], rax
	jmp :2
1:	mov rax, [rsp+0x28]
	add rsp, 0x68
	ret
memcpy: