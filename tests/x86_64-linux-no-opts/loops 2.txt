loops 2.square:
	push rbx
	sub rsp, 0x20
	mov [rsp], rdi
	mov rbx, 0x00
	mov [rsp+0x08], rbx
	mov [rsp+0x10], rbx
2:	mov rcx, [rsp+0x10]
	mov rax, [rsp]
	cmp rcx, rax
	jnz :0
	mov rax, [rsp+0x08]
	add rsp, 0x20
	pop rbx
	ret
0:	mov [rsp+0x18], rbx
3:	mov rdx, [rsp+0x18]
	mov rcx, [rsp]
	mov rax, [rsp+0x10]
	cmp rdx, rcx
	jnz :1
	add rax, 0x01
	mov [rsp+0x10], rax
	jmp :2
1:	mov rcx, rdx
	imul rcx, rax
	mov rax, [rsp+0x08]
	add rax, rcx
	mov [rsp+0x08], rax
	mov rax, [rsp+0x18]
	add rax, 0x01
	mov [rsp+0x18], rax
	jmp :3
main:
	sub rsp, 0x08
	mov rdi, 0x03
	call :loops 2.square
	add rsp, 0x08
	ret