arithmetic 3.one:
	mov rax, 0x01
	ret
arithmetic 3.zero:
	xor rax, rax
	ret
arithmetic 3.cond:
	sub rsp, 0x10
	mov [rsp], dil
	mov al, [rsp]
	add rsp, 0x10
	ret
arithmetic 3.mne:
	mov rax, 0xFF
	ret
arithmetic 3.mero:
	xor rax, rax
	ret
main:
	sub rsp, 0x28
	call :arithmetic 3.one
	mov [rsp+0x02], al
	mov al, [rsp+0x02]
	mov [rsp+0x0E], al
	call :arithmetic 3.zero
	mov [rsp+0x04], al
	mov al, [rsp+0x04]
	mov [rsp+0x03], al
	mov cl, [rsp+0x0E]
	mov al, [rsp+0x03]
	cmp cl, al
	setb dil
	movzx rdi, dil
	call :arithmetic 3.cond
	mov [rsp+0x05], al
	mov al, [rsp+0x05]
	test al, al
	jz :0
	mov rax, 0x01
	jmp :1
0:	mov al, [rsp+0x0E]
	cmp al, al
	setb dil
	movzx rdi, dil
	call :arithmetic 3.cond
	mov [rsp+0x06], al
	mov al, [rsp+0x06]
	test al, al
	jz :2
	mov rax, 0x02
1:	jmp :3
2:	mov cl, [rsp+0x03]
	mov al, [rsp+0x0E]
	cmp al, cl
	setbe dil
	movzx rdi, dil
	call :arithmetic 3.cond
	mov [rsp+0x07], al
	mov al, [rsp+0x07]
	test al, al
	jz :4
	mov rax, 0x03
3:	jmp :5
4:	mov cl, [rsp+0x03]
	mov al, [rsp+0x0E]
	cmp cl, al
	setnbe dil
	movzx rdi, dil
	call :arithmetic 3.cond
	mov [rsp+0x08], al
	mov al, [rsp+0x08]
	test al, al
	jz :6
	mov rax, 0x04
5:	jmp :7
6:	mov al, [rsp+0x0E]
	cmp al, al
	setnbe dil
	movzx rdi, dil
	call :arithmetic 3.cond
	mov [rsp+0x09], al
	mov al, [rsp+0x09]
	test al, al
	jz :8
	mov rax, 0x05
7:	jmp :9
8:	mov cl, [rsp+0x03]
	mov al, [rsp+0x0E]
	cmp cl, al
	setnb dil
	movzx rdi, dil
	call :arithmetic 3.cond
	mov [rsp+0x0A], al
	mov al, [rsp+0x0A]
	test al, al
	jz :10
	mov rax, 0x06
9:	jmp :11
a:	call :arithmetic 3.mne
	mov [rsp+0x0C], al
	mov al, [rsp+0x0C]
	mov [rsp+0x0B], al
	call :arithmetic 3.mero
	mov [rsp], al
	mov al, [rsp]
	mov [rsp+0x0D], al
	mov cl, [rsp+0x0B]
	mov al, [rsp+0x0D]
	cmp cl, al
	setnle dil
	movzx rdi, dil
	call :arithmetic 3.cond
	mov [rsp+0x13], al
	mov al, [rsp+0x13]
	test al, al
	jz :12
	mov rax, 0x07
b:	jmp :13
c:	mov al, [rsp+0x0B]
	cmp al, al
	setnle dil
	movzx rdi, dil
	call :arithmetic 3.cond
	mov [rsp+0x0F], al
	mov al, [rsp+0x0F]
	test al, al
	jz :14
	mov rax, 0x08
d:	jmp :15
e:	mov cl, [rsp+0x0D]
	mov al, [rsp+0x0B]
	cmp al, cl
	setnl dil
	movzx rdi, dil
	call :arithmetic 3.cond
	mov [rsp+0x11], al
	mov al, [rsp+0x11]
	test al, al
	jz :16
	mov rax, 0x09
f:	jmp :17
10:	mov cl, [rsp+0x0D]
	mov al, [rsp+0x0B]
	cmp cl, al
	setl dil
	movzx rdi, dil
	call :arithmetic 3.cond
	mov [rsp+0x12], al
	mov al, [rsp+0x12]
	test al, al
	jz :18
	mov rax, 0x0A
11:	jmp :19
12:	mov al, [rsp+0x0B]
	cmp al, al
	setl dil
	movzx rdi, dil
	call :arithmetic 3.cond
	mov [rsp+0x01], al
	mov al, [rsp+0x01]
	test al, al
	jz :20
	mov rax, 0x0B
13:	jmp :21
14:	mov cl, [rsp+0x0D]
	mov al, [rsp+0x0B]
	cmp cl, al
	setle dil
	movzx rdi, dil
	call :arithmetic 3.cond
	mov [rsp+0x14], al
	mov al, [rsp+0x14]
	test al, al
	jz :22
	mov rax, 0x0C
15:	jmp :23
16:	call :arithmetic 3.one
	mov [rsp+0x16], al
	mov al, [rsp+0x16]
	mov [rsp+0x15], al
	call :arithmetic 3.zero
	mov [rsp+0x18], al
	mov al, [rsp+0x18]
	mov [rsp+0x17], al
	mov cl, [rsp+0x15]
	mov al, [rsp+0x17]
	cmp cl, al
	jnb :24
	mov rax, 0x0D
17:	jmp :25
18:	cmp cl, cl
	jnb :26
	mov rax, 0x0E
19:	jmp :27
1a:	cmp cl, al
	jnbe :28
	mov rax, 0x0F
1b:	jmp :29
1c:	cmp al, cl
	jbe :30
	mov rax, 0x10
1d:	jmp :31
1e:	cmp cl, cl
	jbe :32
	mov rax, 0x11
1f:	jmp :33
20:	cmp al, cl
	jb :34
	mov rax, 0x12
21:	jmp :35
22:	call :arithmetic 3.mne
	mov [rsp+0x1A], al
	mov al, [rsp+0x1A]
	mov [rsp+0x19], al
	call :arithmetic 3.mero
	mov [rsp+0x10], al
	mov al, [rsp+0x10]
	mov [rsp+0x1B], al
	mov cl, [rsp+0x19]
	mov al, [rsp+0x1B]
	cmp cl, al
	jle :36
	mov rax, 0x13
23:	jmp :37
24:	cmp cl, cl
	jle :38
	mov rax, 0x14
25:	jmp :39
26:	cmp cl, al
	jl :40
	mov rax, 0x15
27:	jmp :41
28:	cmp al, cl
	jnl :42
	mov rax, 0x16
29:	jmp :43
2a:	cmp cl, cl
	jnl :44
	mov rax, 0x17
2b:	jmp :45
2c:	cmp al, cl
	jnle :46
	mov rax, 0x18
2d:	jmp :47
2e:	cmp cl, cl
	jz :48
	mov rax, 0x19
2f:	jmp :49
30:	cmp cl, al
	jnz :50
	mov rax, 0x1A
31:	jmp :51
32:	xor rax, rax
33:	add rsp, 0x28
	ret