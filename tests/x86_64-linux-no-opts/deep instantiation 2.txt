deep instantiation 2.S((((((((.Z)))))))).get:
	sub rsp, 0x08
	call :deep instantiation 2.S(((((((.Z))))))).get
	mov [rsp], eax
	mov eax, [rsp]
	inc eax
	add rsp, 0x08
	ret
deep instantiation 2.S(((((((.Z))))))).get:
	sub rsp, 0x08
	call :deep instantiation 2.S((((((.Z)))))).get
	mov [rsp], eax
	mov eax, [rsp]
	inc eax
	add rsp, 0x08
	ret
deep instantiation 2.S((((((.Z)))))).get:
	sub rsp, 0x08
	call :deep instantiation 2.S(((((.Z))))).get
	mov [rsp], eax
	mov eax, [rsp]
	inc eax
	add rsp, 0x08
	ret
deep instantiation 2.S(((((.Z))))).get:
	sub rsp, 0x08
	call :deep instantiation 2.S((((.Z)))).get
	mov [rsp], eax
	mov eax, [rsp]
	inc eax
	add rsp, 0x08
	ret
deep instantiation 2.S((((.Z)))).get:
	sub rsp, 0x08
	call :deep instantiation 2.S(((.Z))).get
	mov [rsp], eax
	mov eax, [rsp]
	inc eax
	add rsp, 0x08
	ret
deep instantiation 2.S(((.Z))).get:
	sub rsp, 0x08
	call :deep instantiation 2.S((.Z)).get
	mov [rsp], eax
	mov eax, [rsp]
	inc eax
	add rsp, 0x08
	ret
deep instantiation 2.S((.Z)).get:
	sub rsp, 0x08
	call :deep instantiation 2.S(.Z).get
	mov [rsp], eax
	mov eax, [rsp]
	inc eax
	add rsp, 0x08
	ret
deep instantiation 2.S(.Z).get:
	sub rsp, 0x08
	call :deep instantiation 2.Z.get
	mov [rsp], eax
	mov eax, [rsp]
	inc eax
	add rsp, 0x08
	ret
deep instantiation 2.Z.get:
	xor rax, rax
	ret
main:
	sub rsp, 0x08
	call :deep instantiation 2.S((((((((.Z)))))))).get
	mov [rsp], eax
	mov eax, [rsp]
	cmp eax, 0x08
	setnz al
	movzx rax, al
	movzx eax, al
	add rsp, 0x08
	ret