structs 3 (call stress test).return_pair:
	mov byte ptr [rdi], 0x01
	mov qword ptr [rdi+0x08], 0x05
	ret
structs 3 (call stress test).return_triple:
	mov qword ptr [rdi], 0x01
	mov qword ptr [rdi+0x08], 0x02
	mov byte ptr [rdi+0x10], 0x03
	ret
structs 3 (call stress test).take_pair:
	sub rsp, 0x10
	mov [rsp], dil
	mov [rsp+0x08], rsi
	mov al, [rsp]
	mov rcx, [rsp+0x08]
	movzx rax, al
	add rax, rcx
	add rsp, 0x10
	ret
structs 3 (call stress test).take_triple:
	mov cl, [rsp+0x18]
	mov rdx, [rsp+0x10]
	mov rax, [rsp+0x08]
	movzx rcx, cl
	add rax, rdx
	add rax, rcx
	ret
main:
	push rbx
	push rbp
	push r12
	sub rsp, 0x48
	lea rdi, [rsp+0x18]
	call :structs 3 (call stress test).return_pair
	lea rax, [rsp+0x28]
	mov r12, rax
	mov rdi, r12
	call :structs 3 (call stress test).return_triple
	mov dil, [rsp+0x18]
	mov rsi, [rsp+0x20]
	call :structs 3 (call stress test).take_pair
	mov rbp, rax
	lea rbx, [rsp]
	mov rcx, 0x18
	mov rax, r12
	mov rdi, rbx
	mov rsi, rax
	mov rdx, rcx
	call :memcpy
	call :structs 3 (call stress test).take_triple
	mov rcx, rax
	mov rax, rbp
	cmp rax, rcx
	jz :0
	mov rax, 0x01
	jmp :1
0:	mov rax, 0x00
1:	add rsp, 0x48
	pop r12
	pop rbp
	pop rbx
	ret
memcpy: