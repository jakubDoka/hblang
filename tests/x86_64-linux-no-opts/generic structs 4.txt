generic structs 4.Array(E = uint, Next = generic structs 4.Array(E = uint, Next = generic structs 4.Array(E = uint, Next = generic structs 4.Array(E = uint)))).get:
	sub rsp, 0x08
	mov [rsp], rdi
	mov rdx, [rsp]
	cmp rdx, 0x00
	setz al
	movzx rax, al
	test al, al
	jz :0
	mov rax, [rsp+0x10]
	jmp :1
0:	mov rdi, [rsp+0x18]
	mov rsi, [rsp+0x20]
	sub rdx, 0x01
	call :generic structs 4.Array(E = uint, Next = generic structs 4.Array(E = uint, Next = generic structs 4.Array(E = uint))).get
1:	add rsp, 0x08
	ret
generic structs 4.Array(E = uint, Next = generic structs 4.Array(E = uint, Next = generic structs 4.Array(E = uint))).get:
	sub rsp, 0x18
	mov [rsp], rdi
	mov [rsp+0x08], rsi
	mov [rsp+0x10], rdx
	mov rsi, [rsp+0x10]
	cmp rsi, 0x00
	setz cl
	movzx rcx, cl
	mov rax, [rsp]
	mov rdi, [rsp+0x08]
	test cl, cl
	jz :0
	jmp :1
0:	sub rsi, 0x01
	call :generic structs 4.Array(E = uint, Next = generic structs 4.Array(E = uint)).get
1:	add rsp, 0x18
	ret
generic structs 4.Array(E = uint, Next = generic structs 4.Array(E = uint)).get:
	sub rsp, 0x18
	mov [rsp], rdi
	mov [rsp+0x08], rsi
	mov rdi, [rsp+0x08]
	cmp rdi, 0x00
	setz cl
	movzx rcx, cl
	mov rax, [rsp]
	test cl, cl
	jz :0
	jmp :1
0:	sub rdi, 0x01
	call :generic structs 4.Array(E = uint).get
1:	add rsp, 0x18
	ret
generic structs 4.Array(E = uint).get:
	ud2
main:
	push rbx
	push rbp
	push r12
	push r13
	push r14
	sub rsp, 0x38
	lea rax, [rsp+0x18]
	mov r14, rax
	mov qword ptr [rsp+0x18], 0x01
	mov qword ptr [rsp+0x20], 0x02
	mov qword ptr [rsp+0x28], 0x03
	mov rax, [rsp+0x28]
	mov [rsp+0x28], rax
	lea rbx, [rsp]
	mov rcx, rbx
	mov rax, 0x18
	mov r13, rax
	mov rsi, r14
	mov rdx, r13
	mov rdi, rcx
	call :memcpy
	mov rax, 0x00
	mov rdi, rax
	call :generic structs 4.Array(E = uint, Next = generic structs 4.Array(E = uint, Next = generic structs 4.Array(E = uint, Next = generic structs 4.Array(E = uint)))).get
	mov r12, rax
	lea rbx, [rsp]
	mov rax, rbx
	mov rsi, r14
	mov rdx, r13
	mov rdi, rax
	call :memcpy
	mov rax, 0x01
	mov rdi, rax
	call :generic structs 4.Array(E = uint, Next = generic structs 4.Array(E = uint, Next = generic structs 4.Array(E = uint, Next = generic structs 4.Array(E = uint)))).get
	mov rbp, rax
	lea rbx, [rsp]
	mov rax, rbx
	mov rdi, rax
	mov rsi, r14
	mov rdx, r13
	call :memcpy
	mov rax, 0x02
	mov rdi, rax
	call :generic structs 4.Array(E = uint, Next = generic structs 4.Array(E = uint, Next = generic structs 4.Array(E = uint, Next = generic structs 4.Array(E = uint)))).get
	mov rdx, rax
	mov rax, r12
	mov rcx, rbp
	add rax, rcx
	mov rcx, rdx
	add rax, rcx
	add rsp, 0x38
	pop r14
	pop r13
	pop r12
	pop rbp
	pop rbx
	ret
memcpy: