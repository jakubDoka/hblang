main:
	push rbx
	push rbp
	sub rsp, 0xD0
	lea rbp, [rsp+0xC0]
	mov rax, 0x00
	mov [rbp], al
	mov [rbp+0x01], al
	mov [rbp+0x02], al
	mov [rbp+0x03], al
	mov rax, 0x01
	lea rdx, [rsp+0xC4]
	mov [rdx], al
	mov [rdx+0x01], al
	mov [rdx+0x02], al
	mov [rdx+0x03], al
	mov rbx, 0x04
	mov al, [rbp]
	mov cl, [rdx]
	add rax, rcx
	mov [rbp], al
	mov al, [rbp+0x01]
	mov cl, [rdx+0x01]
	add rax, rcx
	mov [rbp+0x01], al
	mov al, [rbp+0x02]
	mov cl, [rdx+0x02]
	add rax, rcx
	mov [rbp+0x02], al
	mov cl, [rdx+0x03]
	mov al, [rbp+0x03]
	add rax, rcx
	mov [rbp+0x03], al
	mov al, [rbp+0x02]
	mov cl, [rbp+0x01]
	mov dl, [rbp]
	add rax, rcx
	mov cl, [rbp+0x03]
	add rax, rdx
	add rax, rcx
	cmp al, bl
	jz :0
	mov rax, 0x3E9
	jmp :1
0:	mov rsi, 0x01
	lea rcx, [rsp+0x40]
	mov [rcx], rsi
	mov [rcx+0x08], rsi
	lea rdx, [rsp+0x50]
	mov [rdx], rsi
	mov [rdx+0x08], rsi
	mov rax, [rcx]
	mov rbx, [rdx]
	mov rcx, [rcx+0x08]
	mov rdx, [rdx+0x08]
	cmp rax, rbx
	setnz al
	movzx rax, al
	cmp rcx, rdx
	setnz cl
	movzx rcx, cl
	or rax, rcx
	test al, al
	jz :2
	mov rax, 0x3EA
1:	jmp :3
2:	lea rcx, [rsp+0x60]
	mov [rcx], rsi
	mov rbp, 0x02
	mov [rcx+0x08], rbp
	lea rdx, [rsp+0x70]
	mov [rdx], rsi
	mov [rdx+0x08], rsi
	mov rax, [rcx]
	mov rbx, [rdx]
	mov rcx, [rcx+0x08]
	mov rdx, [rdx+0x08]
	cmp rax, rbx
	setz al
	movzx rax, al
	cmp rcx, rdx
	setz cl
	movzx rcx, cl
	and rax, rcx
	test al, al
	jz :4
	mov rax, 0x3EB
3:	jmp :5
4:	lea r9, [rsp+0x80]
	mov [r9], rsi
	mov [r9+0x08], rbp
	lea r8, [rsp+0x90]
	mov rax, 0x03
	mov [r8], rax
	mov rax, 0x04
	mov [r8+0x08], rax
	lea rdi, [rsp+0x20]
	lea rsi, [rsp+0xB0]
	lea rbp, [rsp+0xA0]
	lea rbx, [rsp]
	mov rdx, 0x00
	mov rax, [r9]
	mov rcx, [r8]
	add rax, rcx
	mov [rbx], rax
	mov rax, [r9+0x08]
	mov rcx, [r8+0x08]
	add rax, rcx
	mov [rbx+0x08], rax
	mov rax, [r8]
	mov rcx, [r9]
	sub rax, rcx
	mov [rbx+0x10], rax
	mov rax, [r8+0x08]
	mov rcx, [r9+0x08]
	sub rax, rcx
	mov [rbx+0x18], rax
	mov [rbp], rdx
	mov [rbp+0x08], rdx
	mov rax, [rbp]
	mov rcx, [r8]
	sub rax, rcx
	mov [rdi], rax
	mov rax, [rbp+0x08]
	mov rcx, [r8+0x08]
	sub rax, rcx
	mov [rdi+0x08], rax
	mov rax, [r9]
	mov [rdi+0x10], rax
	mov rax, [r9+0x08]
	mov [rdi+0x18], rax
	mov rax, [rdi]
	mov rcx, [rbx]
	add rax, rcx
	mov [rdi], rax
	mov rcx, [rbx+0x08]
	mov rax, [rdi+0x08]
	add rax, rcx
	mov [rdi+0x08], rax
	mov rax, [rdi+0x10]
	mov rcx, [rbx+0x10]
	add rax, rcx
	mov [rdi+0x10], rax
	mov rax, [rdi+0x18]
	mov rcx, [rbx+0x18]
	add rax, rcx
	mov [rdi+0x18], rax
	mov rcx, [rdi+0x10]
	mov rax, [rdi]
	add rax, rcx
	mov [rsi], rax
	mov rax, [rdi+0x08]
	mov rcx, [rdi+0x18]
	add rax, rcx
	mov [rsi+0x08], rax
	mov rax, [rsi]
	mov rcx, [rsi+0x08]
	add rax, rcx
5:	add rsp, 0xD0
	pop rbp
	pop rbx
	ret