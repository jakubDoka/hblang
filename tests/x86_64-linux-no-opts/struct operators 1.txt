main:
	push rbx
	push rbp
	sub rsp, 0xD0
	mov byte ptr [rsp+0xC0], 0x00
	mov byte ptr [rsp+0xC1], 0x00
	mov byte ptr [rsp+0xC2], 0x00
	mov byte ptr [rsp+0xC3], 0x00
	mov byte ptr [rsp+0xC4], 0x01
	mov byte ptr [rsp+0xC5], 0x01
	mov byte ptr [rsp+0xC6], 0x01
	mov byte ptr [rsp+0xC7], 0x01
	mov rbx, 0x04
	mov al, [rsp+0xC0]
	mov cl, [rsp+0xC4]
	add eax, ecx
	mov [rsp+0xC0], al
	mov al, [rsp+0xC1]
	mov cl, [rsp+0xC5]
	add eax, ecx
	mov [rsp+0xC1], al
	mov al, [rsp+0xC2]
	mov cl, [rsp+0xC6]
	add eax, ecx
	mov [rsp+0xC2], al
	mov al, [rsp+0xC3]
	mov cl, [rsp+0xC7]
	add eax, ecx
	mov [rsp+0xC3], al
	mov al, [rsp+0xC2]
	mov cl, [rsp+0xC1]
	mov dl, [rsp+0xC0]
	add eax, ecx
	mov cl, [rsp+0xC3]
	add eax, edx
	add eax, ecx
	cmp al, bl
	jz :0
	mov rax, 0x3E9
	jmp :1
0:	mov rsi, 0x01
	mov [rsp+0x40], rsi
	mov [rsp+0x48], rsi
	mov [rsp+0x50], rsi
	mov [rsp+0x58], rsi
	mov rcx, [rsp+0x48]
	mov rbx, [rsp+0x58]
	mov rax, [rsp+0x40]
	mov rdx, [rsp+0x50]
	cmp rcx, rbx
	setnz cl
	movzx rcx, cl
	cmp rax, rdx
	setnz al
	movzx rax, al
	or eax, ecx
	test al, al
	jz :2
	mov rax, 0x3EA
1:	jmp :3
2:	mov [rsp+0x60], rsi
	mov rbp, 0x02
	mov [rsp+0x68], rbp
	mov [rsp+0x70], rsi
	mov [rsp+0x78], rsi
	mov rcx, [rsp+0x68]
	mov rbx, [rsp+0x78]
	mov rax, [rsp+0x60]
	mov rdx, [rsp+0x70]
	cmp rcx, rbx
	setz cl
	movzx rcx, cl
	cmp rax, rdx
	setz al
	movzx rax, al
	and eax, ecx
	test al, al
	jz :4
	mov rax, 0x3EB
3:	jmp :5
4:	mov [rsp+0x80], rsi
	mov [rsp+0x88], rbp
	mov rax, 0x03
	mov [rsp+0x90], rax
	mov rax, 0x04
	mov [rsp+0x98], rax
	mov rdx, 0x00
	mov rax, [rsp+0x80]
	mov rcx, [rsp+0x90]
	add rax, rcx
	mov [rsp], rax
	mov rax, [rsp+0x88]
	mov rcx, [rsp+0x98]
	add rax, rcx
	mov [rsp+0x08], rax
	mov rax, [rsp+0x90]
	mov rcx, [rsp+0x80]
	sub rax, rcx
	mov [rsp+0x10], rax
	mov rax, [rsp+0x98]
	mov rcx, [rsp+0x88]
	sub rax, rcx
	mov [rsp+0x18], rax
	mov [rsp+0xA0], rdx
	mov [rsp+0xA8], rdx
	mov rax, [rsp+0xA0]
	mov rcx, [rsp+0x90]
	sub rax, rcx
	mov [rsp+0x20], rax
	mov rax, [rsp+0xA8]
	mov rcx, [rsp+0x98]
	sub rax, rcx
	mov [rsp+0x28], rax
	mov rax, [rsp+0x80]
	mov [rsp+0x30], rax
	mov rax, [rsp+0x88]
	mov [rsp+0x38], rax
	mov rax, [rsp+0x20]
	mov rcx, [rsp]
	add rax, rcx
	mov [rsp+0x20], rax
	mov rax, [rsp+0x28]
	mov rcx, [rsp+0x08]
	add rax, rcx
	mov [rsp+0x28], rax
	mov rcx, [rsp+0x10]
	mov rax, [rsp+0x30]
	add rax, rcx
	mov [rsp+0x30], rax
	mov rcx, [rsp+0x18]
	mov rax, [rsp+0x38]
	add rax, rcx
	mov [rsp+0x38], rax
	mov rcx, [rsp+0x30]
	mov rax, [rsp+0x20]
	add rax, rcx
	mov [rsp+0xB0], rax
	mov rax, [rsp+0x28]
	mov rcx, [rsp+0x38]
	add rax, rcx
	mov [rsp+0xB8], rax
	mov rax, [rsp+0xB0]
	mov rcx, [rsp+0xB8]
	add rax, rcx
5:	add rsp, 0xD0
	pop rbp
	pop rbx
	ret