main:
	sub rsp, 0xB0
	mov byte ptr [rsp+0xA8], 0x01
	mov byte ptr [rsp+0xA9], 0x02
	mov byte ptr [rsp+0xAA], 0x03
	mov byte ptr [rsp+0xAB], 0x04
	lea rax, [rsp+0xA8]
	mov [rsp+0x80], rax
	mov qword ptr [rsp+0x88], 0x04
	mov [rsp], rax
	mov qword ptr [rsp+0x08], 0x04
	mov [rsp+0x10], rax
	mov qword ptr [rsp+0x18], 0x02
	lea rcx, [rsp+0xA8]
	add rcx, 0x02
	mov [rsp+0x20], rcx
	mov qword ptr [rsp+0x28], 0x02
	add rax, 0x01
	mov [rsp+0x30], rax
	mov qword ptr [rsp+0x38], 0x02
	mov rcx, [rsp+0x88]
	mov rax, [rsp+0x80]
	mov [rsp+0x40], rax
	mov [rsp+0x48], rcx
	mov rax, [rsp+0x80]
	mov [rsp+0x50], rax
	mov qword ptr [rsp+0x58], 0x02
	mov rcx, [rsp+0x80]
	mov rax, [rsp+0x88]
	add rcx, 0x02
	mov [rsp+0x60], rcx
	sub rax, 0x02
	mov [rsp+0x68], rax
	mov rax, [rsp+0x80]
	add rax, 0x01
	mov [rsp+0x70], rax
	mov qword ptr [rsp+0x78], 0x02
	mov qword ptr [rsp+0x90], 0x00
	mov qword ptr [rsp+0x98], 0x00
	mov rdi, 0x10
2:	mov rax, [rsp+0x98]
	cmp rax, 0x08
	setz al
	movzx rax, al
	test al, al
	jz :0
	mov rax, [rsp+0x90]
	add rsp, 0xB0
	ret
0:	mov qword ptr [rsp+0xA0], 0x00
3:	mov rax, [rsp+0x98]
	lea rsi, [rsp]
	mov rcx, rax
	imul rcx, rdi
	add rsi, rcx
	mov rdx, [rsp+0xA0]
	mov rcx, [rsi+0x08]
	cmp rdx, rcx
	jnz :1
	add rax, 0x01
	mov [rsp+0x98], rax
	jmp :2
1:	mov rax, [rsi]
	add rax, rdx
	mov cl, [rax]
	mov rax, [rsp+0x90]
	movzx rcx, cl
	add rax, rcx
	mov [rsp+0x90], rax
	mov rax, [rsp+0xA0]
	add rax, 0x01
	mov [rsp+0xA0], rax
	jmp :3