main:
	sub rsp, 0xB0
	mov byte ptr [rsp+0xA8], 0x01
	mov byte ptr [rsp+0xA9], 0x02
	mov byte ptr [rsp+0xAA], 0x03
	mov byte ptr [rsp+0xAB], 0x04
	mov rax, 0x10
	lea rcx, [rsp+0xA8]
	mov [rsp+0x80], rcx
	mov qword ptr [rsp+0x88], 0x04
	mov [rsp], rcx
	mov qword ptr [rsp+0x08], 0x04
	mov [rsp+0x10], rcx
	mov qword ptr [rsp+0x18], 0x02
	lea rcx, [rsp+0xA8]
	add rcx, 0x02
	mov [rsp+0x20], rcx
	mov qword ptr [rsp+0x28], 0x02
	lea rcx, [rsp+0xA8]
	inc rcx
	mov [rsp+0x30], rcx
	mov qword ptr [rsp+0x38], 0x02
	mov rdx, [rsp+0x80]
	mov rcx, [rsp+0x88]
	mov [rsp+0x40], rdx
	mov [rsp+0x48], rcx
	mov rcx, [rsp+0x80]
	mov [rsp+0x50], rcx
	mov qword ptr [rsp+0x58], 0x02
	mov rdx, [rsp+0x80]
	mov rcx, [rsp+0x88]
	add rdx, 0x02
	mov [rsp+0x60], rdx
	sub rcx, 0x02
	mov [rsp+0x68], rcx
	mov rcx, [rsp+0x80]
	inc rcx
	mov [rsp+0x70], rcx
	mov qword ptr [rsp+0x78], 0x02
	mov qword ptr [rsp+0x90], 0x00
	mov qword ptr [rsp+0x98], 0x00
2:	mov rcx, [rsp+0x98]
	cmp rcx, 0x08
	setz cl
	movzx rcx, cl
	test cl, cl
	jz :0
	mov rax, [rsp+0x90]
	add rsp, 0xB0
	ret
0:	mov qword ptr [rsp+0xA0], 0x00
3:	mov rcx, [rsp+0x98]
	mov rdi, [rsp+0xA0]
	mov rdx, rcx
	imul rdx, rax
	lea rsi, [rsp]
	add rsi, rdx
	mov rdx, [rsi+0x08]
	cmp rdi, rdx
	jnz :1
	inc rcx
	mov [rsp+0x98], rcx
	jmp :2
1:	mov rdx, [rsi]
	mov rcx, [rsp+0x90]
	add rdx, rdi
	mov dl, [rdx]
	movzx rdx, dl
	add rcx, rdx
	mov [rsp+0x90], rcx
	mov rcx, [rsp+0xA0]
	inc rcx
	mov [rsp+0xA0], rcx
	jmp :3